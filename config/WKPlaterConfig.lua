-- Plater配置
WKPlaterConfig_Default = {
    
}

-- Simple Style
WKPlaterConfig_Name_SimpleStyle = "Simple Style"
WKPlaterConfig_SimpleStyle = {
    ["ui_parent_buff_special_level"] = 10,
    ["aura_breakline_space"] = 4,
    ["script_data"] = {
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
    ["Time"] = 1669327144,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
    ["Enabled"] = true,
    ["Revision"] = 632,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Add the buff name in the trigger box.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
    ["SpellIds"] = {
    398151,
    377738,
    378149,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option3",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "glowEnabled",
    ["Value"] = false,
    ["Name"] = "Glow Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "glowColor",
    ["Value"] = {
    0.403921568627451,
    0.00392156862745098,
    0,
    1,
    },
    ["Name"] = "Glow Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "dotsEnabled",
    ["Value"] = true,
    ["Name"] = "Dots Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dots Color",
    ["Value"] = {
    1,
    0.3215686274509804,
    0,
    1,
    },
    ["Key"] = "dotsColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    ["version"] = -1,
    ["Name"] = "Aura - Buff Alert [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
    ["Time"] = 1651071775,
    ["NpcNames"] = {
    "174773",
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
    ["Icon"] = 135945,
    ["semver"] = "",
    ["Enabled"] = false,
    ["Revision"] = 197,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Time to Die",
    ["Value"] = "Time to Die",
    ["Key"] = "option12",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 50,
    ["Desc"] = "",
    ["Min"] = 10,
    ["Key"] = "bgWidth",
    ["Value"] = 27,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Width",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Background Color",
    ["Value"] = {
    0.50588235294118,
    0.070588235294118,
    1,
    1,
    },
    ["Key"] = "bgColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 24,
    ["Desc"] = "",
    ["Min"] = 7,
    ["Key"] = "textSize",
    ["Value"] = 8,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Text Size",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Text Color",
    ["Value"] = {
    1,
    0.5843137254902,
    0,
    1,
    },
    ["Key"] = "textColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 7",
    ["Value"] = 0,
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Targeting",
    ["Value"] = "Targeting",
    ["Key"] = "option11",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show Target instead of Name",
    ["Value"] = true,
    ["Key"] = "switchTargetName",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Color if targeting You",
    ["Value"] = true,
    ["Key"] = "useTargetingColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Color if targeting You",
    ["Value"] = {
    0.070588235294118,
    0.61960784313725,
    0,
    1,
    },
    ["Key"] = "targetingColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 11",
    ["Value"] = 0,
    ["Key"] = "option11",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
    ["Name"] = "M+ Spiteful",
    ["Author"] = "Symantec-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Time to die Spiteful affix",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
    ["Time"] = 1673994690,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
    ["Enabled"] = true,
    ["Revision"] = 828,
    ["semver"] = "",
    ["Author"] = "Bombad�o-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
    ["SpellIds"] = {
    373046,
    372863,
    164686,
    153072,
    153680,
    196497,
    388886,
    387145,
    384365,
    152964,
    398150,
    152801,
    397878,
    397914,
    183263,
    3636,
    376171,
    350687,
    372735,
    373017,
    392488,
    257732,
    256060,
    257899,
    384633,
    374339,
    395694,
    391634,
    372701,
    369328,
    265487,
    413044,
    183526,
    88194,
    87762,
    413385,
    411001,
    378282,
    384161,
    259572,
    255371,
    427460,
    429172,
    426500,
    413607,
    412922,
    417481,
    201399,
    411994,
    415770,
    260907,
    260703,
    260741,
    265876,
    263959,
    266225,
    253517,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 1",
    ["Value"] = 0,
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 2",
    ["Value"] = "Plays a big animation when the cast start.",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 4",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Flash",
    ["Value"] = "Flash:",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1.2,
    ["Desc"] = "How long is the flash played when the cast starts.",
    ["Min"] = 0.1,
    ["Name"] = "Flash Duration",
    ["Value"] = 0.8,
    ["Key"] = "flashDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 1,
    ["Name"] = "Flash Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "flashColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the Flash",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 7",
    ["Value"] = 0,
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Shake:",
    ["Name"] = "Shake",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 0.5,
    ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
    ["Min"] = 0.1,
    ["Name"] = "Shake Duration",
    ["Value"] = 0.2,
    ["Key"] = "shakeDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 1,
    ["Name"] = "Shake Amplitude",
    ["Value"] = 5,
    ["Key"] = "shakeAmplitude",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Name"] = "Shake Frequency",
    ["Value"] = 40,
    ["Key"] = "shakeFrequency",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 13",
    ["Value"] = 0,
    ["Key"] = "option13",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Dot Animation",
    ["Value"] = "Dot Animation:",
    ["Key"] = "option14",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    0.5647058823529412,
    0.5647058823529412,
    0.5647058823529412,
    1,
    },
    ["Key"] = "dotColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Adjust the color of the dots around the nameplate",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
    ["Min"] = -10,
    ["Fraction"] = false,
    ["Value"] = 8,
    ["Key"] = "xOffset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Dot X Offset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
    ["Min"] = -10,
    ["Name"] = "Dot Y Offset",
    ["Value"] = 3,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "yOffset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 19",
    ["Value"] = "Cast Bar",
    ["Key"] = "option19",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Use Cast Bar Color",
    ["Value"] = true,
    ["Key"] = "useCastbarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Use cast bar color.",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Cast Bar Color",
    ["Value"] = {
    0.4117647058823529,
    1,
    0,
    1,
    },
    ["Key"] = "castBarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Cast bar color.",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Very Important [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
    ["Time"] = 1669327144,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
    ["Enabled"] = true,
    ["Revision"] = 368,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Desc"] = "Add the debuff name in the trigger box.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option3",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "glowEnabled",
    ["Value"] = false,
    ["Name"] = "Glow Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "glowColor",
    ["Value"] = {
    0.403921568627451,
    0.00392156862745098,
    0,
    1,
    },
    ["Name"] = "Glow Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "dotsEnabled",
    ["Value"] = true,
    ["Name"] = "Dots Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dots Color",
    ["Value"] = {
    1,
    0.3215686274509804,
    0,
    1,
    },
    ["Key"] = "dotsColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    ["version"] = -1,
    ["Name"] = "Aura - Debuff Alert [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
    ["OptionsValues"] = {
    ["castColor"] = {
    {
    "200682",
    "darkslateblue",
    },
    {
    "192307",
    "goldenrod",
    },
    {
    "196838",
    "maroon",
    },
    {
    "193827",
    "darkgreen",
    },
    {
    "194043",
    "darkgreen",
    },
    {
    "156718",
    "DRUID",
    },
    {
    "395859",
    "ROGUE",
    },
    },
    ["castBarHeight"] = 3,
    ["healthBarColor"] = {
    1,
    0.5843137254902,
    0,
    1,
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
    ["Time"] = 1670790652,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
    ["Enabled"] = true,
    ["Revision"] = 694,
    ["semver"] = "",
    ["Author"] = "Bombad�o-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
    ["SpellIds"] = {
    383823,
    382670,
    388537,
    372851,
    200682,
    192307,
    196838,
    193827,
    194043,
    209410,
    211464,
    361180,
    156718,
    395859,
    358320,
    374045,
    386757,
    367500,
    370225,
    376200,
    372107,
    388923,
    376934,
    384899,
    373960,
    374724,
    385551,
    259732,
    373424,
    373084,
    87618,
    255041,
    428926,
    76634,
    200050,
    197546,
    198079,
    199193,
    266181,
    253544,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 1",
    ["Value"] = 0,
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 2",
    ["Value"] = "Plays a special animation showing the explosion time.",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 3",
    ["Value"] = 0,
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "Increases the health bar height by this value",
    ["Min"] = 0,
    ["Name"] = "Health Bar Height Mod",
    ["Value"] = 3,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "castBarHeight",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = true,
    ["Key"] = "useNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change Nameplate Color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0.5843137254901961,
    0,
    1,
    },
    ["Key"] = "healthBarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 7",
    ["Value"] = 0,
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useCastbarColor",
    ["Value"] = true,
    ["Name"] = "Use Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show an arrow above Use Cast Bar Color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "castBarColor",
    ["Value"] = {
    1,
    0.431372,
    0,
    1,
    },
    ["Name"] = "Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Cast Bar Color",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option7",
    ["Value"] = 0,
    ["Name"] = "Option 7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Arrow:",
    ["Value"] = "Arrow:",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "showArrow",
    ["Value"] = true,
    ["Name"] = "Show Arrow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Arrow alpha.",
    ["Min"] = 0,
    ["Name"] = "Arrow Alpha",
    ["Value"] = 0.5,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "arrowAlpha",
    },
    {
    ["Type"] = 2,
    ["Max"] = 12,
    ["Desc"] = "Arrow Width.",
    ["Min"] = 4,
    ["Key"] = "arrowWidth",
    ["Value"] = 8,
    ["Name"] = "Arrow Width",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 12,
    ["Desc"] = "Arrow Height.",
    ["Min"] = 4,
    ["Name"] = "Arrow Height",
    ["Value"] = 8,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "arrowHeight",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 13",
    ["Value"] = 0,
    ["Key"] = "option13",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Dot Animation:",
    ["Value"] = "Dot Animation:",
    ["Key"] = "option12",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    1,
    0.615686274509804,
    0,
    1,
    },
    ["Key"] = "dotColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Adjust the color of the dot animation.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dot X Offset",
    ["Min"] = -10,
    ["Fraction"] = false,
    ["Value"] = 4,
    ["Name"] = "Dot X Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "xOffset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dot Y Offset",
    ["Min"] = -10,
    ["Name"] = "Dot Y Offset",
    ["Value"] = 3,
    ["Key"] = "yOffset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 7,
    ["Name"] = "Color List by SpellId",
    ["Value"] = {
    {
    "200682",
    "darkslateblue",
    },
    {
    "192307",
    "goldenrod",
    },
    {
    "196838",
    "maroon",
    },
    {
    "193827",
    "darkgreen",
    },
    {
    "194043",
    "darkgreen",
    },
    {
    "156718",
    "DRUID",
    },
    {
    "395859",
    "ROGUE",
    },
    },
    ["Key"] = "castColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Ultra Important [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    ["useCastbarColor"] = true,
    ["castbarColor"] = {
    1,
    0.43137254901961,
    0,
    1,
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
    ["Time"] = 1670203603,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
    ["Enabled"] = true,
    ["Revision"] = 1194,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
    ["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    396640,
    372743,
    377389,
    396812,
    388392,
    387955,
    386546,
    377503,
    384808,
    386024,
    387615,
    387606,
    225100,
    211401,
    211470,
    215433,
    192563,
    198959,
    152818,
    156776,
    398206,
    153524,
    396073,
    396018,
    345202,
    377950,
    372223,
    384194,
    392451,
    392924,
    397889,
    209413,
    207980,
    257397,
    257736,
    382787,
    374699,
    377402,
    369602,
    369465,
    369400,
    381593,
    265091,
    265433,
    382791,
    376780,
    225573,
    278444,
    164887,
    168082,
    76813,
    227913,
    265368,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option3",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useCastbarColor",
    ["Value"] = true,
    ["Name"] = "Cast Bar Color Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "When enabled, changes the cast bar color,",
    },
    {
    ["Type"] = 1,
    ["Key"] = "castbarColor",
    ["Value"] = {
    1,
    0.4313725490196079,
    0,
    1,
    },
    ["Name"] = "Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the cast bar.",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option7",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
    ["Min"] = 0.05,
    ["Fraction"] = true,
    ["Value"] = 0.4,
    ["Key"] = "flashDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Flash Duration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Increases the cast bar height by this value",
    ["Min"] = 0,
    ["Fraction"] = false,
    ["Value"] = 5,
    ["Key"] = "castBarHeight",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Cast Bar Height Mod",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
    ["Min"] = 0.1,
    ["Fraction"] = true,
    ["Value"] = 0.2,
    ["Key"] = "shakeDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Duration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 2,
    ["Name"] = "Shake Amplitude",
    ["Value"] = 8,
    ["Key"] = "shakeAmplitude",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Name"] = "Shake Frequency",
    ["Value"] = 40,
    ["Key"] = "shakeFrequency",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Big Alert [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
    ["Time"] = 1669325410,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
    ["Enabled"] = true,
    ["Revision"] = 662,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
    ["SpellIds"] = {
    376851,
    396044,
    381517,
    373932,
    397801,
    208165,
    392576,
    198750,
    387843,
    387411,
    211299,
    198595,
    198934,
    198962,
    156722,
    281420,
    274383,
    259092,
    367521,
    374544,
    385039,
    382474,
    369823,
    377500,
    260879,
    186269,
    378818,
    371875,
    372225,
    200658,
    266036,
    265407,
    164965,
    429176,
    428526,
    418200,
    407124,
    200630,
    415437,
    264050,
    267824,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Option 1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Plays a small animation when the cast start.",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 2",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option3",
    ["Value"] = 0,
    ["Name"] = "Option 3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1.2,
    ["Desc"] = "How long is the flash played when the cast starts.",
    ["Min"] = 0.1,
    ["Fraction"] = true,
    ["Value"] = 0.6,
    ["Key"] = "flashDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Flash Duration",
    },
    {
    ["Type"] = 1,
    ["Key"] = "flashColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Flash Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the Flash",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Small Alert [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
    ["Time"] = 1661403639,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
    ["Icon"] = -6560,
    ["semver"] = "",
    ["Enabled"] = true,
    ["Revision"] = 385,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 17",
    ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
    ["Key"] = "option17",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Blink Enabled",
    ["Value"] = true,
    ["Key"] = "blinkEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable blink",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Glow Enabled",
    ["Value"] = true,
    ["Key"] = "glowEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable glows",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change NamePlate Color",
    ["Value"] = false,
    ["Key"] = "changeNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'true' to enable nameplate color change",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the blink effect only",
    ["Min"] = 1,
    ["Key"] = "timeleftToBlink",
    ["Value"] = 3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Timeleft to Blink",
    },
    {
    ["Type"] = 2,
    ["Max"] = 3,
    ["Desc"] = "time to complete a blink loop",
    ["Min"] = 0.5,
    ["Key"] = "blinkSpeed",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Blink Speed",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
    ["Min"] = 0.1,
    ["Key"] = "blinkMaxAlpha",
    ["Value"] = 0.6,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Blink Max Alpha",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Blink Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "blinkColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color of the blink",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    0.28627450980392,
    0.003921568627451,
    0,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "nameplate color if ChangeNameplateColor is true",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Timer Color Enabled",
    ["Value"] = true,
    ["Key"] = "timerColorEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Key"] = "timeLeftWarning",
    ["Value"] = 8,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Time Left Warning",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Key"] = "timeLeftCritical",
    ["Value"] = 3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Time Left Critical",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Warning Color",
    ["Value"] = {
    1,
    0.87058823529412,
    0,
    1,
    },
    ["Key"] = "warningColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left entered in a warning zone",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Critical Color",
    ["Value"] = {
    1,
    0.074509803921569,
    0,
    1,
    },
    ["Key"] = "criticalColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left is critical",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
    ["Name"] = "Aura - Blink by Time Left [Plater]",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1661011719,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
    ["Icon"] = -2530,
    ["semver"] = "",
    ["Enabled"] = true,
    ["Revision"] = 238,
    ["Options"] = {
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Name"] = "Countdown",
    ["Author"] = "Aelerolor-Torghast",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
    ["Time"] = 1670202265,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
    ["Enabled"] = true,
    ["Revision"] = 620,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
    ["SpellIds"] = {
    375943,
    385958,
    388623,
    377034,
    374361,
    381525,
    386660,
    385578,
    384699,
    153501,
    153686,
    154442,
    192018,
    219488,
    372087,
    391726,
    391723,
    377383,
    388976,
    370764,
    387067,
    391118,
    391136,
    382233,
    209027,
    212031,
    207261,
    207979,
    198888,
    199805,
    199050,
    191508,
    152792,
    153395,
    209495,
    257426,
    255952,
    257870,
    413147,
    383107,
    377559,
    388060,
    376170,
    384524,
    375351,
    390111,
    369791,
    369573,
    369563,
    369335,
    369061,
    375727,
    265016,
    265019,
    260793,
    260292,
    272457,
    272609,
    269843,
    183465,
    226296,
    188169,
    183088,
    410873,
    411012,
    88308,
    382708,
    375251,
    375439,
    372311,
    373742,
    372201,
    374533,
    377204,
    201226,
    204667,
    198379,
    200768,
    253239,
    250258,
    255567,
    194956,
    427510,
    426645,
    412505,
    412129,
    419351,
    401482,
    404916,
    200345,
    200261,
    198641,
    265372,
    271174,
    264694,
    264923,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Option 1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option4",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option3",
    ["Value"] = 0,
    ["Name"] = "Option 3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Set the alpha of the moving arrow",
    ["Min"] = 0,
    ["Key"] = "arrowAlpha",
    ["Value"] = 0.73,
    ["Name"] = "Arrow Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Time that takes for an arrow to travel from the to right.",
    ["Min"] = 0,
    ["Key"] = "animSpeed",
    ["Value"] = 0.2,
    ["Name"] = "Animation Speed",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 4,
    ["Key"] = "desaturateArrow",
    ["Value"] = false,
    ["Name"] = "Use White Arrow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "If enabled, the arrow color will be desaturated.",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Frontal Cone [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
    ["Time"] = 1661092958,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
    ["Icon"] = 1029718,
    ["semver"] = "",
    ["Enabled"] = true,
    ["Revision"] = 313,
    ["Options"] = {
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
    ["Name"] = "Fixate [Plater]",
    ["Author"] = "Celian-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
    ["Desc"] = "Show above the nameplate who is the player fixated",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1661092973,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
    ["Icon"] = 136048,
    ["semver"] = "",
    ["Enabled"] = true,
    ["Revision"] = 296,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 1",
    ["Value"] = 0,
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "script desc",
    ["Value"] = "Show the power of the unit above the nameplate.",
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "add trigger",
    ["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 2",
    ["Value"] = 0,
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show at 80% of Energy",
    ["Value"] = true,
    ["Key"] = "showLater",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 2",
    ["Value"] = 0,
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 32,
    ["Desc"] = "Text size.",
    ["Min"] = 8,
    ["Key"] = "fontSize",
    ["Value"] = 16,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Text Size",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Font Color",
    ["Value"] = {
    0.80392156862745,
    0.80392156862745,
    0.80392156862745,
    1,
    },
    ["Key"] = "fontColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the text.",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Enable Text Outline",
    ["Value"] = true,
    ["Key"] = "outline",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "If enabled, the text uses outline.",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
    ["Name"] = "Unit - Show Energy [Plater]",
    ["Author"] = "Celian-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Show the energy amount above the nameplate.",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1661092958,
    ["url"] = "",
    ["Icon"] = 841383,
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
    ["Revision"] = 319,
    ["semver"] = "",
    ["NpcNames"] = {
    },
    ["Options"] = {
    },
    ["Author"] = "Tecno-Azralon",
    ["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
    ["version"] = -1,
    ["Prio"] = 99,
    ["Name"] = "Fixate On You [Plater]",
    ["PlaterCore"] = 1,
    ["SpellIds"] = {
    "spawn of g'huun",
    "smuggled crawg",
    "sergeant bainbridge",
    "blacktooth scrapper",
    "irontide grenadier",
    "feral bloodswarmer",
    "earthrager",
    "crawler mine",
    "rezan",
    },
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
    ["Enabled"] = true,
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    ["timerList"] = {
    {
    "350421",
    "5",
    },
    {
    "355787",
    "15",
    },
    {
    "348513",
    "14",
    },
    {
    "348513",
    "14",
    },
    },
    ["castbarColor"] = {
    1,
    0.43137254901961,
    0,
    1,
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
    ["Time"] = 1670203758,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
    ["Enabled"] = true,
    ["Revision"] = 1213,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
    ["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Cast start animation settings",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useCastbarColor",
    ["Value"] = true,
    ["Name"] = "Cast Bar Color Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "When enabled, changes the cast bar color,",
    },
    {
    ["Type"] = 1,
    ["Key"] = "castbarColor",
    ["Value"] = {
    1,
    0.4313725490196079,
    0,
    1,
    },
    ["Name"] = "Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the cast bar.",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option7",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
    ["Min"] = 0.05,
    ["Name"] = "Flash Duration",
    ["Value"] = 0.4,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "flashDuration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Increases the cast bar height by this value",
    ["Min"] = 0,
    ["Name"] = "Cast Bar Height Mod",
    ["Value"] = 5,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "castBarHeight",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
    ["Min"] = 0.1,
    ["Name"] = "Shake Duration",
    ["Value"] = 0.2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "shakeDuration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 2,
    ["Fraction"] = false,
    ["Value"] = 8,
    ["Name"] = "Shake Amplitude",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "shakeAmplitude",
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Fraction"] = false,
    ["Value"] = 40,
    ["Name"] = "Shake Frequency",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "shakeFrequency",
    },
    {
    ["Type"] = 7,
    ["Name"] = "Timer (Key is SpellId and Value is Time)",
    ["Value"] = {
    },
    ["Key"] = "timerList",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Alert + Timer [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
    ["Time"] = 1669339628,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
    ["Enabled"] = true,
    ["Revision"] = 878,
    ["semver"] = "",
    ["Author"] = "Bombad�o-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Highlight the target name",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 1",
    ["Value"] = 0,
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 2",
    ["Value"] = "Shows the target name in a separate box",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 4",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Flash",
    ["Value"] = "Flash:",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1.2,
    ["Desc"] = "How long is the flash played when the cast starts.",
    ["Min"] = 0.1,
    ["Fraction"] = true,
    ["Value"] = 0.8,
    ["Key"] = "flashDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Flash Duration",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Flash Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "flashColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the Flash",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 7",
    ["Value"] = 0,
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Shake:",
    ["Name"] = "Shake",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 0.5,
    ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
    ["Min"] = 0.1,
    ["Fraction"] = true,
    ["Value"] = 0.2,
    ["Key"] = "shakeDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Duration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 1,
    ["Fraction"] = false,
    ["Value"] = 5,
    ["Key"] = "shakeAmplitude",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Amplitude",
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Fraction"] = false,
    ["Value"] = 40,
    ["Key"] = "shakeFrequency",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Frequency",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 13",
    ["Value"] = 0,
    ["Key"] = "option13",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Dot Animation",
    ["Value"] = "Dot Animation:",
    ["Key"] = "option14",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    0.5647058823529412,
    0.5647058823529412,
    0.5647058823529412,
    1,
    },
    ["Key"] = "dotColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Adjust the color of the dots around the nameplate",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
    ["Min"] = -10,
    ["Name"] = "Dot X Offset",
    ["Value"] = 8,
    ["Key"] = "xOffset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
    ["Min"] = -10,
    ["Key"] = "yOffset",
    ["Value"] = 3,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Dot Y Offset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option18",
    ["Value"] = 0,
    ["Name"] = "blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 19",
    ["Value"] = "Cast Bar",
    ["Key"] = "option19",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Use Cast Bar Color",
    ["Value"] = true,
    ["Key"] = "useCastbarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Use cast bar color.",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Cast Bar Color",
    ["Value"] = {
    0.4117647058823529,
    1,
    0,
    1,
    },
    ["Key"] = "castBarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Cast bar color.",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option27",
    ["Value"] = 0,
    ["Name"] = "Option 27",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option28",
    ["Value"] = "Target Options",
    ["Name"] = "Option 28",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 32,
    ["Desc"] = "",
    ["Min"] = 8,
    ["Fraction"] = false,
    ["Value"] = 14,
    ["Key"] = "targetNameSize",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Text Size",
    },
    {
    ["Type"] = 4,
    ["Key"] = "colorByClass",
    ["Value"] = true,
    ["Name"] = "Use Class Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "textColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Text Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "targetBgColor",
    ["Value"] = {
    0,
    0,
    0,
    0.9846720322966576,
    },
    ["Name"] = "Background Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "targetBgBorderColor",
    ["Value"] = {
    0,
    0,
    0,
    1,
    },
    ["Name"] = "Border Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 160,
    ["Desc"] = "",
    ["Min"] = 30,
    ["Fraction"] = false,
    ["Value"] = 90,
    ["Key"] = "targetFrameWidth",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Frame Width",
    },
    {
    ["Type"] = 2,
    ["Max"] = 32,
    ["Desc"] = "",
    ["Min"] = 8,
    ["Name"] = "Frame Height",
    ["Value"] = 20,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "targetFrameHeight",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Important Target [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["OptionsValues"] = {
    ["timeLeftWarning"] = 5,
    ["timeleftToBlink"] = 3,
    ["blinkMaxAlpha"] = 0.10000000149012,
    ["nameplateColor"] = {
    1,
    0.3921568627451,
    0.83137254901961,
    1,
    },
    ["timerColorEnabled"] = true,
    ["changeNameplateColor"] = true,
    ["blinkColor"] = {
    0.24705882352941,
    0.77647058823529,
    0.91764705882353,
    1,
    },
    ["blinkSpeed"] = 1,
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
    ["Time"] = 1658029107,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
    ["Icon"] = -2549,
    ["semver"] = "",
    ["Enabled"] = false,
    ["Revision"] = 546,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 17",
    ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
    ["Key"] = "option17",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Blink Enabled",
    ["Value"] = true,
    ["Key"] = "blinkEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable blink",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Glow Enabled",
    ["Value"] = true,
    ["Key"] = "glowEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable glows",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change NamePlate Color",
    ["Value"] = false,
    ["Key"] = "changeNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'true' to enable nameplate color change",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the blink effect only",
    ["Min"] = 1,
    ["Key"] = "timeleftToBlink",
    ["Value"] = 3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Timeleft to Blink",
    },
    {
    ["Type"] = 2,
    ["Max"] = 3,
    ["Desc"] = "time to complete a blink loop",
    ["Min"] = 0.5,
    ["Key"] = "blinkSpeed",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Blink Speed",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
    ["Min"] = 0.1,
    ["Key"] = "blinkMaxAlpha",
    ["Value"] = 0.6,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Blink Max Alpha",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Blink Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "blinkColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color of the blink",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    0.28627450980392,
    0.003921568627451,
    0,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "nameplate color if ChangeNameplateColor is true",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Timer Color Enabled",
    ["Value"] = true,
    ["Key"] = "timerColorEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Key"] = "timeLeftWarning",
    ["Value"] = 8,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Time Left Warning",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Key"] = "timeLeftCritical",
    ["Value"] = 3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Time Left Critical",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Warning Color",
    ["Value"] = {
    1,
    0.87058823529412,
    0,
    1,
    },
    ["Key"] = "warningColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left entered in a warning zone",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Critical Color",
    ["Value"] = {
    1,
    0.074509803921569,
    0,
    1,
    },
    ["Key"] = "criticalColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left is critical",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
    ["Name"] = "Dot倒计时血条染色||dot发光",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.agonyFlash = envTable.agonyFlash or Plater.CreateFlash (unitFrame.healthBar, 0.5, scriptTable.config.threshold * 2, scriptTable.config.agonyColor)\nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame)\n    envTable.agonyFlash:Stop()\nend\n\n\n",
    ["OptionsValues"] = {
    ["threshold"] = 3,
    ["timeleftToBlink"] = 1,
    ["agonyColor"] = {
    0.80392156862745,
    1,
    0.53725490196078,
    1,
    },
    ["blinkSpeed"] = 1,
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n",
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, scriptTable.config.agonyColor)\n    if envTable._RemainingTime <=scriptTable.config.threshold  then\n        envTable.agonyFlash:Play()\n    else\n        envTable.agonyFlash:Stop()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1663039021,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.agonyFlash = envTable.agonyFlash or Plater.CreateFlash (unitFrame.healthBar, 0.5, scriptTable.config.threshold * 2, scriptTable.config.agonyColor)\nend",
    ["Icon"] = 136139,
    ["semver"] = "",
    ["Enabled"] = false,
    ["Revision"] = 398,
    ["Options"] = {
    {
    ["Type"] = 2,
    ["Max"] = 99,
    ["Desc"] = "The threshold for remaining duration to begin flashing.",
    ["Min"] = 1,
    ["Key"] = "threshold",
    ["Value"] = 6,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Flash when time remaining",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Agony applied color",
    ["Value"] = {
    1,
    0.36862745098039,
    0.7921568627451,
    1,
    },
    ["Key"] = "agonyColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n",
    ["Name"] = "!Dot染色||血条闪烁",
    ["Author"] = "Nemzi-Sargeras",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \n    \n    \nend",
    ["Desc"] = "Created by Nemzi-Sargeras",
    ["version"] = -1,
    ["Prio"] = 1,
    ["SpellIds"] = {
    295311,
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, scriptTable.config.agonyColor)\n    if envTable._RemainingTime <=scriptTable.config.threshold  then\n        envTable.agonyFlash:Play()\n    else\n        envTable.agonyFlash:Stop()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \n    \n    \nend",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame)\n    envTable.agonyFlash:Stop()\nend\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"left\", unitFrame.nameplateFrame, \"right\", 8\n    , 0);   \n    envTable.FixateTarget.outline = \"OUTLINE\"\n    envTable.FixateTarget:Hide()\nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
    ["OptionsValues"] = {
    ["nameplateColor"] = {
    1,
    0,
    0.52549019607843,
    1,
    },
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\",\" >>\" .. targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1661092972,
    ["NpcNames"] = {
    "174773",
    "88100",
    "幻影仙狐",
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"left\", unitFrame.nameplateFrame, \"right\", 8\n    , 0);   \n    envTable.FixateTarget.outline = \"OUTLINE\"\n    envTable.FixateTarget:Hide()\nend\n\n\n",
    ["Icon"] = -2769,
    ["semver"] = "",
    ["Enabled"] = true,
    ["Revision"] = 817,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 6",
    ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = true,
    ["Key"] = "changeNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "change to true to change the color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0,
    0.52549019607843,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    1,
    0.71372549019608,
    0,
    1,
    },
    ["Key"] = "dotsColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
    ["Name"] = "怨毒",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Spiteful Glow",
    ["version"] = -1,
    ["Prio"] = 99,
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\",\" >>\" .. targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
    ["url"] = "",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.DialogNameplate = true\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = 1\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1   \n    --envTable.NameplateColor = \"orange\"\n    envTable.HealthBarColor = \"#ff0086\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-26, 25, 10, -13)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset)\n    \n    Plater.SetCastBarSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset*0.35)\n    \n    envTable.overlaySpark.height = nameplateHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    --Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    -- envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    --envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    if(envTable.DialogNameplate) then\n        unitFrame:SetFrameStrata(\"DIALOG\")\n        --unitFrame:SetFrameLevel(unitFrame.healthBar:GetFrameLevel() + 25)\n    end\n    \nend\n\n\n",
    ["Time"] = 1662130770,
    ["NpcNames"] = {
    "爆炸物",
    "120651",
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.DialogNameplate = true\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = 1\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1   \n    --envTable.NameplateColor = \"orange\"\n    envTable.HealthBarColor = \"#ff0086\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-26, 25, 10, -13)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
    ["Icon"] = 2065634,
    ["semver"] = "1.0.0",
    ["Enabled"] = true,
    ["Revision"] = 1090,
    ["Options"] = {
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset)\n    \n    Plater.SetCastBarSize (unitFrame, nameplateWidth, nameplateHeight*envTable.NameplateSizeOffset*0.35)\n    \n    envTable.overlaySpark.height = nameplateHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Name"] = "M+ Explosive [Plater]",
    ["Author"] = "Bombad�o-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
    ["version"] = 1,
    ["Prio"] = 1,
    ["SpellIds"] = {
    240446,
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    --Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    -- envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    --envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    if(envTable.DialogNameplate) then\n        unitFrame:SetFrameStrata(\"DIALOG\")\n        --unitFrame:SetFrameLevel(unitFrame.healthBar:GetFrameLevel() + 25)\n    end\n    \nend\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\nend\n\n\n",
    ["url"] = "https://wago.io/JJUWclsTY/1",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n            envTable.OriginalText = nil\n        end\n    end\n    \n    Plater.StopGlow(self, envTable.GlowOptions.glowType)\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    if (scriptTable.config.ChangeColor) then\n        if (envTable._CanInterrupt) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarColor))\n        else\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarNoInterruptColor))\n        end\n    end\n    \n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    self:SetHeight (math.ceil(height * scriptTable.config.CastBarHeightAdd))\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n        end\n        \n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * scriptTable.config.CastBarHeightAdd))    \n    end\n    \n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\nend",
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1661403308,
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
    ["Icon"] = 1724000,
    ["semver"] = "1.0.85",
    ["Enabled"] = true,
    ["Revision"] = 3706,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Change Color",
    ["Value"] = false,
    ["Key"] = "ChangeColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Text Size",
    ["Value"] = false,
    ["Key"] = "ChangeTextSize",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Castbar Color",
    ["Value"] = {
    1,
    0.26274509803922,
    0,
    1,
    },
    ["Key"] = "CastbarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Castbar No Interrupt Color",
    ["Value"] = {
    0.69803921568627,
    0.69803921568627,
    0.69803921568627,
    1,
    },
    ["Key"] = "CastbarNoInterruptColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "",
    ["Min"] = 1,
    ["Key"] = "CastBarHeightAdd",
    ["Value"] = 1.3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Castbar Height Scale",
    },
    },
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    if (scriptTable.config.ChangeColor) then\n        if (envTable._CanInterrupt) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarColor))\n        else\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarNoInterruptColor))\n        end\n    end\n    \n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    self:SetHeight (math.ceil(height * scriptTable.config.CastBarHeightAdd))\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n        end\n        \n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * scriptTable.config.CastBarHeightAdd))    \n    end\n    \n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\nend",
    ["Name"] = "Cast - Important [Fixed]",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Flash, Bounce when an important cast is happening. Add spell in the Add Trigger field.",
    ["version"] = 87,
    ["Prio"] = 99,
    ["SpellIds"] = {
    372634,
    167815,
    228625,
    228280,
    227545,
    228637,
    228985,
    227529,
    229622,
    357029,
    299164,
    298669,
    297254,
    283421,
    296331,
    298718,
    301667,
    294890,
    356031,
    355934,
    356011,
    355974,
    345990,
    356404,
    357509,
    349934,
    355640,
    355642,
    347721,
    347775,
    346742,
    355830,
    357197,
    357229,
    353835,
    350919,
    357436,
    346877,
    347094,
    347958,
    347015,
    356133,
    347149,
    357284,
    357228,
    347091,
    308030,
    330458,
    330822,
    353573,
    353763,
    329908,
    320135,
    338639,
    295932,
    295942,
    315802,
    296372,
    353328,
    355230,
    354490,
    294526,
    329753,
    278176,
    292942,
    326050,
    354256,
    263344,
    354493,
    351206,
    351649,
    351090,
    330573,
    278182,
    277040,
    336556,
    353621,
    302543,
    297292,
    354240,
    351307,
    361016,
    360856,
    366288,
    366409,
    329181,
    329518,
    355352,
    352141,
    349805,
    352381,
    348145,
    358704,
    347609,
    359134,
    351075,
    351589,
    360451,
    365682,
    365577,
    361513,
    365126,
    364652,
    363130,
    365036,
    360977,
    365295,
    363021,
    360562,
    365033,
    360378,
    355132,
    356843,
    },
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n            envTable.OriginalText = nil\n        end\n    end\n    \n    Plater.StopGlow(self, envTable.GlowOptions.glowType)\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
    ["url"] = "https://wago.io/8s7Mcrve2/87",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local npcID = envTable._NpcID\n        if not npcID then \n            if (unitFrame.healthMarker) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n            return \n        end\n        \n        local diff = select(3, GetInstanceInfo())\n        local markersTable = Plater.ZoneInstanceType == \"raid\" and scriptTable.Difficulty[diff][npcID] or scriptTable.lifePercent[npcID]\n        \n        if (markersTable) then\n            for _, p in ipairs(markersTable) do\n                if (envTable._HealthPercent > p) then\n                    local healthBar = unitFrame.healthBar\n                    local overlaySize = healthBar:GetWidth() * p/100\n                    \n                    if (not unitFrame.healthMarker) then\n                        unitFrame.healthMarker = healthBar:CreateTexture(nil, \"overlay\")\n                        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n                        unitFrame.healthOverlay = healthBar:CreateTexture(nil, \"overlay\")\n                        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n                    end\n                    \n                    unitFrame.healthMarker:Hide()\n                    unitFrame.healthMarker:SetSize(1, healthBar:GetHeight())\n                    unitFrame.healthMarker:SetPoint(\"left\", healthBar, \"left\", overlaySize, 0)\n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    \n                    unitFrame.healthOverlay:Show()\n                    unitFrame.healthOverlay:SetSize(overlaySize, healthBar:GetHeight())\n                    unitFrame.healthOverlay:SetPoint(\"right\", unitFrame.healthMarker, \"left\", 0, 0)\n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    return\n                end\n            end\n            \n            if (unitFrame.healthMarker) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n",
    ["OptionsValues"] = {
    ["indicatorAlpha"] = 1,
    ["fillAlpha"] = 0.79999995231628,
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.UpdateMarkers(unitFrame)    \nend    \n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.UpdateMarkers(unitFrame)    \nend    \n\n\n",
    ["Time"] = 1675243136,
    ["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.lifePercent = {\n        --UDL\n        [33293] = {75,50,25},\n        \n        \n    }\n    \n    scriptTable.Difficulty = {\n        [16] = { -- 신화\n            [177094] = {20}, -- 시그니 & 카이라\n            [177095] = {20},\n            [175732] = {84, 45}, -- 실바나스\n            [180990] = {15} -- 간수\n            \n        },       \n        [15] = { -- 영웅\n            [177094] = {15}, -- 시그니 & 카이라\n            [177095] = {15},\n            [175732] = {84, 50}, -- 실바나스\n        },       \n        [14] = { -- 일반\n            [177094] = {10}, -- 시그니 & 카이라\n            [177095] = {10},\n            [175732] = {84, 50}, -- 실바나스\n        }, \n        [17] = { -- 공찾\n            [177094] = {5}, -- 시그니 & 카이라\n            [177095] = {5},\n            [175732] = {84, 50}, -- 실바나스\n        }, \n    }\nend",
    ["url"] = "",
    ["NpcNames"] = {
    "33293",
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local npcID = envTable._NpcID\n        if not npcID then \n            if (unitFrame.healthMarker) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n            return \n        end\n        \n        local diff = select(3, GetInstanceInfo())\n        local markersTable = Plater.ZoneInstanceType == \"raid\" and scriptTable.Difficulty[diff][npcID] or scriptTable.lifePercent[npcID]\n        \n        if (markersTable) then\n            for _, p in ipairs(markersTable) do\n                if (envTable._HealthPercent > p) then\n                    local healthBar = unitFrame.healthBar\n                    local overlaySize = healthBar:GetWidth() * p/100\n                    \n                    if (not unitFrame.healthMarker) then\n                        unitFrame.healthMarker = healthBar:CreateTexture(nil, \"overlay\")\n                        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n                        unitFrame.healthOverlay = healthBar:CreateTexture(nil, \"overlay\")\n                        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n                    end\n                    \n                    unitFrame.healthMarker:Hide()\n                    unitFrame.healthMarker:SetSize(1, healthBar:GetHeight())\n                    unitFrame.healthMarker:SetPoint(\"left\", healthBar, \"left\", overlaySize, 0)\n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    \n                    unitFrame.healthOverlay:Show()\n                    unitFrame.healthOverlay:SetSize(overlaySize, healthBar:GetHeight())\n                    unitFrame.healthOverlay:SetPoint(\"right\", unitFrame.healthMarker, \"left\", 0, 0)\n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    return\n                end\n            end\n            \n            if (unitFrame.healthMarker) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n",
    ["Revision"] = 1571,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Option 1",
    ["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "indicatorColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Vertical Line Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Indicator color.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Indicator alpha.",
    ["Min"] = 0.1,
    ["Key"] = "indicatorAlpha",
    ["Value"] = 1,
    ["Name"] = "Vertical Line Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank line",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Fill Color",
    ["Value"] = {
    0,
    0,
    0,
    1,
    },
    ["Key"] = "fillColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Fill color.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Fill alpha.",
    ["Min"] = 0,
    ["Key"] = "fillAlpha",
    ["Value"] = 0.8,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Fill Alpha",
    },
    },
    ["Enabled"] = false,
    ["Prio"] = 99,
    ["Author"] = "Aelerolor-Torghast",
    ["Initialization"] = "function (scriptTable)\n    \n    scriptTable.lifePercent = {\n        --UDL\n        [33293] = {75,50,25},\n        \n        \n    }\n    \n    scriptTable.Difficulty = {\n        [16] = { -- 신화\n            [177094] = {20}, -- 시그니 & 카이라\n            [177095] = {20},\n            [175732] = {84, 45}, -- 실바나스\n            [180990] = {15} -- 간수\n            \n        },       \n        [15] = { -- 영웅\n            [177094] = {15}, -- 시그니 & 카이라\n            [177095] = {15},\n            [175732] = {84, 50}, -- 실바나스\n        },       \n        [14] = { -- 일반\n            [177094] = {10}, -- 시그니 & 카이라\n            [177095] = {10},\n            [175732] = {84, 50}, -- 실바나스\n        }, \n        [17] = { -- 공찾\n            [177094] = {5}, -- 시그니 & 카이라\n            [177095] = {5},\n            [175732] = {84, 50}, -- 실바나스\n        }, \n    }\nend",
    ["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
    ["SpellIds"] = {
    },
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.UpdateMarkers(unitFrame)    \nend    \n\n\n",
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Unit - Health Markers [Fixed]",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.UpdateMarkers(unitFrame)    \nend    \n\n\n",
    ["semver"] = "",
    ["Icon"] = "Interface\\Addons\\Plater\\images\\health_indicator",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
    ["Time"] = 1669327146,
    ["url"] = "",
    ["Icon"] = 610472,
    ["Enabled"] = true,
    ["Revision"] = 65,
    ["semver"] = "",
    ["Author"] = "Keyspell-Azralon",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["version"] = -1,
    ["Name"] = "Aura is Shield [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnHideCode"] = "    function (self, unitId, unitFrame, envTable, scriptTable)\n     --insert code here\n      \n    end\n ",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1668886509,
    ["url"] = "",
    ["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
    ["Enabled"] = true,
    ["Revision"] = 33,
    ["semver"] = "",
    ["Author"] = "Ditador-Azralon",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["SpellIds"] = {
    426662,
    426663,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 1,
    ["Key"] = "nameplateColor",
    ["Value"] = {
    0,
    0.5568627450980392,
    0.03529411764705882,
    1,
    },
    ["Name"] = "Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
    },
    },
    ["version"] = -1,
    ["Name"] = "Fixate by Unit Buff [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    ["castColor"] = {
    {
    "385536",
    "maroon",
    },
    {
    "198750",
    "midnightblue",
    },
    {
    "360850",
    "lime",
    },
    {
    "212784",
    "deepskyblue",
    },
    {
    "207980",
    "midnightblue",
    },
    {
    "199033",
    "gold",
    },
    {
    "199034",
    "gold",
    },
    {
    "200969",
    "orange",
    },
    {
    "394512",
    "indigo",
    },
    {
    "397881",
    "deepskyblue",
    },
    {
    "396020",
    "khaki",
    },
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
    ["Time"] = 1672514190,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
    ["Enabled"] = true,
    ["Revision"] = 547,
    ["semver"] = "",
    ["Author"] = "Terciob",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Show a different animation for the cast bar.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    376644,
    373017,
    386781,
    384823,
    372735,
    385536,
    392398,
    375596,
    387135,
    360850,
    212784,
    199033,
    199034,
    200969,
    394512,
    397881,
    396020,
    374430,
    384353,
    265376,
    193941,
    411002,
    169445,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "Need a /reload",
    ["Min"] = 5,
    ["Fraction"] = false,
    ["Value"] = 7,
    ["Name"] = "Amount of Segments",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "segmentsAmount",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Spark Color",
    ["Value"] = {
    0.9568627450980391,
    1,
    0.9882352941176471,
    1,
    },
    ["Key"] = "sparkColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Glow Color",
    ["Value"] = {
    0.8588235294117647,
    0.4313725490196079,
    1,
    1,
    },
    ["Key"] = "glowColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 7,
    ["Name"] = "Cast Color by SpellID",
    ["Value"] = {
    {
    "385536",
    "maroon",
    },
    {
    "198750",
    "midnightblue",
    },
    {
    "360850",
    "lime",
    },
    {
    "212784",
    "deepskyblue",
    },
    {
    "207980",
    "midnightblue",
    },
    {
    "199033",
    "gold",
    },
    {
    "199034",
    "gold",
    },
    {
    "200969",
    "orange",
    },
    {
    "394512",
    "indigo",
    },
    {
    "397881",
    "deepskyblue",
    },
    {
    "396020",
    "khaki",
    },
    },
    ["Key"] = "castColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Glowing [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --发光和闪烁效果\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --文字颜色\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [1] = true, --use a simple comma here\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n\n",
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend\n\n\n\n",
    ["Time"] = 1669123607,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
    ["url"] = "https://wago.io/D5Trv5z-8/1",
    ["NpcNames"] = {
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --发光和闪烁效果\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --文字颜色\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [1] = true, --use a simple comma here\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n",
    ["Enabled"] = true,
    ["Revision"] = 247,
    ["semver"] = "1.0.0",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend\n\n\n\n",
    ["Author"] = "啊是猫呀-雷霆之击",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n\n",
    ["SpellIds"] = {
    172,
    71937,
    75383,
    30108,
    65813,
    47843,
    30404,
    30405,
    47841,
    59164,
    48181,
    59161,
    59163,
    },
    ["Prio"] = 99,
    ["Name"] = "术士改良版补dot提醒",
    ["PlaterCore"] = 1,
    ["version"] = 1,
    ["Desc"] = "",
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Key"] = "blinkEnabled",
    ["Value"] = true,
    ["Name"] = "Blink Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable blinks",
    },
    {
    ["Type"] = 4,
    ["Key"] = "glowEnabled",
    ["Value"] = true,
    ["Name"] = "Glow Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable glows",
    },
    {
    ["Type"] = 4,
    ["Key"] = "changeNameplateColor",
    ["Value"] = false,
    ["Name"] = "Change NamePlate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'true' to enable nameplate color change",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the blink effect only",
    ["Min"] = 1,
    ["Fraction"] = true,
    ["Value"] = 5,
    ["Name"] = "Timeleft to Blink",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "timeleftToBlink",
    },
    {
    ["Type"] = 2,
    ["Max"] = 3,
    ["Desc"] = "time to complete a blink loop",
    ["Min"] = 0.5,
    ["Fraction"] = true,
    ["Value"] = 1,
    ["Name"] = "Blink Speed",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "blinkSpeed",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "time to complete a blink loop",
    ["Min"] = 0.1,
    ["Fraction"] = true,
    ["Value"] = 0.6,
    ["Name"] = "Blink Max Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "blinkMaxAlpha",
    },
    {
    ["Type"] = 1,
    ["Key"] = "blinkColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Blink Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "in seconds, affects the blink effect only",
    },
    {
    ["Type"] = 1,
    ["Key"] = "nameplateColor",
    ["Value"] = {
    0.35686274509804,
    1,
    0,
    1,
    },
    ["Name"] = "Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "set to 'true' to enable nameplate color change",
    },
    {
    ["Type"] = 4,
    ["Key"] = "timerColorEnabled",
    ["Value"] = true,
    ["Name"] = "Timer Color Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "set to 'false' to disable glows",
    },
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Fraction"] = true,
    ["Value"] = 8,
    ["Name"] = "Time Left Warning",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "timeLeftWarning",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "in seconds, affects the color of the text",
    ["Min"] = 1,
    ["Fraction"] = true,
    ["Value"] = 5,
    ["Name"] = "Time Left Critical",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "timeLeftCritical",
    },
    {
    ["Type"] = 1,
    ["Key"] = "warningColor",
    ["Value"] = {
    1,
    0.87058823529412,
    0,
    1,
    },
    ["Name"] = "Warning Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left entered in a warning zone",
    },
    {
    ["Type"] = 1,
    ["Key"] = "criticalColor",
    ["Value"] = {
    1,
    0,
    0,
    1,
    },
    ["Name"] = "Critical Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "color when the time left is critical",
    },
    },
    ["Icon"] = 136118,
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1671066705,
    ["url"] = "",
    ["Icon"] = 134229,
    ["Enabled"] = true,
    ["Revision"] = 37,
    ["semver"] = "",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
    ["SpellIds"] = {
    191284,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["version"] = -1,
    ["Name"] = "Cast - Effect After Cast [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
    ["OptionsValues"] = {
    ["useNameplateColor"] = true,
    ["dotColor"] = {
    1,
    0.615686297416687,
    0,
    1,
    },
    ["healthBarColor"] = {
    1,
    0.8117647767066956,
    0,
    1,
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
    ["Time"] = 1670201853,
    ["url"] = "",
    ["Icon"] = 2175503,
    ["Enabled"] = true,
    ["Revision"] = 533,
    ["semver"] = "",
    ["Author"] = "Bombad�o-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
    ["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
    ["SpellIds"] = {
    240446,
    385339,
    198077,
    210261,
    360857,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "Increases the cast bar height by this value",
    ["Min"] = 0,
    ["Key"] = "castBarHeight",
    ["Value"] = 3,
    ["Name"] = "Cast Bar Height Mod",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 1,
    ["Key"] = "castBarColor",
    ["Value"] = {
    1,
    0.5843137254901961,
    0,
    1,
    },
    ["Name"] = "Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Changes the cast bar color to this one.",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option7",
    ["Value"] = 0,
    ["Name"] = "Option 7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option6",
    ["Value"] = "Arrow:",
    ["Name"] = "Arrow:",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "showArrow",
    ["Value"] = true,
    ["Name"] = "Show Arrow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Arrow alpha.",
    ["Min"] = 0,
    ["Key"] = "arrowAlpha",
    ["Value"] = 1,
    ["Name"] = "Arrow Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 12,
    ["Desc"] = "Arrow Width.",
    ["Min"] = 4,
    ["Fraction"] = false,
    ["Value"] = 8,
    ["Key"] = "arrowWidth",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Arrow Width",
    },
    {
    ["Type"] = 2,
    ["Max"] = 12,
    ["Desc"] = "Arrow Height.",
    ["Min"] = 4,
    ["Key"] = "arrowHeight",
    ["Value"] = 8,
    ["Name"] = "Arrow Height",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Key"] = "option13",
    ["Value"] = 0,
    ["Name"] = "Option 13",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option12",
    ["Value"] = "Dot Animation:",
    ["Name"] = "Dot Animation:",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "dotColor",
    ["Value"] = {
    1,
    0.615686274509804,
    0,
    1,
    },
    ["Name"] = "Dot Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Adjust the color of the dot animation.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dot X Offset",
    ["Min"] = -10,
    ["Key"] = "xOffset",
    ["Value"] = 4,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Dot X Offset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dot Y Offset",
    ["Min"] = -10,
    ["Fraction"] = false,
    ["Value"] = 3,
    ["Name"] = "Dot Y Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "yOffset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 18",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Nameplate Color",
    ["Value"] = "Nameplate Color",
    ["Key"] = "option17",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useNameplateColor",
    ["Value"] = false,
    ["Name"] = "Change Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change Nameplate Color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0.1843137294054031,
    0,
    1,
    },
    ["Key"] = "healthBarColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Health Bar Color",
    },
    },
    ["version"] = -1,
    ["Name"] = "Explosion Affix M+ [Plater]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
    ["Time"] = 1683596223,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
    ["Enabled"] = true,
    ["Revision"] = 146,
    ["semver"] = "",
    ["Author"] = "Aelerolor-Torghast",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Key"] = "option1",
    ["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
    ["Name"] = "Option 1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "blank line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "indicatorColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Vertical Line Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Indicator color.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Indicator alpha.",
    ["Min"] = 0.1,
    ["Key"] = "indicatorAlpha",
    ["Value"] = 0.79,
    ["Name"] = "Vertical Line Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 6,
    ["Name"] = "blank line",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Fill Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "fillColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Fill color.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Fill alpha.",
    ["Min"] = 0,
    ["Name"] = "Fill Alpha",
    ["Value"] = 0.2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "fillAlpha",
    },
    },
    ["version"] = -1,
    ["Name"] = "Add - Health Markers [P]",
    ["NpcNames"] = {
    "197697",
    "59544",
    "186227",
    "184020",
    "91005",
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
    ["OptionsValues"] = {
    ["npcColor"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "forestgreen",
    },
    {
    "195820",
    "forestgreen",
    },
    {
    "195821",
    "forestgreen",
    },
    {
    "189886",
    "forestgreen",
    },
    {
    "75966",
    "forestgreen",
    },
    {
    "102019 ",
    "forestgreen",
    },
    {
    "187159",
    "forestgreen",
    },
    {
    "194897",
    "forestgreen",
    },
    {
    "104251",
    "forestgreen",
    },
    },
    },
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
    ["Time"] = 1670423785,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
    ["Enabled"] = false,
    ["Revision"] = 572,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
    ["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 6",
    ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = true,
    ["Key"] = "changeNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "change to true to change the color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0,
    0.5254901960784314,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "increase the nameplate height by this value",
    ["Min"] = 0,
    ["Fraction"] = false,
    ["Value"] = 3,
    ["Key"] = "nameplateSizeOffset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Nameplate Size Offset",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    1,
    0.7137255072593689,
    0,
    0.5631310641765594,
    },
    ["Key"] = "dotsColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Dot Color",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Extra Texture",
    ["Value"] = "Extra Texture",
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "Extra Texture",
    },
    {
    ["Type"] = 4,
    ["Key"] = "showExtraTexture",
    ["Value"] = false,
    ["Name"] = "Show Extra Texture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show Extra Texture",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Texture Color",
    ["Value"] = {
    1,
    0.4627450980392157,
    0,
    1,
    },
    ["Key"] = "skullColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Texture Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Alpha",
    ["Min"] = 0,
    ["Name"] = "Alpha",
    ["Value"] = 0.2,
    ["Key"] = "skullAlpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "Scale",
    ["Min"] = 0.4,
    ["Key"] = "skullScale",
    ["Value"] = 0.6,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Scale",
    },
    {
    ["Type"] = 7,
    ["Key"] = "npcColor",
    ["Value"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "forestgreen",
    },
    {
    "195820",
    "forestgreen",
    },
    {
    "195821",
    "forestgreen",
    },
    {
    "189886",
    "forestgreen",
    },
    {
    "75966",
    "forestgreen",
    },
    {
    "102019 ",
    "forestgreen",
    },
    {
    "187159",
    "forestgreen",
    },
    {
    "194897",
    "forestgreen",
    },
    {
    "104251",
    "forestgreen",
    },
    },
    ["Name"] = "Npc Color By NpcID",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Key is the npcID, value is the color name",
    },
    },
    ["version"] = -1,
    ["Name"] = "Add - Important [P]",
    ["NpcNames"] = {
    "196548",
    "195580",
    "195820",
    "195821",
    "189886",
    "75966",
    "102019",
    "187159",
    "194897",
    "104251",
    "101326",
    "189669",
    "192464",
    190381,
    92538,
    192464,
    131009,
    127315,
    133361,
    136330,
    214117,
    212483,
    101008,
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1669340442,
    ["url"] = "",
    ["Icon"] = "interface/addons/plater/images/add_id_icon",
    ["Enabled"] = false,
    ["Revision"] = 161,
    ["semver"] = "",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
    ["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["version"] = -1,
    ["Name"] = "Add - Tag Number [P]",
    ["NpcNames"] = {
    "195138",
    "192955",
    "190294",
    "76518",
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
    ["Time"] = 1669324381,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
    ["Enabled"] = true,
    ["Revision"] = 887,
    ["semver"] = "",
    ["Author"] = "Tercioo-Sylvanas",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
    ["Desc"] = "Play a very fast flash when the cast start",
    ["SpellIds"] = {
    392640,
    397888,
    209033,
    385029,
    374563,
    377341,
    369675,
    369365,
    369411,
    278961,
    202108,
    88186,
    255824,
    252781,
    250096,
    200248,
    197797,
    264520,
    418202,
    201839,
    412012,
    411958,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option1",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option2",
    ["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
    ["Name"] = "Option 2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option3",
    ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
    ["Name"] = "Option 3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useCastbarColor",
    ["Value"] = true,
    ["Name"] = "Cast Bar Color Enabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "When enabled, changes the cast bar color,",
    },
    {
    ["Type"] = 1,
    ["Key"] = "castBarColor",
    ["Value"] = {
    1,
    0.4313725490196079,
    0,
    1,
    },
    ["Name"] = "Cast Bar Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the cast bar.",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option7",
    ["Value"] = 0,
    ["Name"] = "Blank Line",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
    ["Min"] = 0.05,
    ["Key"] = "flashDuration",
    ["Value"] = 0.2,
    ["Name"] = "Flash Duration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Increases the cast bar height by this value",
    ["Min"] = 0,
    ["Key"] = "castBarHeight",
    ["Value"] = 0,
    ["Name"] = "Cast Bar Height Mod",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
    ["Min"] = 0.1,
    ["Key"] = "shakeDuration",
    ["Value"] = 0.1,
    ["Name"] = "Shake Duration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 200,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 10,
    ["Key"] = "shakeAmplitude",
    ["Value"] = 25,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Amplitude",
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Key"] = "shakeFrequency",
    ["Value"] = 30,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Shake Frequency",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Quick Flash [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
    ["OptionsValues"] = {
    ["npcColor"] = {
    {
    "189893",
    "firebrickdark",
    },
    {
    "190187",
    "firebrickdark",
    },
    {
    "99922",
    "saddlebrown",
    },
    {
    "153285",
    "firebrickdark",
    },
    {
    "104822",
    "firebrickdark",
    },
    },
    },
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
    ["Time"] = 1670427654,
    ["url"] = "",
    ["Icon"] = "interface/addons/plater/media/exclamation_64",
    ["Enabled"] = true,
    ["Revision"] = 162,
    ["semver"] = "",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
    ["Desc"] = "Change the color of  add",
    ["SpellIds"] = {
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = true,
    ["Key"] = "useNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change Nameplate Color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "healthBarColor",
    ["Value"] = {
    1,
    0.4392157196998596,
    0.458823561668396,
    1,
    },
    ["Name"] = "Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option5",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useFlash",
    ["Value"] = true,
    ["Name"] = "Flash Nameplate",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Flash Nameplate",
    },
    {
    ["Type"] = 7,
    ["Key"] = "npcColor",
    ["Value"] = {
    {
    "189893",
    "olivedrab",
    },
    {
    "190187",
    "olivedrab",
    },
    {
    "99922",
    "olivedrab",
    },
    {
    "153285",
    "olivedrab",
    },
    {
    "104822",
    "olivedrab",
    },
    },
    ["Name"] = "NpcID to Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
    },
    },
    ["version"] = -1,
    ["Name"] = "Add - Warning [P]",
    ["NpcNames"] = {
    "190187",
    "189893",
    "99922",
    "104822",
    129758,
    190426,
    186696,
    101075,
    100818,
    98081,
    52019,
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 1,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
    ["Time"] = 1673726734,
    ["url"] = "",
    ["Icon"] = 236209,
    ["Enabled"] = true,
    ["Revision"] = 18,
    ["semver"] = "",
    ["Author"] = "Tiranaa-Azralon",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
    ["SpellIds"] = {
    372743,
    372749,
    384933,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["version"] = -1,
    ["Name"] = "Aura While Casting [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
    ["OptionsValues"] = {
    ["nameplateColor"] = {
    0.062745101749897,
    0.062745101749897,
    0.094117656350136,
    1,
    },
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1678426245,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
    ["url"] = "",
    ["NpcNames"] = {
    "194622",
    "190205",
    "197398",
    "77006",
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
    ["Revision"] = 112,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = false,
    ["Key"] = "useNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change Nameplate Color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "nameplateColor",
    ["Value"] = {
    0.062745101749897,
    0.062745101749897,
    0.0941176563501358,
    1,
    },
    ["Name"] = "Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 4",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "useNameplateScale",
    ["Value"] = true,
    ["Name"] = "Change Nameplate Scale",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change Nameplate Scale",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Nameplate Scale",
    ["Min"] = 0,
    ["Key"] = "scale",
    ["Value"] = 0.8,
    ["Name"] = "Nameplate Scale",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    },
    ["Enabled"] = true,
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "",
    ["SpellIds"] = {
    },
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
    ["Name"] = "Add - Non Elite Trash [P]",
    ["PlaterCore"] = 1,
    ["Prio"] = 99,
    ["version"] = -1,
    ["semver"] = "",
    ["Icon"] = "interface/addons/plater/media/duck_64",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
    ["Time"] = 1669325411,
    ["url"] = "",
    ["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
    ["Enabled"] = true,
    ["Revision"] = 101,
    ["semver"] = "",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
    ["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
    ["SpellIds"] = {
    373688,
    391050,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["version"] = -1,
    ["Name"] = "Cast - Shield Interrupt [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
    ["OptionsValues"] = {
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "    function (self, unitId, unitFrame, envTable, scriptTable)\n     --insert code here\n      \n    end\n ",
    ["Time"] = 1670428019,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
    ["Enabled"] = true,
    ["Revision"] = 162,
    ["semver"] = "",
    ["Author"] = "Butazzul-Valdrakken",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
    ["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
    ["SpellIds"] = {
    385916,
    386063,
    388822,
    373087,
    397785,
    106864,
    193660,
    198263,
    387910,
    370766,
    375591,
    384336,
    209404,
    209378,
    210875,
    396001,
    397899,
    386559,
    382555,
    258672,
    258777,
    257756,
    257784,
    256405,
    256589,
    393793,
    388046,
    375079,
    390290,
    369811,
    369703,
    226287,
    410999,
    372561,
    256882,
    172578,
    412063,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 2,
    ["Max"] = 0.3,
    ["Desc"] = "Rotation Duration",
    ["Min"] = 0.1,
    ["Name"] = "Rotation Duration",
    ["Value"] = 0.15,
    ["Key"] = "rotationDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 6,
    ["Key"] = "option5",
    ["Value"] = 0,
    ["Name"] = "Option 5",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1.5,
    ["Desc"] = "Animation Start Duration",
    ["Min"] = 0,
    ["Fraction"] = true,
    ["Value"] = 0.3,
    ["Key"] = "animStartDuration",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Animation Start Duration",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
    ["Min"] = 0,
    ["Fraction"] = true,
    ["Value"] = 1,
    ["Name"] = "Texture Start Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "textureStartAlpha",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 5",
    ["Value"] = 0,
    ["Key"] = "option5",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1.2,
    ["Desc"] = "Texture Scale",
    ["Min"] = 0.6,
    ["Name"] = "Texture Scale",
    ["Value"] = 0.8,
    ["Key"] = "textureScale",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Texture Alpha",
    ["Min"] = 0,
    ["Name"] = "Texture Alpha",
    ["Value"] = 1,
    ["Key"] = "textureAlpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 1,
    ["Key"] = "textureColor",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Name"] = "Texture Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Texture Color",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Circle AoE [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    ["sparkColor"] = {
    0.95686280727386,
    1,
    0.98823535442352,
    1,
    },
    },
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
    ["Time"] = 1672514185,
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
    ["Enabled"] = true,
    ["Revision"] = 506,
    ["semver"] = "",
    ["Author"] = "Terciob",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
    ["Desc"] = "Just stop casting",
    ["SpellIds"] = {
    377004,
    381516,
    196543,
    199726,
    200291,
    268202,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 2,
    ["Max"] = 20,
    ["Desc"] = "Need a /reload",
    ["Min"] = 5,
    ["Name"] = "Amount of Segments",
    ["Value"] = 20,
    ["Key"] = "segmentsAmount",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 1,
    ["Name"] = "Spark Color",
    ["Value"] = {
    0.9568627450980391,
    1,
    0.9882352941176471,
    1,
    },
    ["Key"] = "sparkColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Glow Color",
    ["Value"] = {
    0.8588235294117647,
    0.4313725490196079,
    1,
    1,
    },
    ["Key"] = "glowColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - Stop Casting [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
    ["OptionsValues"] = {
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1675243130,
    ["url"] = "",
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
    ["NpcNames"] = {
    "194895",
    "105703",
    "59598",
    "58319",
    200388,
    189299,
    131402,
    135052,
    },
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
    ["Revision"] = 107,
    ["semver"] = "",
    ["Enabled"] = true,
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
    ["Author"] = "Huugg-Valdrakken",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "",
    ["SpellIds"] = {
    },
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Name"] = "Add - Explode on Die [P]",
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Reverse Health Bar",
    ["Value"] = false,
    ["Key"] = "useReverse",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 6",
    ["Value"] = 0,
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Enable Shake",
    ["Value"] = false,
    ["Key"] = "useShake",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "How strong is the shake.",
    ["Min"] = 0.05,
    ["Name"] = "Shake Amplitude",
    ["Value"] = 0.2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "shakeAmplitude",
    },
    {
    ["Type"] = 2,
    ["Max"] = 80,
    ["Desc"] = "How fast the shake moves.",
    ["Min"] = 1,
    ["Name"] = "Shake Frequency",
    ["Value"] = 70,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "shakeFrequency",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 7",
    ["Value"] = 0,
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show Red Background",
    ["Value"] = true,
    ["Key"] = "useBackground",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show Red Background",
    },
    },
    ["Icon"] = "interface/addons/plater/media/radio_64",
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame:SetAlpha (1)\nend\n\n\n",
    ["OptionsValues"] = {
    ["npcColor"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/exclamation_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["Time"] = 1697708782,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
    ["Enabled"] = true,
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame:SetAlpha (1)\nend\n\n\n",
    ["Revision"] = 882,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option6",
    ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
    ["Name"] = "Option 6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "changeNameplateColor",
    ["Value"] = true,
    ["Name"] = "Change Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "change to true to change the color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0.52941179275513,
    0,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "increase the nameplate height by this value",
    ["Min"] = 0,
    ["Key"] = "nameplateSizeOffset",
    ["Value"] = 0,
    ["Name"] = "Nameplate Size Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "dotsColor",
    ["Value"] = {
    1,
    0.71372550725937,
    0,
    0.56313106417656,
    },
    ["Name"] = "Dot Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Dot Color",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Extra Texture",
    ["Value"] = "Extra Texture",
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "Extra Texture",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show Extra Texture",
    ["Value"] = true,
    ["Key"] = "showExtraTexture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show Extra Texture",
    },
    {
    ["Type"] = 1,
    ["Key"] = "skullColor",
    ["Value"] = {
    1,
    0.4627451300621,
    0,
    1,
    },
    ["Name"] = "Texture Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Texture Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Alpha",
    ["Min"] = 0,
    ["Fraction"] = true,
    ["Value"] = 1,
    ["Name"] = "Alpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "skullAlpha",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "Scale",
    ["Min"] = 0.4,
    ["Key"] = "skullScale",
    ["Value"] = 2,
    ["Name"] = "Scale",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 7,
    ["Name"] = "Npc Color By NpcID",
    ["Value"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    ["Key"] = "npcColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Key is the npcID, value is the color name",
    },
    },
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["Prio"] = 99,
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
    ["SpellIds"] = {
    },
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Add - Important [P][fix2]",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/exclamation_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["semver"] = "",
    ["NpcNames"] = {
    "32876",
    "33846",
    "33824",
    "36899",
    "38454",
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
    ["ScriptType"] = 2,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1676905232,
    ["url"] = "",
    ["Icon"] = 4038101,
    ["Enabled"] = true,
    ["Revision"] = 73,
    ["semver"] = "",
    ["Author"] = "Ditador-Azralon",
    ["Initialization"] = "    function (scriptTable)\n      --insert code here\n      \n    end\n ",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
    ["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
    ["SpellIds"] = {
    388886,
    209676,
    377912,
    },
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 1,
    ["Key"] = "dotColor",
    ["Value"] = {
    1,
    1,
    1,
    0.4166216850280762,
    },
    ["Name"] = "Dots Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Dots Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dots X Offset",
    ["Min"] = -10,
    ["Key"] = "xOffset",
    ["Value"] = 0,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Dots X Offset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Dots Y Offset",
    ["Min"] = -10,
    ["Fraction"] = false,
    ["Value"] = 0,
    ["Name"] = "Dots Y Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "yOffset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 4",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Adjust how fast the blinking occurs",
    ["Min"] = 0.2,
    ["Name"] = "Blink Speed",
    ["Value"] = 0.4,
    ["Key"] = "speed",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Min amount of transparency the blink can have",
    ["Min"] = 0,
    ["Name"] = "Blink Min Alpha",
    ["Value"] = 0,
    ["Key"] = "minAlpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Max amount of transparency the blink can have",
    ["Min"] = 0,
    ["Key"] = "maxAlpha",
    ["Value"] = 0.5,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Blink Max Alpha",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Blink Color",
    ["Value"] = {
    1,
    0.01960784383118153,
    0,
    1,
    },
    ["Key"] = "blinkColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color of the blinking texture",
    },
    },
    ["version"] = -1,
    ["Name"] = "Cast - On Going Cast [P]",
    ["NpcNames"] = {
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    --unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n   -- unitFrame:SetAlpha (1)\nend\n\n\n",
    ["OptionsValues"] = {
    ["npcColor"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    -- unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1697708764,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    -- unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
    ["Enabled"] = true,
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n   -- unitFrame:SetAlpha (1)\nend\n\n\n",
    ["Revision"] = 937,
    ["semver"] = "",
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    --unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    -- unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    },
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    -- unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["Name"] = "!Add - Important [P][fix]",
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 6",
    ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Nameplate Color",
    ["Value"] = true,
    ["Key"] = "changeNameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "change to true to change the color",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Nameplate Color",
    ["Value"] = {
    1,
    0,
    0.52549022436142,
    1,
    },
    ["Key"] = "nameplateColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "increase the nameplate height by this value",
    ["Min"] = 0,
    ["Name"] = "Nameplate Size Offset",
    ["Value"] = 0,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "nameplateSizeOffset",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Dot Color",
    ["Value"] = {
    1,
    0,
    0.572549045085907,
    1,
    },
    ["Key"] = "dotsColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Dot Color",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option10",
    ["Value"] = "Extra Texture",
    ["Name"] = "Extra Texture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "Extra Texture",
    },
    {
    ["Type"] = 4,
    ["Key"] = "showExtraTexture",
    ["Value"] = true,
    ["Name"] = "Show Extra Texture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show Extra Texture",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Texture Color",
    ["Value"] = {
    1,
    0,
    0.5254902243614197,
    1,
    },
    ["Key"] = "skullColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Texture Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Alpha",
    ["Min"] = 0,
    ["Name"] = "Alpha",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "skullAlpha",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "Scale",
    ["Min"] = 0.4,
    ["Key"] = "skullScale",
    ["Value"] = 2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Scale",
    },
    {
    ["Type"] = 7,
    ["Key"] = "npcColor",
    ["Value"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    ["Name"] = "Npc Color By NpcID",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Key is the npcID, value is the color name",
    },
    },
    ["NpcNames"] = {
    "33346",
    "34004",
    "33715",
    "33755",
    "33430",
    "33525",
    "34057",
    "33823",
    "33819",
    "34192",
    "33329",
    "33228",
    "33836",
    "33983",
    "33524",
    "33168",
    "34134",
    "34813",
    "34825",
    "34800",
    "28619",
    "205999",
    "205998",
    "205997",
    "198706",
    "36619",
    "37116",
    "37117",
    "38508",
    "37562",
    "36791",
    "36633",
    },
    },
    {
    ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    --unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n   -- unitFrame:SetAlpha (1)\nend\n\n\n",
    ["OptionsValues"] = {
    ["npcColor"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    },
    ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    -- unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["ScriptType"] = 3,
    ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["Time"] = 1697708766,
    ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    -- unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
    ["Enabled"] = true,
    ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\n   -- unitFrame:SetAlpha (1)\nend\n\n\n",
    ["Revision"] = 931,
    ["semver"] = "",
    ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    --unitFrame:SetAlpha (1)\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
    ["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
    ["Author"] = "Izimode-Azralon",
    ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
    ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(35, 35)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\n    --function envTable.UpdateNameplateAlpha (unitFrame) \n    -- unitFrame:SetAlpha (1)\n    --Plater.SetNameplateAlpha ( 1)\n    --end\nend\n\n\n\n\n\n\n",
    ["SpellIds"] = {
    },
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    --envTable.UpdateNameplateAlpha (unitFrame)  \n    -- unitFrame:SetAlpha (1)\nend\n\n\n\n\n",
    ["Name"] = "!Add - Important [P][fix3]",
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "option6",
    ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
    ["Name"] = "Option 6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "changeNameplateColor",
    ["Value"] = true,
    ["Name"] = "Change Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "change to true to change the color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "nameplateColor",
    ["Value"] = {
    1,
    0,
    0.52549022436142,
    1,
    },
    ["Name"] = "Nameplate Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Nameplate Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 6,
    ["Desc"] = "increase the nameplate height by this value",
    ["Min"] = 0,
    ["Fraction"] = false,
    ["Value"] = 0,
    ["Key"] = "nameplateSizeOffset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Nameplate Size Offset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank Space",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "dotsColor",
    ["Value"] = {
    0,
    1,
    0.1215686351060867,
    1,
    },
    ["Name"] = "Dot Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Dot Color",
    },
    {
    ["Type"] = 6,
    ["Key"] = "option4",
    ["Value"] = 0,
    ["Name"] = "Blank Space",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Extra Texture",
    ["Value"] = "Extra Texture",
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "Extra Texture",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show Extra Texture",
    ["Value"] = true,
    ["Key"] = "showExtraTexture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Show Extra Texture",
    },
    {
    ["Type"] = 1,
    ["Key"] = "skullColor",
    ["Value"] = {
    0,
    1,
    0.09803922474384308,
    1,
    },
    ["Name"] = "Texture Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Texture Color",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Alpha",
    ["Min"] = 0,
    ["Fraction"] = true,
    ["Value"] = 1,
    ["Key"] = "skullAlpha",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Alpha",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "Scale",
    ["Min"] = 0.4,
    ["Fraction"] = true,
    ["Value"] = 2,
    ["Name"] = "Scale",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "skullScale",
    },
    {
    ["Type"] = 7,
    ["Name"] = "Npc Color By NpcID",
    ["Value"] = {
    {
    "196548",
    "forestgreen",
    },
    {
    "195580",
    "chocolate",
    },
    {
    "195820",
    "chocolate",
    },
    {
    "195821",
    "chocolate",
    },
    {
    "189886",
    "firebrickdark",
    },
    {
    "75966",
    "midnightblue",
    },
    {
    "102019 ",
    "chocolate",
    },
    {
    "187159",
    "darkmagenta",
    },
    {
    "194897",
    "darkmagenta",
    },
    {
    "104251",
    "cornflowerblue",
    },
    },
    ["Key"] = "npcColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
    ["Desc"] = "Key is the npcID, value is the color name",
    },
    },
    ["NpcNames"] = {
    "37697",
    },
    },
    },
    ["npcs_renamed"] = {
    [184908] = "维 (急速 / 宇宙伤害)",
    [184910] = "沃 (隐身 / 移速)",
    [184911] = "尤 (减CD / 回血蓝)",
    [185680] = "维 (急速 / 宇宙伤害)",
    [185683] = "沃 (隐身 / 移速)",
    [185685] = "尤 (减CD / 回血蓝)",
    },
    ["saved_cvars_last_change"] = {
    ["nameplateShowOnlyNames"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateOverlapV"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["ShowNamePlateLoseAggroFlash"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemyMinus"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["NamePlateClassificationScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriendlyTotems"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplatePersonalHideDelaySeconds"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriendlyPets"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateOverlapH"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateTargetRadialPosition"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateMinAlpha"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateNotSelectedAlpha"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["clampTargetNameplateToScreen"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowAll"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateMaxDistance"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriendlyMinions"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateTargetBehindMaxDistance"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemies"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:10019: in function 'SafeSetCVar'\n[Player Logon for Dalaran Enemy Nameplates]:4: in function <[string \"Player Logon for Dalaran Enemy Nameplates\"]:1>\n[C]: ?\n[Interface/AddOns/Plater/Plater.lua]:10975: in function 'ScriptRunNoAttach'\n[Interface/AddOns/Plater/Plater.lua]:2454: in function <Interface/AddOns/Plater/Plater.lua:2451>\n",
    ["NamePlateVerticalScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateSelectedAlpha"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateRemovalAnimation"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateMotionSpeed"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateGlobalScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemyMinions"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemyPets"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriendlyNPCs"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateSelectedScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateMinAlphaDistance"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateMotion"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:8437: in function 'RefreshAutoToggle'\n[Interface/AddOns/Plater/Plater.lua]:8342: in function <Interface/AddOns/Plater/Plater.lua:8340>\n",
    ["nameplateMinScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateOtherTopInset"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["ShowClassColorInNameplate"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateOccludedAlphaMult"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemyTotems"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriendlyGuardians"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["NamePlateHorizontalScale"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateLargeTopInset"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplatePersonalShowAlways"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowEnemyGuardians"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    ["nameplateShowFriends"] = "[C]: in function 'SetCVar'\n[Interface/AddOns/Plater/Plater.lua]:1560: in function 'RestoreProfileCVars'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1027: in function 'DoProfileImport'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:847: in function 'ConfirmImportProfile'\n[Interface/AddOns/Plater/Plater_OptionsPanel.lua]:1279: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1279>\n[C]: in function 'xpcall'\n[Interface/AddOns/Details/Libs/DF/fw.lua]:4869: in function 'CoreDispatch'\n[Interface/AddOns/Details/Libs/DF/button.lua]:764: in function <Interface/AddOns/Details/Libs/DF/button.lua:700>\n",
    },
    ["aura_cache_by_name"] = {
    },
    ["url"] = "https://wago.io/4pkKg3Vaa/9",
    ["blizzard_nameplate_font_override_enabled"] = true,
    ["cast_statusbar_fadein_time"] = 0.01999999955296516,
    ["indicator_raidmark_scale"] = 0.9999999403953552,
    ["cast_statusbar_spark_alpha"] = 1,
    ["aura2_y_offset"] = 8,
    ["extra_icon_caster_size"] = 8,
    ["buffs_on_aura2"] = true,
    ["indicator_quest"] = false,
    ["expansion_triggerwipe"] = {
    [2] = true,
    [9] = true,
    },
    ["cast_statusbar_color_nointerrupt"] = {
    0.75294117647059,
    0.75294117647059,
    0.75294117647059,
    1,
    },
    ["npc_cache"] = {
    [184908] = {
    "维型拦截者",
    "晋升高塔",
    },
    [178141] = {
    "浊盐缚鳞者",
    "塔扎维什，帷纱集市",
    },
    [184910] = {
    "沃型飘移者",
    "晋升高塔",
    },
    [185683] = {
    "沃型圣物",
    "晋升高塔",
    },
    [163457] = {
    "弃誓先锋",
    "扎雷殁提斯",
    },
    [179733] = {
    "活力鱼串",
    "塔扎维什，帷纱集市",
    },
    [185680] = {
    "维型圣物",
    "晋升高塔",
    },
    },
    ["indicator_anchor"] = {
    ["y"] = -5,
    ["x"] = 4,
    ["side"] = 1,
    },
    ["health_selection_overlay_alpha"] = 0.2999999821186066,
    ["minor_height_scale"] = 0.9999999403953552,
    ["aura_padding"] = 3.5,
    ["indicator_worldboss"] = false,
    ["last_news_time"] = 1671797730,
    ["aura_width2"] = 18,
    ["aura_height2"] = 18,
    ["cast_colors"] = {
    [355132] = {
    true,
    "DEMONHUNTER",
    },
    },
    ["aura_border_colors"] = {
    ["is_show_all"] = {
    0.70196078431373,
    0.10196078431373,
    0.10196078431373,
    },
    },
    ["class_colors"] = {
    ["WARRIOR"] = {
    ["colorStr"] = "ffc69a6d",
    },
    ["PALADIN"] = {
    ["colorStr"] = "fff48bb9",
    },
    ["SHAMAN"] = {
    ["colorStr"] = "ff006fdd",
    },
    ["EVOKER"] = {
    ["colorStr"] = "ff33937e",
    },
    ["WARLOCK"] = {
    ["colorStr"] = "ff8687ed",
    },
    ["DEMONHUNTER"] = {
    ["colorStr"] = "ffa22fc8",
    },
    ["DEATHKNIGHT"] = {
    ["colorStr"] = "ffc31d3a",
    },
    ["DRUID"] = {
    ["colorStr"] = "ffff7c09",
    },
    ["ROGUE"] = {
    ["colorStr"] = "fffff467",
    },
    },
    ["cast_statusbar_color_channeling"] = {
    1,
    0.96078431372549,
    nil,
    1,
    },
    ["extra_icon_anchor"] = {
    ["x"] = 5,
    },
    ["extra_icon_wide_icon"] = false,
    ["range_check_alpha"] = 0.7999999523162842,
    ["semver"] = "1.0.8",
    ["aura_frame2_anchor"] = {
    ["y"] = 8,
    ["side"] = 7,
    },
    ["aura_alpha"] = 1,
    ["auto_toggle_friendly"] = {
    ["arena"] = true,
    ["cities"] = false,
    },
    ["indicator_faction"] = false,
    ["debuff_show_cc_border"] = {
    0.30196078431373,
    },
    ["aura_consolidate"] = true,
    ["extra_icon_width"] = 22,
    ["health_statusbar_texture"] = "A04",
    ["hook_auto_imported"] = {
    ["Reorder Nameplate"] = 4,
    ["Dont Have Aura"] = 1,
    ["Players Targetting Amount"] = 4,
    ["Color Automation"] = 1,
    ["Execute Range"] = 1,
    ["Cast Bar Icon Config"] = 2,
    ["Aura Reorder"] = 3,
    ["Combo Points"] = 6,
    ["Hide Neutral Units"] = 1,
    ["Target Color"] = 3,
    ["Attacking Specific Unit"] = 2,
    ["Extra Border"] = 2,
    },
    ["minor_width_scale"] = 0.9999999403953552,
    ["castbar_target_text_size"] = 14,
    ["aura_frame1_anchor"] = {
    ["y"] = 17.5,
    ["side"] = 1,
    },
    ["honor_blizzard_plate_alpha"] = true,
    ["aura_height"] = 12,
    ["aura2_x_offset"] = 0,
    ["target_indicator"] = "EthricArrow2",
    ["extra_icon_stack_size"] = 13,
    ["saved_cvars"] = {
    ["ShowClassColorInNameplate"] = "1",
    ["nameplateOverlapV"] = "0.99999994039536",
    ["nameplateLargeTopInset"] = "0.070000000298023",
    ["nameplateShowEnemyMinus"] = "1",
    ["NamePlateClassificationScale"] = "1",
    ["nameplateShowFriendlyTotems"] = "0",
    ["nameplatePersonalHideDelaySeconds"] = "0.2",
    ["nameplateShowFriendlyPets"] = "0",
    ["nameplateOverlapH"] = "0.79999995231628",
    ["nameplateTargetRadialPosition"] = "1",
    ["nameplateMinAlpha"] = "0.90135484",
    ["nameplateResourceOnTarget"] = "0",
    ["nameplateNotSelectedAlpha"] = "1",
    ["clampTargetNameplateToScreen"] = "1",
    ["nameplateShowAll"] = "1",
    ["nameplateMaxDistance"] = "60",
    ["nameplateShowFriendlyMinions"] = "0",
    ["nameplateTargetBehindMaxDistance"] = "30",
    ["nameplateShowEnemies"] = "1",
    ["NamePlateVerticalScale"] = "1",
    ["nameplateSelectedAlpha"] = "1",
    ["nameplateShowSelf"] = "0",
    ["nameplatePersonalShowAlways"] = "0",
    ["nameplateMotionSpeed"] = "0.049999997019768",
    ["nameplateGlobalScale"] = "1",
    ["nameplateShowEnemyMinions"] = "1",
    ["nameplateShowEnemyPets"] = "1",
    ["nameplateShowFriendlyNPCs"] = "1",
    ["nameplateSelectedScale"] = "1.1000000238419",
    ["nameplateMinAlphaDistance"] = "-158489.31924611",
    ["nameplateMotion"] = "1",
    ["nameplateShowFriends"] = "1",
    ["nameplateMinScale"] = "1",
    ["NamePlateHorizontalScale"] = "1",
    ["nameplateOtherTopInset"] = "0.070000000298023",
    ["nameplateOccludedAlphaMult"] = "0.19999998807907",
    ["nameplateSelfBottomInset"] = "0.1",
    ["nameplateShowEnemyTotems"] = "1",
    ["nameplateShowFriendlyGuardians"] = "0",
    ["nameplateShowEnemyGuardians"] = "1",
    ["nameplateRemovalAnimation"] = "1",
    ["nameplateSelfTopInset"] = "0.48",
    ["nameplateShowOnlyNames"] = "1",
    ["ShowNamePlateLoseAggroFlash"] = "1",
    },
    ["login_counter"] = 4474,
    ["click_space_friendly"] = {
    127,
    1,
    },
    ["bossmod_aura_height"] = 20,
    ["auto_toggle_combat"] = {
    ["blizz_healthbar_ic"] = true,
    ["blizz_healthbar_ooc"] = true,
    },
    ["hide_friendly_castbars"] = true,
    ["bossmod_cooldown_text_enabled"] = false,
    ["cast_color_settings"] = {
    ["enabled"] = true,
    ["width"] = 12,
    },
    ["auras_per_row_amount"] = 3,
    ["use_player_combat_state"] = true,
    ["aura_stack_anchor"] = {
    ["y"] = -3,
    ["x"] = 4,
    ["side"] = 7,
    },
    ["usePlaterWidget"] = false,
    ["plate_config"] = {
    ["player"] = {
    ["castbar_enabled"] = false,
    ["level_text_alpha"] = 0.3,
    },
    ["friendlyplayer"] = {
    ["spellpercent_text_font"] = "PT Sans Narrow",
    ["level_text_size"] = 8,
    ["actorname_use_class_color"] = true,
    ["cast"] = {
    110,
    6,
    },
    ["spellpercent_text_anchor"] = {
    ["x"] = 0,
    },
    ["spellname_text_outline"] = "OUTLINE",
    ["big_actorname_text_shadow_color"] = {
    0,
    0,
    0,
    1,
    },
    ["actorname_text_font"] = "Expressway",
    ["big_actorname_text_shadow_color_offset"] = {
    1,
    -1,
    },
    ["mana_incombat"] = {
    nil,
    4,
    },
    ["all_names"] = true,
    ["big_actortitle_text_outline"] = "OUTLINE",
    ["only_damaged"] = false,
    ["quest_color_enemy"] = {
    0.81176470588235,
    0.23529411764706,
    1,
    1,
    },
    ["only_thename"] = true,
    ["big_actortitle_text_font"] = "Arial Narrow",
    ["percent_text_ooc"] = true,
    ["level_text_outline"] = "OUTLINE",
    ["level_text_anchor"] = {
    ["y"] = 0,
    ["side"] = 11,
    },
    ["big_actortitle_text_shadow_color_offset"] = {
    1,
    -1,
    },
    ["big_actorname_text_font"] = "Arial Narrow",
    ["cast_incombat"] = {
    110,
    6,
    },
    ["quest_color_enabled"] = true,
    ["quest_enabled"] = true,
    ["big_actortitle_text_size"] = 10,
    ["spellname_text_anchor"] = {
    ["y"] = -2,
    ["side"] = 4,
    },
    ["big_actortitle_text_shadow_color"] = {
    0,
    0,
    0,
    1,
    },
    ["percent_text_anchor"] = {
    ["y"] = -4,
    ["side"] = 7,
    },
    ["big_actorname_text_size"] = 10,
    ["spellname_text_font"] = "PT Sans Narrow",
    ["big_actorname_text_outline"] = "OUTLINE",
    ["castbar_offset"] = -3.5,
    ["quest_color_neutral"] = {
    1,
    0.65,
    0,
    1,
    },
    ["mana"] = {
    nil,
    4,
    },
    ["spellpercent_text_size"] = 9,
    ["percent_text_enabled"] = true,
    ["health_incombat"] = {
    110,
    9,
    },
    ["percent_show_health"] = true,
    ["percent_text_size"] = 10,
    ["percent_text_color"] = {
    1,
    1,
    1,
    },
    ["percent_text_font"] = "默认",
    ["buff_frame_y_offset"] = 0,
    ["percent_show_percent"] = false,
    ["level_text_alpha"] = 1,
    ["spellname_text_size"] = 9,
    ["health"] = {
    110,
    9,
    },
    ["actorname_text_size"] = 11,
    ["actorname_text_anchor"] = {
    ["y"] = 4,
    ["side"] = 1,
    },
    },
    ["friendlynpc"] = {
    ["big_actorname_text_size"] = 11,
    ["spellpercent_text_font"] = "PT Sans Narrow",
    ["level_text_size"] = 8,
    ["cast"] = {
    110,
    6,
    },
    ["big_actortitle_text_size"] = 9,
    ["spellpercent_text_anchor"] = {
    ["x"] = 0,
    },
    ["spellname_text_outline"] = "OUTLINE",
    ["actorname_text_font"] = "Expressway",
    ["actorname_text_outline"] = "OUTLINE",
    ["actorname_text_spacing"] = 9,
    ["quest_color_enemy"] = {
    0.81176470588235,
    0.23529411764706,
    1,
    1,
    },
    ["percent_text_ooc"] = true,
    ["level_text_outline"] = "OUTLINE",
    ["level_text_anchor"] = {
    ["y"] = 0,
    ["side"] = 11,
    },
    ["cast_incombat"] = {
    110,
    6,
    },
    ["spellname_text_anchor"] = {
    ["y"] = -2,
    ["side"] = 4,
    },
    ["percent_text_anchor"] = {
    ["y"] = -4,
    ["side"] = 7,
    },
    ["spellname_text_size"] = 9,
    ["level_text_alpha"] = 1,
    ["spellname_text_font"] = "PT Sans Narrow",
    ["quest_color_neutral"] = {
    1,
    0.65,
    0,
    1,
    },
    ["percent_text_enabled"] = true,
    ["castbar_offset"] = -3.5,
    ["percent_show_percent"] = false,
    ["percent_text_color"] = {
    1,
    1,
    1,
    },
    ["spellpercent_text_size"] = 9,
    ["percent_show_health"] = true,
    ["percent_text_size"] = 10,
    ["percent_text_font"] = "默认",
    ["actorname_text_anchor"] = {
    ["y"] = 4,
    ["side"] = 1,
    },
    ["health_incombat"] = {
    110,
    9,
    },
    ["health"] = {
    110,
    9,
    },
    },
    ["global_health_height"] = 9,
    ["global_health_width"] = 110,
    ["enemyplayer"] = {
    ["big_actorname_text_size"] = 10,
    ["spellpercent_text_font"] = "PT Sans Narrow",
    ["level_text_size"] = 8,
    ["actorname_use_class_color"] = true,
    ["cast"] = {
    110,
    6,
    },
    ["big_actortitle_text_size"] = 10,
    ["spellpercent_text_anchor"] = {
    ["x"] = 0,
    },
    ["spellname_text_outline"] = "OUTLINE",
    ["percent_text_color"] = {
    1,
    1,
    1,
    },
    ["actorname_text_font"] = "Expressway",
    ["all_names"] = true,
    ["actorname_text_outline"] = "OUTLINE",
    ["actorname_text_spacing"] = 9,
    ["quest_color_enemy"] = {
    0.81176470588235,
    0.23529411764706,
    1,
    1,
    },
    ["level_text_outline"] = "OUTLINE",
    ["level_text_anchor"] = {
    ["y"] = 0,
    ["side"] = 11,
    },
    ["cast_incombat"] = {
    110,
    6,
    },
    ["quest_enabled"] = true,
    ["quest_color_enabled"] = true,
    ["spellname_text_anchor"] = {
    ["y"] = -2,
    ["side"] = 4,
    },
    ["percent_text_anchor"] = {
    ["y"] = -4,
    ["side"] = 7,
    },
    ["actorname_text_size"] = 10,
    ["spellname_text_font"] = "PT Sans Narrow",
    ["spellname_text_size"] = 9,
    ["quest_color_neutral"] = {
    1,
    0.65,
    0,
    1,
    },
    ["level_text_alpha"] = 1,
    ["percent_show_percent"] = false,
    ["castbar_offset"] = -3.5,
    ["spellpercent_text_size"] = 9,
    ["percent_text_size"] = 10,
    ["percent_text_font"] = "默认",
    ["health_incombat"] = {
    110,
    9,
    },
    ["health"] = {
    110,
    9,
    },
    ["spellpercent_text_enabled"] = false,
    ["actorname_text_anchor"] = {
    ["y"] = 4,
    ["side"] = 1,
    },
    ["level_text_enabled"] = false,
    },
    ["enemynpc"] = {
    ["castbar_offset"] = -3.5,
    ["spellpercent_text_font"] = "PT Sans Narrow",
    ["cast"] = {
    110,
    6,
    },
    ["spellpercent_text_anchor"] = {
    ["x"] = 0,
    },
    ["actorname_text_font"] = "Expressway",
    ["actorname_text_outline"] = "OUTLINE",
    ["actorname_text_spacing"] = 9,
    ["quest_color_enemy"] = {
    0.81176470588235,
    0.23529411764706,
    1,
    },
    ["level_text_outline"] = "OUTLINE",
    ["level_text_anchor"] = {
    ["y"] = 0,
    ["side"] = 11,
    },
    ["cast_incombat"] = {
    110,
    6,
    },
    ["spellname_text_anchor"] = {
    ["y"] = -2,
    ["side"] = 4,
    },
    ["percent_text_anchor"] = {
    ["y"] = -4,
    ["side"] = 7,
    },
    ["spellname_text_size"] = 9,
    ["spellname_text_font"] = "PT Sans Narrow",
    ["spellpercent_text_size"] = 9,
    ["level_text_alpha"] = 1,
    ["percent_text_size"] = 10,
    ["percent_show_percent"] = false,
    ["percent_text_font"] = "默认",
    ["percent_text_color"] = {
    1,
    1,
    1,
    },
    ["spellpercent_text_enabled"] = false,
    ["health_incombat"] = {
    110,
    9,
    },
    ["health"] = {
    110,
    9,
    },
    ["actorname_text_anchor"] = {
    ["y"] = 4,
    ["side"] = 1,
    },
    ["actorname_text_size"] = 10,
    ["level_text_enabled"] = false,
    },
    },
    ["aura_y_offset"] = 17.5,
    ["focus_texture"] = "11k9",
    ["cast_statusbar_bgcolor"] = {
    0.11372549019608,
    0.11372549019608,
    0.11372549019608,
    0.55000001192093,
    },
    ["bossmod_aura_width"] = 25,
    ["border_thickness"] = 1.5,
    ["aura_show_tooltip"] = true,
    ["resources_settings"] = {
    ["chr"] = {
    ["Player-4789-04C26F65"] = "ComboPoints",
    ["Player-4789-04BD463A"] = "Runes",
    ["Player-4789-04790087"] = "ArcaneCharges",
    ["Player-917-042F830D"] = "HolyPower",
    ["Player-4784-04E77A79"] = "HolyPower",
    ["Player-917-036F2C4A"] = "ArcaneCharges",
    ["Player-4788-0214C7F4"] = "SoulShards",
    ["Player-4792-00992A21"] = "ArcaneCharges",
    ["Player-917-0439AF50"] = "ArcaneCharges",
    },
    },
    ["indicator_scale"] = 0.7999999523162842,
    ["focus_color"] = {
    nil,
    nil,
    nil,
    1,
    },
    ["number_region"] = "eastasia",
    ["npc_colors"] = {
    [184908] = {
    true,
    false,
    "white",
    },
    [184910] = {
    true,
    false,
    "white",
    },
    [178141] = {
    true,
    false,
    "deeppink",
    },
    [179733] = {
    true,
    false,
    "deeppink",
    },
    [163457] = {
    false,
    false,
    "deeppink",
    },
    [185683] = {
    true,
    false,
    "white",
    },
    [185680] = {
    true,
    false,
    "white",
    },
    },
    ["hook_data"] = {
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)--insert code here\n    \nend\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    envTable.updateAlpha(unitFrame)\n    \nend",
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)--insert code here\n    \nend\n\n\n",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame)--insert code here\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor2 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -14, --x offset\n        y = 0, --y offset\n    };\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -2, --x offset\n        y = 0, --y offset\n    };\n    local anchor3 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -36, --x offset\n        y = 0, --y offset\n    };\n    local anchor4 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -24, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        --  Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        unitFrame.healthBar.questProgressTextFrame.outline = \"OUTLINE\"\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor3)\n        else    \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor2)\n        end\n    else\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor4)\n        else \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor)\n        end\n    end\n    \n    -----------------------------------------------------------------------\n    envTable.AlphaTarget = 1.0 \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        \n        if (unitFrame.namePlateIsTarget) then\n            alphaFrame:SetAlpha (envTable.AlphaTarget)\n        end\n    end\n    \n    \n    \n    ----------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend\n\n\n\n\n\n",
    ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    envTable.updateAlpha(unitFrame)\n    \n    \n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor2 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -14, --x offset\n        y = 0, --y offset\n    };\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -2, --x offset\n        y = 0, --y offset\n    };\n    local anchor3 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -36, --x offset\n        y = 0, --y offset\n    };\n    local anchor4 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -24, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        --  Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        unitFrame.healthBar.questProgressTextFrame.outline = \"OUTLINE\"\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor3)\n        else    \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor2)\n        end\n    else\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor4)\n        else \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor)\n        end\n    end\n    \n    -----------------------------------------------------------------------\n    envTable.AlphaTarget = 1.0 \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        \n        if (unitFrame.namePlateIsTarget) then\n            alphaFrame:SetAlpha (envTable.AlphaTarget)\n        end\n    end\n    \n    \n    \n    ----------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
    ["Name Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateAlpha(unitFrame) --insert code here\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor2 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -14, --x offset\n        y = 0, --y offset\n    };\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -2, --x offset\n        y = 0, --y offset\n    };\n    local anchor3 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -36, --x offset\n        y = 0, --y offset\n    };\n    local anchor4 = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -24, --x offset\n        y = 0, --y offset\n    };\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        --  Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        unitFrame.healthBar.questProgressTextFrame.outline = \"OUTLINE\"\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor3)\n        else    \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor2)\n        end\n    else\n        if (unitFrame.castBar.casting or unitFrame.castBar.channeling) then\n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor4)\n        else \n            Plater.SetAnchor (envTable.questProgressTextFrame, anchor)\n        end\n    end\n    \n    -----------------------------------------------------------------------\n    envTable.AlphaTarget = 1.0 \n    \n    function envTable.updateAlpha(unitFrame)\n        local alphaFrame = unitFrame\n        \n        if (unitFrame.namePlateIsTarget) then\n            alphaFrame:SetAlpha (envTable.AlphaTarget)\n        end\n    end\n    \n    \n    \n    ----------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
    },
    ["Time"] = 1677555901,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    ["Enabled"] = true,
    ["none"] = true,
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132212,
    ["Enabled"] = true,
    ["Revision"] = 451,
    ["semver"] = "",
    ["Author"] = "Viashi-Antonidas",
    ["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
    ["Prio"] = 97,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "任务进度",
    ["LastHookEdited"] = "Nameplate Created",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
    ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.castBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
    },
    ["Time"] = 1671799991,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133004,
    ["Enabled"] = true,
    ["Revision"] = 309,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Adds a pixels perfect border around the cast bar.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Cast Bar Border",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
    ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\",-132,0)\n            icon:SetWidth (18.5)\n            icon:SetHeight (18.5)\n            \n        elseif (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\",1,-1)\n            icon:SetWidth (28)\n            icon:SetHeight (28)\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n        \n        \n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
    },
    ["Time"] = 1663038911,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133004,
    ["Enabled"] = true,
    ["Revision"] = 648,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Cast Icon Border & Position",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateShield(unitFrame)\nend\n\n\n",
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateShield(unitFrame)\nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    function envTable.updateShield(frame) \n        local castBar = frame.castBar\n        local shield = castBar.BorderShield\n        \n        if not castBar.canInterrupt then\n            shield:Hide()\n        end \n    end\nend\n\n\n",
    },
    ["Time"] = 1671797894,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133504,
    ["Enabled"] = true,
    ["Revision"] = 101,
    ["semver"] = "",
    ["Author"] = "Egraowdh-Illidan",
    ["Desc"] = "Removes the shield border on uninterruptible casts",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "No Castbar Shield",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["overlayTexture"] = "Interface\\RaidFrame\\Shield-Overlay",
    ["texture"] = "Interface\\RaidFrame\\Shield-Fill",
    ["shieldColor"] = {
    0.99607843137255,
    0.99607843137255,
    0.99607843137255,
    1,
    },
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.create(unitFrame)\n        local bar = unitFrame.healthBar\n        local shields = bar.shieldAbsorbIndicator\n        local absorbs = bar.healAbsorbIndicator\n        \n        shields:SetTexture(modTable.config.texture)\n        shields:SetVertexColor(DetailsFramework:ParseColors(modTable.config.shieldColor))\n        bar.Settings.ShieldIndicatorTexture = modTable.config.texture\n        envTable.createOverlay(bar, shields)\n        \n        absorbs:SetTexture(modTable.config.texture)\n        absorbs:SetVertexColor(DetailsFramework:ParseColors(modTable.config.absorbColor))\n        envTable.createOverlay(bar, absorbs)\n        \n    end\n    \n    function envTable.createOverlay(bar, texture)\n        if texture.overlay then return end\n        \n        local overlay = bar:CreateTexture(nil, \"ARTWORK\")\n        \n        local r, g, b, a = texture:GetVertexColor()\n        overlay:SetVertexColor(r, g, b, a)\n        overlay:SetDrawLayer(\"ARTWORK\", 6)\n        overlay:SetTexture(modTable.config.overlayTexture, true, true)\n        overlay:SetAllPoints(texture)\n        overlay:SetHorizTile(true)\n        overlay:SetVertTile(true)\n        \n        texture.overlay = overlay \n        texture.overlay:Hide()\n    end\n    \n    function envTable.update(unitFrame)\n        local shield = unitFrame.healthBar.shieldAbsorbIndicator\n        \n        if shield:IsVisible() then\n            shield.overlay:Show()\n        else\n            shield.overlay:Hide()\n        end\n        \n    end\n    \n    envTable.create(unitFrame)\n    envTable.update(unitFrame)\nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.update(unitFrame)\nend\n\n\n",
    },
    ["Time"] = 1680954810,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/dtAR50M7a/3",
    ["Icon"] = 136228,
    ["Enabled"] = true,
    ["Revision"] = 694,
    ["semver"] = "1.0.2",
    ["Author"] = "Lucyon-Bloodfeather",
    ["Desc"] = "Some extra options for shields and absorbs",
    ["Prio"] = 99,
    ["version"] = 3,
    ["PlaterCore"] = 1,
    ["Name"] = "Shield & Absorb Options",
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Title",
    ["Value"] = "Options for shield & absorb indicators. Reload to take effect!",
    ["Key"] = "option2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Description",
    ["Value"] = "Make sure Advanced > Show Health Prediction/Absorption and Show Shield Prediction is enabled for these to work.",
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "",
    ["Value"] = 0,
    ["Key"] = "option10",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Shield Options Label",
    ["Value"] = "Shield Options",
    ["Key"] = "option7",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Shield Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "shieldColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color for shields that absorb damage",
    },
    {
    ["Type"] = 6,
    ["Name"] = "",
    ["Value"] = 0,
    ["Key"] = "option12",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Absorb Options",
    ["Value"] = "Absorb Options",
    ["Key"] = "option9",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Absorb Color",
    ["Value"] = {
    0.78039215686275,
    0.25098039215686,
    0.25098039215686,
    1,
    },
    ["Key"] = "absorbColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Color for healing absorbtions (shields that absorb healing)",
    },
    {
    ["Type"] = 6,
    ["Name"] = "",
    ["Value"] = 0,
    ["Key"] = "option11",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Name"] = "Texture",
    ["Value"] = "Interface\\RaidFrame\\Shield-Fill",
    ["Key"] = "texture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "The texture to use for shields and healing absorbs",
    },
    {
    ["Type"] = 3,
    ["Name"] = "Overlay Texture",
    ["Value"] = "Interface\\RaidFrame\\Shield-Overlay",
    ["Key"] = "overlayTexture",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "The overlay texture put on top of the shield/healabsorb texture",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x6147103c180434c",
    ["Hooks"] = {
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    local borderTexture = unitFrame.castBar.roundBorder.borderTexture\n    if (not unitFrame.IsSelf) then\n        borderTexture:Show()\n    else\n        borderTexture:Hide()\n    end\nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the color (use /plater colors)\n    local borderColor = \"black\" \n    \n    --adjust the border offset to correctly fit into the cast bar\n    local leftOffset = -15.5\n    local topOffset = 5\n    local rightOffset = 15.5\n    local bottomOffset = -5\n    \n    --adjust the border texture\n    local texture = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Slim_Select.tga]]\n    \n    --adjust the alpha\n    local alpha = 1\n    \n    \n    --private\n    if (not unitFrame.castBar.roundBorder) then\n        local roundBorder = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        roundBorder:SetFrameLevel (unitFrame.castBar:GetFrameLevel() - 2)\n        roundBorder:SetPoint (\"topleft\", unitFrame.castBar, \"topleft\", 0, 0)\n        roundBorder:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomright\", 0, 0)\n        unitFrame.castBar.roundBorder = roundBorder        \n        \n        local innerBorder = Plater:CreateImage (roundBorder, texture)\n        roundBorder.borderTexture = innerBorder\n    end\n    \n    local castBar = unitFrame.castBar\n    local borderTexture = castBar.roundBorder.borderTexture\n    \n    borderTexture:SetPoint (\"topleft\", castBar, \"topleft\", leftOffset, topOffset)\n    borderTexture:SetPoint (\"bottomright\", castBar, \"bottomright\", rightOffset, bottomOffset)\n    borderTexture:SetTexture (texture)\n    borderTexture:SetVertexColor (DetailsFramework:ParseColors (borderColor))\n    borderTexture:SetAlpha (alpha)    \n    \n    \nend",
    },
    ["Time"] = 1671798572,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133004,
    ["Enabled"] = true,
    ["Revision"] = 435,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Add an extra border around all nameplates except the personal health bar. See the constructor for settings.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    ["Name"] = "cast  Border",
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#c59a6c\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\",\n        [73967] = \"Niuzao, the Black Ox\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1666697388,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    ["Enabled"] = true,
    ["TANK"] = true,
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136180,
    ["Enabled"] = true,
    ["Revision"] = 184,
    ["semver"] = "",
    ["Author"] = "Brewdux-Tarren Mill",
    ["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Pet Threat Highlighter",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                if (currentText ~= nil and currentText ~= '') then \n                    castBar.Text:SetText(currentText .. \"[\" .. targetNameByColor .. \"]\")\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1666697374,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/VOuCDrV8Y/1",
    ["Icon"] = 135901,
    ["Enabled"] = true,
    ["Revision"] = 149,
    ["semver"] = "1.0.0",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Show the cast target name with the spell name",
    ["Prio"] = 99,
    ["version"] = 1,
    ["PlaterCore"] = 1,
    ["Name"] = "Cast Target on Spell Name",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Updated",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = 1.5\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b, a= auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            if auraIcon.filter == \"HELPFUL\" then\n                local w = math.floor(Plater.db.profile.aura_width + 0.5)\n                local h = math.floor(Plater.db.profile.aura_height + 0.5)\n                auraIcon:SetSize (w+4, w+4)\n                auraIcon.Icon:SetSize (w+2, w+2)\n                auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.05, 0.95)\n                --auraIcon.Icon:SetTexCoord(0.05, 0.95, (1-(h-2)/(w-2))/2+0.05, 0.95-(1-(h-2)/(w-2))/2)\n                \n                if UnitCanAttack(\"player\", unitId) then\n                    if auraIcon.AuraType == \"magic\" then\n                        r, g, b = 51/255, 153/255, 1\n                        -- r, g, b = 0, 0, 0\n                    elseif auraIcon.AuraType == \"curse\" then\n                        r, g, b = 153/255, 0, 1\n                    elseif auraIcon.AuraType == \"disease\" then\n                        r, g, b = 153/255, 102/255, 0\n                    elseif auraIcon.AuraType == \"poison\" then\n                        r, g, b = 0, 153/255, 0\n                    elseif auraIcon.AuraType == \"enrage\" then\n                        r, g, b = 1, 0, 0\n                        -- r, g, b = 0, 0, 0\n                    else\n                        r, g, b = 0, 0, 0\n                    end\n                else\n                    r, g, b = 0, 0, 0\n                end\n                \n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            else\n                local w = math.floor(Plater.db.profile.aura_width + 0.5)\n                local h = math.floor(Plater.db.profile.aura_height + 0.5)\n                auraIcon:SetSize (w, h)\n                auraIcon.Icon:SetSize (w-2, h-2)\n                --auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.05, 0.95)\n                --auraIcon.Icon:SetTexCoord(0.05, 0.95, (1-(h-2)/(w-2))/2+0.05, 0.95-(1-(h-2)/(w-2))/2)\n                if modTable.config.scale then\n                    auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.55-(h-2)/(w-2)/2, 0.45+(h-2)/(w-2)/2)\n                else\n                    auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.05, 0.95)\n                end\n                auraIcon.PixelPerfectBorder:SetVertexColor (0, 0, 0)\n            end\n            \n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b, a = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            local w = math.floor(Plater.db.profile.aura_width + 0.5)\n            local h = math.floor(Plater.db.profile.aura_height + 0.5)\n            --auraIcon:SetSize (w, h)\n            --auraIcon.Icon:SetSize (w-2, h-2)\n            auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.05, 0.95)\n            --auraIcon.Icon:SetTexCoord(0.05, 0.95, (1-(h-2)/(w-2))/2+0.05, 0.95-(1-(h-2)/(w-2))/2)\n            --auraIcon.Icon:SetTexCoord(0.05, 0.95, 0.55-(h-2)/(w-2)/2, 0.45+(h-2)/(w-2)/2)\n            \n            --print(auraIcon.AuraType)\n            if UnitCanAttack(\"player\", unitId) then\n                if auraIcon.AuraType == \"magic\" then\n                    r, g, b = 51/255, 153/255, 1\n                    --  r, g, b = 0, 0, 0\n                elseif auraIcon.AuraType == \"curse\" then\n                    r, g, b = 153/255, 0, 1\n                elseif auraIcon.AuraType == \"disease\" then\n                    r, g, b = 153/255, 102/255, 0\n                elseif auraIcon.AuraType == \"poison\" then\n                    r, g, b = 0, 153/255, 0\n                elseif auraIcon.AuraType == \"enrage\" then\n                    r, g, b = 1, 0, 0\n                    -- r, g, b = 0, 0, 0\n                else\n                    r, g, b = 0, 0, 0\n                end\n            else\n                r, g, b = 0, 0, 0\n            end\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
    },
    ["Time"] = 1674183559,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["role"] = {
    },
    ["spec"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133006,
    ["Enabled"] = false,
    ["Revision"] = 1409,
    ["semver"] = "",
    ["Author"] = "????????-Illidan",
    ["Desc"] = "Config aura borders",
    ["Prio"] = 99,
    ["Name"] = "!Advanced Debuff Border",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Key"] = "scale",
    ["Value"] = true,
    ["Name"] = "图标保持宽高比例不变",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    \n    -- Sort function - do not touch\n    --Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        if (not aura1) or (not aura2) then return end\n        if aura1.CanStealOrPurge then\n            return true\n        elseif aura2.CanStealOrPurge then\n            return false\n        elseif aura1.filter == \"HELPFUL\" then\n            return true\n        elseif aura2.filter == \"HELPFUL\" then\n            return false\n        end\n        \n        -- return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n        --return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n    end\nend\n\n\n\n\n\n\n",
    },
    ["Time"] = 1671797811,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132281,
    ["Enabled"] = false,
    ["Revision"] = 524,
    ["semver"] = "",
    ["Author"] = "Ditador-Azralon",
    ["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Aura Reorder",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["sqlevel"] = false,
    ["level"] = true,
    ["namecolor"] = false,
    ["eliteicon"] = true,
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateIndicator (unitFrame, unitId)\nend\n\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateIndicator (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if modTable.config.namecolor and not UnitIsPlayer(unitId) then\n            if UnitIsFriend(\"player\", unitId) then\n                unitName = \"|cff4baf4c\"..unitName..\"|r\"\n            elseif UnitIsEnemy(\"player\", unitId) then\n                unitName = \"|cffc74040\"..unitName..\"|r\"\n            else\n                unitName = \"|cffdac55c\"..unitName..\"|r\"\n            end\n        end\n        \n        local colorlevel =\"\"\n        if modTable.config.level then\n            local level = UnitLevel(unitId)\n            local lolevel = level - UnitLevel(\"player\")\n            if level == -1 then\n                colorlevel = \"|c00ff0000??|r \"\n            else\n                if lolevel >= 5 then\n                    colorlevel = \"|c00ff0000\"..level..\"|r \"\n                elseif lolevel >= 3 and lolevel < 5 then\n                    colorlevel = \"|c00fe8000\"..level..\"|r \"\n                elseif lolevel == 0 then\n                    if modTable.config.sqlevel then \n                        colorlevel = \"|c00ffff00\"..level..\"|r \"\n                    else\n                        colorlevel = \"\"\n                    end\n                elseif lolevel >= -2 then\n                    colorlevel = \"|c00ffff00\"..level..\"|r \"\n                elseif lolevel >= -7 then\n                    colorlevel = \"|c0000ff00\"..level..\"|r \"\n                elseif lolevel < -7 then\n                    colorlevel = \"|c00808080\"..level..\"|r \"\n                else\n                    colorlevel = \"|c00ffffff\"..level..\"|r \"\n                end\n            end\n        end\n        \n        if modTable.config.eliteicon then\n            if (unitClassification == \"rareelite\") then\n                unitFrame.unitName:SetText (colorlevel..unitName)\n                \n            elseif (unitClassification == \"rare\") then\n                unitFrame.unitName:SetText (colorlevel.. unitName)\n                \n            elseif (unitClassification == \"elite\") then\n                unitFrame.unitName:SetText (colorlevel..unitName)\n            else\n                unitFrame.unitName:SetText (colorlevel..unitName)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1695021873,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135795,
    ["Enabled"] = true,
    ["Revision"] = 730,
    ["semver"] = "",
    ["Author"] = "�r��ne-Kel'thuzad",
    ["Desc"] = "Show yellow star for elite; Silver star for rares",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Elite Level Name",
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "基础设置",
    ["Value"] = "基础设置（需重载）",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "★精英图标",
    ["Value"] = true,
    ["Key"] = "eliteicon",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "显示等级",
    ["Value"] = true,
    ["Key"] = "level",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "显示相同等级",
    ["Value"] = true,
    ["Key"] = "sqlevel",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "姓名敌友染色",
    ["Value"] = true,
    ["Key"] = "namecolor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Player Logon"] = "function()\n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    \n    Plater.TargetIndicators  [\"Kui\"] = {\n        path = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\targetarrows3.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 30, -- Change size\n        height = 30,\n        x = 29, -- Change position\n        y = 0,\n        color = \"#03a9f4\",\n    }\n    \n    \n    \nend",
    },
    ["Time"] = 1697188839,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135888,
    ["Enabled"] = true,
    ["Revision"] = 290,
    ["semver"] = "",
    ["Author"] = "Ethric-Twisting Nether",
    ["Desc"] = "Target Arrows",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Kui指示器",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Player Logon"] = "function()\n    \n    --Reload after importing or changing anything\n    --Choose the Arrow from the Target Tab\n    \n    Plater.TargetIndicators  [\"EthricArrow\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        width = 26, -- Change size\n        height = 26,\n        x = 22, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow2\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 22, -- Change size\n        height = 22,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow3\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow2.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 22, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow4\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow4.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow5\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow5.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow6\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow6.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow7\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow7.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 14, -- Change size\n        height = 14,\n        x = 18, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow8\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow8.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 17, -- Change size\n        height = 17,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow9\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\media\\EthricArrow9.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0,\n    }\n    \n    Plater.TargetIndicators  [\"EthricArrow10\"] = {\n        path = [[Interface\\Addons\\SharedMedia_MyMedia\\EthricArrow10.tga]],\n        coords = {\n            {0, 1, 0, 1}, --Left arrow - {0, 0, 0, 0} to hide. {0, 1, 0, 1} to show\n            {1, 0, 0, 1} --Right arrow - {0, 0, 0, 0} to hide. {1, 0, 0, 1} to show\n        },\n        desaturated = false,\n        width = 20, -- Change size\n        height = 20,\n        x = 20, -- Change position\n        y = 0, \n    }\n    \nend",
    },
    ["Time"] = 1671797915,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/okQgj8zoy/6",
    ["Icon"] = 136068,
    ["Enabled"] = true,
    ["Revision"] = 106,
    ["semver"] = "1.0.5",
    ["Author"] = "Ethric-Twisting Nether",
    ["Desc"] = "Target Arrows",
    ["Prio"] = 99,
    ["version"] = 6,
    ["PlaterCore"] = 1,
    ["Name"] = "Ethric's Arrows",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["prewarnPct"] = 0,
    ["textureColor"] = {
    0,
    0,
    0,
    0.19276171922684,
    },
    ["textureShowInPrewarn"] = true,
    ["textureAllowModify"] = true,
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- How far before the official plater cutoff threshold to show the execute marker\n    envTable.WarningPct = modTable.config.prewarnPct\n    envTable.TextureColor = modTable.config.textureColor\n    envTable.TextureEmphasize = modTable.config.textureEmphasize\n    envTable.TextureAllowModify = modTable.config.textureAllowModify\n    envTable.TextureShowInPrewarn = modTable.config.textureShowInPrewarn\n    \n    --private (internal functions)\n    do\n        -- Show the execute texture with default plater parameters (copy paste from plater code)\n        function envTable.showExecuteTexture (healthBar, profile)\n            if (not healthBar.executeRange:IsShown() or healthBar.healthCutOff.isLower) then\n                healthBar.executeRange:Show()\n                healthBar.executeRange:SetTexCoord (0, modTable.DB_HEALTHCUTOFF_AT, 0, 1)\n                healthBar.executeRange:SetAlpha (0.2)\n                healthBar.executeRange:SetVertexColor (.3, .3, .3)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\")\n                \n                if (profile.health_cutoff_extra_glow) then\n                    healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                    healthBar.ExecuteGlowDown.ShowAnimation:Play()\n                end\n            end\n        end\n        \n        function envTable.updateNameplate (unitFrame)\n            local profile = Plater.db.profile\n            local healthBar = unitFrame.healthBar\n            local healthPercent = (healthBar.currentHealth or 1) / (healthBar.currentHealthMax or 1)\n            \n            -- Show with the warning range - only for the lower execute percent, high doesn't make sense\n            local useCutoff = modTable.DB_HEALTHCUTOFF_AT > 0\n            if (useCutoff and healthPercent < modTable.DB_HEALTHCUTOFF_AT + envTable.WarningPct) then\n                \n                if (not healthBar.healthCutOff:IsShown() or healthBar.healthCutOff.isLower) then\n                    -- Note that in this function we are constantly fighting plater to show the right things, as it keeps trying to unset them if we're above a certain percent\n                    -- Code yoinked from Plater.NameplateTick\n                    healthBar.healthCutOff.isUpper = true\n                    healthBar.healthCutOff.isLower = false\n                    healthBar.healthCutOff:ClearAllPoints()\n                    healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                    healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * modTable.DB_HEALTHCUTOFF_AT, 0)\n                    \n                    if (not profile.health_cutoff_hide_divisor) then\n                        healthBar.healthCutOff:Show()\n                        -- Changed from plater code - do not animate, otherwise it constantly bounces\n                        --healthBar.healthCutOff.ShowAnimation:Play()\n                    else\n                        healthBar.healthCutOff:Show()\n                        healthBar.healthCutOff:SetAlpha (0)\n                    end\n                    \n                    -- If the option is ticked to show the execute texture during prewarn, show it here\n                    if (envTable.TextureShowInPrewarn) then\n                        envTable.showExecuteTexture(healthBar, profile)\n                    end\n                end\n            end\n            \n            -- Texture handling. Plater thinks it is already shown once we get into execute range since\n            -- healthCutoff is already shown and that's the only check it does. Instead, we do an extra\n            -- check and show the texture/glow if it is not shown.\n            if (useCutoff and healthPercent < modTable.DB_HEALTHCUTOFF_AT) then\n                envTable.showExecuteTexture(healthBar, profile)\n            end\n            \n            -- Make the execute bar texture more prominent when shown. Separated from the\n            -- code above just to emphasize the changes.\n            if (healthBar.executeRange:IsShown()) then\n                if (envTable.TextureEmphasize) then\n                    -- Draw over the top of the bar (default draws underneath)\n                    healthBar.executeRange:SetDrawLayer (\"overlay\", 7)\n                end\n                if (envTable.TextureAllowModify) then\n                    -- Make it the requested color, rather than grey\n                    local r,g,b,a = unpack(envTable.TextureColor)\n                    healthBar.executeRange:SetVertexColor (r, g, b)\n                    -- Make it the requested alpha\n                    healthBar.executeRange:SetAlpha(a)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Destructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.hookedPlater then\n        Plater.SetExecuteRange = envTable.origSetExecuteRange\n        envTable.hookedPlater = false\n    end\nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateNameplate (unitFrame)\nend\n\n\n",
    ["Initialization"] = "function (modTable)\n    -- Whether we've applied the hook since load time\n    modTable.hookedPlater = false\n    \n    -- Defaults that Plater uses internally\n    modTable.DB_USE_HEALTHCUTOFF = false\n    modTable.DB_HEALTHCUTOFF_AT = -0.1\n    modTable.DB_HEALTHCUTOFF_AT_UPPER = 1.1\nend\n\n\n",
    ["Player Logon"] = "function (modTable)\n    -- We need to hook the SetExecuteRange function to intercept Plater's interpretation of when to show execute ranges. We do this in an attempt to gain any edits they do to the Plater.GetHealthCutoffValue function, which calculates the ranges for us.\n    if not modTable.hookedPlater then\n        modTable.origSetExecuteRange = Plater.SetExecuteRange\n        Plater.SetExecuteRange = function (isExecuteEnabled, healthAmountLower, healthAmountUpper)\n            -- Variable names mirror plater for easier code reference\n            modTable.DB_USE_HEALTHCUTOFF = isExecuteEnabled\n            modTable.DB_HEALTHCUTOFF_AT = tonumber (healthAmountLower) or -0.1\n            modTable.DB_HEALTHCUTOFF_AT_UPPER = tonumber (healthAmountUpper) or 1.1\n            return modTable.origSetExecuteRange(isExecuteEnabled, healthAmountLower, healthAmountUpper)\n        end\n        modTable.hookedPlater = true\n        \n        -- Now that it's hooked, grab the data by recalculating execute percentages\n        -- Wait first because we have no idea how early this fired\n        C_Timer.After (4, Plater.GetHealthCutoffValue)\n    end\nend\n\n\n",
    },
    ["Time"] = 1697188838,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/FeZoQQX5k/4",
    ["Icon"] = 135358,
    ["Enabled"] = true,
    ["Revision"] = 351,
    ["semver"] = "1.0.3",
    ["Author"] = "Grunndor-Frostmourne",
    ["Desc"] = "Adds extra options to enhance Plater's execute range functionality. Includes the ability to change the colour of the execute bar texture, and to show the execute cutoff marker before reaching execute range.",
    ["Prio"] = 98,
    ["version"] = 4,
    ["PlaterCore"] = 1,
    ["Name"] = "Advanced Execute Options",
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Option 5",
    ["Value"] = "Note that changing options here will not work for nameplates that have already been shown.",
    ["Key"] = "option5",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 6",
    ["Value"] = "Use /reload after changing options to see changes immediately.",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 0.5,
    ["Desc"] = "How many percent above execute range to pre-show the marker and texture. Right click to set value directly.",
    ["Min"] = 0,
    ["Key"] = "prewarnPct",
    ["Value"] = 0,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Prewarn Percent",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Emphasize Execute Texture",
    ["Value"] = true,
    ["Key"] = "textureEmphasize",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "If enabled, the execute texture will draw much more prominently over the health bar.",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change Texture Color",
    ["Value"] = true,
    ["Key"] = "textureAllowModify",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Modify the texture color to the one picked below.",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Execute Texture Color",
    ["Value"] = {
    0,
    0,
    0,
    0.70253050327301,
    },
    ["Key"] = "textureColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "The color of the execute texture. Choose something that works well with your other plater mod bar colours. Black or white are generally good.",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Show execute texture inside prewarn percent",
    ["Value"] = false,
    ["Key"] = "textureShowInPrewarn",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Whether to show the execute texture on the executable part of the health bar early, or to wait until we reach the actual executable percent to show it.",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 3,\n        warning = 10,\n    }\n    \n    envTable.Sizes = {\n        critical = 9,\n        warning = 10,\n    }\n    \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            \n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                Plater:SetFontSize (auraIcon.TimerText, envTable.Sizes.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                Plater:SetFontSize (auraIcon.TimerText, envTable.Sizes.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1677555897,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\Timer\\Challenges-Logo",
    ["Enabled"] = false,
    ["Revision"] = 207,
    ["semver"] = "",
    ["Author"] = "Ditador-Azralon",
    ["Desc"] = "Change the color of the aura timer by it's time left",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Paint Aura Timers",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["BScbt"] = true,
    ["Descanchor"] = 8,
    ["BSborderth"] = 1.5,
    ["Descyoff"] = 3,
    ["BSstack_color"] = {
    1,
    0,
    0,
    1,
    },
    },
    ["LastHookEdited"] = "Nameplate Created",
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.BShidefriendly and unitFrame.actorType == \"friendlyplayer\" then\n        if unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Hide()\n        end\n    else\n        if not unitFrame.ExtraIconFrame:IsShown() then\n            unitFrame.ExtraIconFrame:Show()\n        end\n    end      \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Initialization"] = "function (modTable)\n    \n    local function BuffSepcialFormat ()\n        local DF = _G [\"DetailsFramework\"]\n        DF.IconRowFunctions = DF.IconMixin\n        DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n            \n            local actualSpellName, _, spellIcon = GetSpellInfo (spellId)\n            \n            if forceTexture then\n                spellIcon = forceTexture\n            end\n            \n            local spellName = actualSpellName or \"unknown_aura\"\n            \n            if (spellIcon) then\n                local profile = Plater.db.profile\n                local iconFrame = self:GetIcon()\n                iconFrame.Texture:SetTexture (spellIcon)\n                iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                \n                local size = modTable.config.BSborderth\n                \n                if (not iconFrame.PixelPerfectBorder) then\n                    iconFrame.PixelPerfectBorder = CreateFrame (\"frame\", nil, iconFrame, \"NamePlateFullBorderTemplate\")\n                end\n                \n                iconFrame.Border:Hide()\n                iconFrame.PixelPerfectBorder:SetVertexColor (Plater:ParseColors (borderColor))\n                iconFrame.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                iconFrame.PixelPerfectBorder:UpdateSizes()\n                \n                iconFrame.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                iconFrame.Texture:ClearAllPoints()\n                iconFrame.Texture:SetAllPoints()\n                \n                if (startTime) then\n                    CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                    \n                    if (self.options.show_text) then\n                        iconFrame.CountdownText:Show()\n                        \n                        local now = GetTime()\n                        \n                        iconFrame.timeRemaining = startTime + duration - now\n                        iconFrame.expirationTime = startTime + duration\n                        \n                        local formattedTime = (iconFrame.timeRemaining > 0) and iconFrame.parentIconRow.FormatCooldownTime(iconFrame.timeRemaining) or \"\"\n                        iconFrame.CountdownText:SetText (formattedTime)\n                        \n                        iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                        DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                        DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                        DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                        \n                        if modTable.config.BScbt then\n                            if (iconFrame.timeRemaining < 5) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"red\")\n                            elseif (iconFrame.timeRemaining < 50) then\n                                Plater:SetFontColor (iconFrame.CountdownText, \"darkorange\")\n                            else\n                                Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                            end \n                        else\n                            Plater:SetFontColor (iconFrame.CountdownText, modTable.config.BStimer_color)\n                        end\n                        \n                        if self.options.on_tick_cooldown_update then\n                            iconFrame.lastUpdateCooldown = now\n                            iconFrame:SetScript(\"OnUpdate\", self.OnIconTick)\n                        else\n                            iconFrame:SetScript(\"OnUpdate\", nil)\n                        end\n                        \n                    else\n                        iconFrame:SetScript(\"OnUpdate\", nil)\n                        iconFrame.CountdownText:Hide()\n                    end\n                    \n                    iconFrame.Cooldown:SetReverse (self.options.cooldown_reverse)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (self.options.surpress_blizzard_cd_timer)\n                else\n                    iconFrame.timeRemaining = nil\n                    iconFrame.expirationTime = nil\n                    iconFrame:SetScript(\"OnUpdate\", nil)\n                    iconFrame.CountdownText:Hide()\n                end\n                \n                if (descText and self.options.desc_text) then\n                    iconFrame.Desc:Show()\n                    iconFrame.Desc:SetText (descText.text)     \n                    iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                    local Anchor = {\n                        side = modTable.config.Descanchor, \n                        x = modTable.config.Descxoff, \n                        y = modTable.config.Descyoff,\n                    }      \n                    Plater.SetAnchor (iconFrame.Desc, Anchor)\n                    DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                    DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                    DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                else\n                    iconFrame.Desc:Hide()\n                end\n                \n                \n                if (count and count > 1 and self.options.stack_text) then\n                    iconFrame.StackText:Show()\n                    iconFrame.StackText:SetText (count)\n                    iconFrame.StackText:SetTextColor (DF:ParseColors (modTable.config.BSstack_color))\n                    iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                    DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                    DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                    DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                else\n                    iconFrame.StackText:Hide()\n                end\n                \n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                iconFrame:Show()\n                \n                --> update the size of the frame\n                self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                \n                --> make information available\n                iconFrame.spellId = spellId\n                iconFrame.startTime = startTime\n                iconFrame.duration = duration\n                iconFrame.count = count\n                iconFrame.debuffType = debuffType\n                iconFrame.caster = caster\n                iconFrame.canStealOrPurge = canStealOrPurge\n                iconFrame.isBuff = isBuff\n                iconFrame.spellName = spellName\n                \n                --add the spell into the cache\n                self.AuraCache [spellId or -1] = true\n                self.AuraCache [spellName] = true\n                self.AuraCache.canStealOrPurge = self.AuraCache.canStealOrPurge or canStealOrPurge\n                self.AuraCache.hasEnrage = self.AuraCache.hasEnrage or debuffType == \"\" --yes, enrages are empty-string...\n                \n                --> show the frame\n                self:Show()\n                \n                return iconFrame\n            end\n        end\n    end    \n    \n    -- exchange formatting:\n    \n    function modTable.hookTimeFormat()\n        BuffSepcialFormat ()\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        BuffSepcialFormat ()\n    end\n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
    ["Player Logon"] = "function(modTable)\n    \n    modTable.hookTimeFormat()\n    \nend",
    },
    ["Time"] = 1687490727,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 134328,
    ["Enabled"] = true,
    ["Revision"] = 902,
    ["semver"] = "",
    ["Author"] = "Driani-Antonidas",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "Buff Special Options",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Basic Options",
    ["Name"] = "Basic Options",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "BShidefriendly",
    ["Value"] = true,
    ["Name"] = "Hide Buff Special on Friendly UnitFrame",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Hide Buff Special at Friendly UnitFrame",
    },
    {
    ["Type"] = 4,
    ["Key"] = "BScbt",
    ["Value"] = false,
    ["Name"] = "Text Color By time",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "If enabled, cooldown text color changed by time left. Below 10 is orange and below 5 is red.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set Buff Special border thickness",
    ["Min"] = 0,
    ["Name"] = "Border Thickness",
    ["Value"] = 1.2,
    ["Key"] = "BSborderth",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "Blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Buff Special Text Options",
    ["Name"] = "Buff Special Text Options",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "BStimer_color",
    ["Value"] = {
    1,
    1,
    0,
    1,
    },
    ["Name"] = "Timer Text Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Set timer text color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "BSstack_color",
    ["Value"] = {
    1,
    1,
    0,
    1,
    },
    ["Name"] = "Stack Text Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Set stack text color",
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "Blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Buff Special Player Name Options",
    ["Name"] = "Buff Special Player Name Text Options",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 9,
    ["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)) / 9(CENTER)",
    ["Min"] = 1,
    ["Name"] = "Player Name Text Anchor",
    ["Value"] = 4,
    ["Key"] = "Descanchor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set player name text y-offset",
    ["Min"] = -100,
    ["Name"] = "Player Name Text Y-offset",
    ["Value"] = -2,
    ["Key"] = "Descyoff",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set player name text x-offset",
    ["Min"] = -100,
    ["Name"] = "Player Name Text X-offset",
    ["Value"] = 0,
    ["Key"] = "Descxoff",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Constructor",
    ["Hooks"] = {
    ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    unitFrame.questProgressIconFrame:Hide()\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateQuestProgress(unitFrame)\n    \nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- Updated for Shadowlands --\n    \n    -- text settings\n    local textColor = \"orange\";\n    local textSize = 12;\n    local textOutline = \"OUTLINE\";--\"NONE\", \"OUTLINE\", \"THICKOUTLINE\"\n    local textShadowAlpha = 0; -- 0 = transparent, 1 = 100% solid\n    local textX = -25;\n    local textY = 0;\n    local textAnchor = \"left\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local textIconAnchor = \"left\"; -- \"center\", \"top\", \"bottom\", \"topleft\", \"left\", \"bottomleft\", \"topright\", \"right\", \"bottomright\"\n    local TextType = \" / \"\n    \n    --icon settings\n    local iconSize = 45\n    \n    -- positioning\n    local iconAnchor = {\n        side = 8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 13, --x offset\n        y = 0, --y offset\n    };\n    \n    -- icon options\n    local iconQuestHR = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\JimmosQuestIcon-.tga]];\n    \n    \n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    if (not unitFrame.questProgressIconFrame) then\n        envTable.questProgressIconFrame = unitFrame:CreateTexture (nil, \"overlay\")\n        envTable.questProgressIconFrame:SetTexture (iconQuestHR)\n        envTable.questProgressIconFrame:SetSize (iconSize, iconSize)\n        Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n        unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    end\n    \n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar);\n        Plater:SetFontSize (envTable.questProgressTextFrame, textSize);\n        Plater:SetFontColor (envTable.questProgressTextFrame, textColor);\n        Plater:SetFontOutline (envTable.questProgressTextFrame, textOutline);\n        envTable.questProgressTextFrame:SetPoint (textAnchor, unitFrame.questProgressIconFrame, textIconAnchor, textX, textY);\n        DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, textShadowAlpha);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --functions\n    \n    function envTable.updateQuestProgress (unitFrame)\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            --            print(unitFrame.QuestAmountCurrent)\n            --            print(unitFrame.QuestAmountTotal)\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    TextType = (unitFrame.QuestAmountCurrent or 0) .. \"/\"\n                    .. unitFrame.QuestAmountTotal\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                else\n                    TextType = (unitFrame.QuestAmountCurrent) .. \"%\"\n                    unitFrame.questProgressIconFrame:SetTexture (iconQuestHR);\n                end\n            end\n            unitFrame.questProgressIconFrame:Show();\n            unitFrame.healthBar.questProgressTextFrame:SetText(TextType)\n        else\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n        end\n    end\n    \nend",
    },
    ["Time"] = 1677555865,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    ["Enabled"] = true,
    ["none"] = true,
    },
    ["affix"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["race"] = {
    },
    ["class"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 134411,
    ["Enabled"] = true,
    ["Revision"] = 267,
    ["semver"] = "",
    ["Author"] = "Jimmo-Frostmourne",
    ["Desc"] = "Adds a custom Quest Icon to show quest related mobs and progress towards completion.",
    ["Prio"] = 96,
    ["Name"] = "Jimmo's Quest Marker",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --require a /reload after changing this code\n    \n    --this is a standard function replacement\n    --what the code is doing is overwriting an original function from Plater to create customizations\n    --this is allowed and safe to do\n    \n    function Plater.CreateShowAuraIconAnimation (iconFrame)\n        \n        --create the animation hub\n        local iconShowInAnimation = Plater:CreateAnimationHub (iconFrame)\n        \n        --create each individual animation\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 1, 0, 0, -10)\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 2, .05, 0, 13)\n        Plater:CreateAnimation (iconShowInAnimation, \"translation\", 3, .05, 0, -3)\n        \n        Plater:CreateAnimation (iconShowInAnimation, \"alpha\", 2, .05, .5, 1)\n        \n        Plater:CreateAnimation (iconShowInAnimation, \"scale\", 2, .05, .8, .8, 1.2, 1.2)\n        Plater:CreateAnimation (iconShowInAnimation, \"scale\", 3, .05, 1.2, 1.2, .9, .9)\n        \n        --store the animation within the icon frame object\n        iconFrame.ShowAnimation = iconShowInAnimation\n    end\n    \nend\n\n\n\n\n",
    },
    ["Time"] = 1671797942,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/1tnivj4ov/1",
    ["Icon"] = 237026,
    ["Enabled"] = true,
    ["Revision"] = 74,
    ["semver"] = "1.0.0",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Change the aura icon animation when they are shown above the nameplate",
    ["Prio"] = 99,
    ["version"] = 1,
    ["PlaterCore"] = 1,
    ["Name"] = "Aura Icon Animation",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- for old-fashioned glows:\n    envTable.GlowColor = \"orange\"\n    envTable.AntsColor = \"red\"\n    \n    -- for the LibCustomGlow implementation (default):\n    envTable.options = {\n        glowType = \"pixel\",\n        color = \"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"enrage\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- functions --\n    \n    if Plater.UnitHasEnrage then\n        if Plater.UnitHasEnrage(unitFrame) then\n            Plater.StartGlow(unitFrame.healthBar, envTable.AntsColor, envTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, envTable.options.glowType, envTable.options.key)\n        end\n        return\n    end\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for _, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.AuraType == \"enrage\") then\n                Plater.StartGlow(unitFrame.healthBar, envTable.AntsColor, envTable.options)\n                return\n            end\n        end\n        \n    end\n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() and auraIcon.debuffType == \"\" then\n            Plater.StartGlow(unitFrame.healthBar, envTable.AntsColor, envTable.options)\n            return\n        end\n    end\n    \n    \n    Plater.StopGlow(unitFrame.healthBar, envTable.options.glowType, envTable.options.key)\n    \nend",
    },
    ["Time"] = 1671797934,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/si3WIAbOu/5",
    ["Icon"] = 132096,
    ["Enabled"] = false,
    ["Revision"] = 318,
    ["semver"] = "1.0.4",
    ["Author"] = "Viash-Thrall",
    ["Desc"] = "Adds a glow to the health bar if the unit has an enrage effect active.",
    ["Prio"] = 99,
    ["version"] = 5,
    ["PlaterCore"] = 1,
    ["Name"] = "Enrage Health Glow",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["showInspired"] = true,
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    \n    -- settings:\n    \n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.inspiringColor, --\"gold\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 12, -- number of lines. Defaul value is 8;\n        frequency = 0.1, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"inspiring\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.options2 = {\n        glowType = \"ants\",\n        color = modTable.config.inspiredColor, --\"lime\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1.25, -- scale of particles\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        key = \"inspired\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.showInspiring then\n        if Plater.UnitHasAura (unitFrame, 343502) then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options.glowType, modTable.options.key)\n        end\n    end\n    \n    if modTable.config.showInspired then\n        if Plater.UnitHasAura (unitFrame, \"Inspired\") then\n            Plater.StartGlow(unitFrame.healthBar, nil, modTable.options2)\n        else\n            Plater.StopGlow(unitFrame.healthBar, modTable.options2.glowType, modTable.options2.key)\n        end\n    end\n    \n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options)\n    --Plater.StartGlow(unitFrame.healthBar, nil, envTable.options2)\n    \nend",
    },
    ["Time"] = 1671797897,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/erZiEOzxK/4",
    ["Icon"] = 132096,
    ["Enabled"] = true,
    ["Revision"] = 398,
    ["semver"] = "1.0.3",
    ["Author"] = "Viash-Thrall",
    ["Desc"] = "Adds a glow to the health bar if the unit has Inspiring Presence.",
    ["Prio"] = 99,
    ["version"] = 4,
    ["PlaterCore"] = 1,
    ["Name"] = "Inspiring Health Glow",
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Glow Inspiring",
    ["Value"] = true,
    ["Key"] = "showInspiring",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Inspiring Color",
    ["Value"] = {
    1,
    0.84313725490196,
    0,
    1,
    },
    ["Key"] = "inspiringColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 5",
    ["Value"] = 0,
    ["Key"] = "option5",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Glow Inspired",
    ["Value"] = true,
    ["Key"] = "showInspired",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Inspired Color",
    ["Value"] = {
    0,
    1,
    0,
    1,
    },
    ["Key"] = "inspiredColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["UID"] = "0x61c2edb848e6de",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable,unitClassification)\n    \n    --adjust the color (use /plater colors)\n    local borderColor = \"white\" \n    \n    --adjust the border offset to correctly fit into the health bar\n    local leftOffset = 1\n    local topOffset = -4\n    local rightOffset =-97\n    local bottomOffset = 17\n    \n    --adjust the border texture \n    \n    \n    local texture1 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar.tga]]  \n    local texture2 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Skull_Icon_White.tga]]  \n    local texture3 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar2.tga]] \n    local texture4 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar3.tga]]    \n    --adjust the alpha\n    -- local alpha = 2\n    \n    --private\n    if (not unitFrame.healthBar.star) then   \n        local star = CreateFrame (\"frame\", nil, unitFrame.healthBar)\n        star:SetFrameLevel (unitFrame.healthBar:GetFrameLevel() + 7)\n        star:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", 10, 10)\n        star:SetPoint (\"bottomright\", unitFrame.healthBar, \"bottomright\", 10, 10)\n        unitFrame.healthBar.star = star \n        local innerBorder = Plater:CreateImage (star, texture) \n        star.borderTexture = innerBorder\n    end \n    \n    \n    local healthBar = unitFrame.healthBar\n    local borderTexture = healthBar.star.borderTexture\n    \n    borderTexture:SetPoint (\"topleft\", healthBar, \"topleft\", leftOffset, topOffset)\n    borderTexture:SetPoint (\"bottomright\", healthBar, \"bottomright\", rightOffset, bottomOffset)\n    \n    \n    \n    borderTexture:SetVertexColor (DetailsFramework:ParseColors (borderColor))\n    borderTexture:SetAlpha (1)    \n    -------------------\n    envTable.UpdateLevelText = function(unitFrame)\n        -- envTable.UpdateLevelText (unitFrame)\n        \n        \n        \n        \n        local unit = unitFrame.namePlateUnitToken\n        local unitClassification = UnitClassification(unit)\n        local level = UnitLevel(unit)\n        \n        if (unitFrame.namePlateClassification== \"worldboss\" or UnitLevel (unit) == -1) then\n            borderTexture:SetTexture (texture2)\n        elseif unitFrame.namePlateClassification== 'elite' then   \n            borderTexture:SetTexture (texture1) \n        elseif unitFrame.namePlateClassification== \"rareelite\" then   \n            borderTexture:SetTexture (texture3)\n        elseif unitFrame.namePlateClassification==\"rare\" then   \n            borderTexture:SetTexture (texture4)\n        else\n            borderTexture:SetTexture (texture0)    \n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateLevelText (unitFrame)\nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable,unitClassification)\n    \n    --adjust the color (use /plater colors)\n    local borderColor = \"white\" \n    \n    --adjust the border offset to correctly fit into the health bar\n    local leftOffset = 1\n    local topOffset = -4\n    local rightOffset =-97\n    local bottomOffset = 17\n    \n    --adjust the border texture \n    \n    \n    local texture1 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar.tga]]  \n    local texture2 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Skull_Icon_White.tga]]  \n    local texture3 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar2.tga]] \n    local texture4 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Neon_EliteStar3.tga]]  \n    --adjust the alpha\n    --local alpha = 2\n    \n    --private\n    if (not unitFrame.healthBar.star) then   \n        local star = CreateFrame (\"frame\", nil, unitFrame.healthBar)\n        star:SetFrameLevel (unitFrame.healthBar:GetFrameLevel() + 7)\n        star:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", 10, 10)\n        star:SetPoint (\"bottomright\", unitFrame.healthBar, \"bottomright\", 10, 10)\n        unitFrame.healthBar.star = star \n        local innerBorder = Plater:CreateImage (star, texture) \n        star.borderTexture = innerBorder\n    end \n    \n    \n    local healthBar = unitFrame.healthBar\n    local borderTexture = healthBar.star.borderTexture\n    \n    borderTexture:SetPoint (\"topleft\", healthBar, \"topleft\", leftOffset, topOffset)\n    borderTexture:SetPoint (\"bottomright\", healthBar, \"bottomright\", rightOffset, bottomOffset)\n    \n    \n    \n    borderTexture:SetVertexColor (DetailsFramework:ParseColors (borderColor))\n    borderTexture:SetAlpha (1)    \n    -------------------\n    envTable.UpdateLevelText = function(unitFrame)\n        \n        \n        \n        \n        local unit = unitFrame.namePlateUnitToken\n        local unitClassification = UnitClassification(unit)\n        local level = UnitLevel(unit)\n        \n        if (unitFrame.namePlateClassification== \"worldboss\" or UnitLevel (unit) == -1) then\n            borderTexture:SetTexture (texture2)\n        elseif unitFrame.namePlateClassification==\"elite\" then   \n            borderTexture:SetTexture (texture1) \n        elseif unitFrame.namePlateClassification==\"rareelite\" then   \n            borderTexture:SetTexture (texture3)\n        elseif unitFrame.namePlateClassification==\"rare\" then   \n            borderTexture:SetTexture (texture4)\n        else\n            borderTexture:SetTexture (texture0)     \n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1697188840,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["spec"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["class"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 133004,
    ["Enabled"] = true,
    ["Revision"] = 2398,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Add an extra border around all nameplates except the personal health bar. See the constructor for settings.",
    ["Prio"] = 99,
    ["Name"] = "!Extra Thick Border111",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["MarkColors"] = true,
    ["outerGlow"] = true,
    ["RaidMarkSize"] = 1.2999999523163,
    ["mark_x_offset"] = 0,
    ["ToggleFriendlyRaidMarkSettings"] = true,
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x617cd3f0d5317b",
    ["Hooks"] = {
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    modTable.options = {\n        glowType = modTable.config.glowtype,\n        \n        \n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        \n        \n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.updatePosition = function(unitFrame)\n        if \n        unitFrame.PlaterRaidTargetFrame and \n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon and\n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown()  then\n            --2 for enemy, 4 for neutral or 5 for friendly\n            if (unitFrame.namePlateUnitReaction == 5  and modTable.config.ToggleFriendlyRaidMarkSettings == true and unitFrame.PlateFrame.IsNpcWithoutHealthBar or unitFrame.PlateFrame.IsFriendlyPlayerWithoutHealthBar) then\n                unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.ActorNameSpecial, \"TOP\", modTable.config.mark_x_offset, modTable.config.mark_y_offset)\n                unitFrame.PlaterRaidTargetFrame:SetScale(modTable.config.RaidMarkSize)\n                --unitFrame.PlaterRaidTargetFrame:SetFrameLevel(10)\n            else\n                \n                if ( unitFrame.namePlateIsTarget) then\n                    unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                    unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.healthBar, \"RIGHT\",28,-10)\n                else\n                    unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                    \n                    unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.healthBar, \"RIGHT\",16,-10)\n                    --unitFrame.PlaterRaidTargetFrame:SetScale(modTable.config.RaidMarkSize)\n                    --unitFrame.PlaterRaidTargetFrame:SetFrameLevel(10)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.MarkToColor = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \nend\n\n\n\n\n",
    ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local MarkPlaceholder = unitFrame.PlaterRaidTargetFrame\n    Plater.StopGlow(MarkPlaceholder, modTable.options.glowType,modTable.options.key)\n    \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    local raidMark = Plater.GetRaidMark(unitFrame)\n    \n    \n    if modTable.config.MarkColors == true  then\n        modTable.options.color = envTable.MarkToColor[raidMark]\n    end\n    \n    -- functions --\n    local MarkPlaceholder = unitFrame.PlaterRaidTargetFrame\n    local MarkIcon = unitFrame.PlaterRaidTargetFrame.RaidTargetIcon\n    \n    \n    \n    \n    if (MarkPlaceholder and MarkIcon and MarkIcon:IsShown() and Plater.GetRaidMark ~= nil) then\n        Plater.StartGlow(MarkPlaceholder, nil, modTable.options)\n        if modTable.config.outerGlow and MarkPlaceholder.__PlaterGlowFrame then\n            MarkPlaceholder.__PlaterGlowFrame:ClearAllPoints()\n            local offset = modTable.config.antsThickness\n            MarkPlaceholder.__PlaterGlowFrame:SetPoint(\"topleft\", MarkPlaceholder, \"topleft\", -offset, offset)\n            MarkPlaceholder.__PlaterGlowFrame:SetPoint(\"bottomright\", MarkPlaceholder, \"bottomright\", offset, -offset)\n        end\n    else\n        Plater.StopGlow(MarkPlaceholder, modTable.options.glowType,modTable.options.key)\n    end\n    \n    \n    modTable.updatePosition(unitFrame)\n    \n    \n    \n    \nend\n\n\n\n",
    ["Initialization"] = "function (modTable)\n    \n    modTable.options = {\n        glowType = modTable.config.glowtype,\n        \n        \n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        \n        \n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    modTable.updatePosition = function(unitFrame)\n        if \n        unitFrame.PlaterRaidTargetFrame and \n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon and\n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown()  then\n            --2 for enemy, 4 for neutral or 5 for friendly\n            if (unitFrame.namePlateUnitReaction == 5  and modTable.config.ToggleFriendlyRaidMarkSettings == true and unitFrame.PlateFrame.IsNpcWithoutHealthBar or unitFrame.PlateFrame.IsFriendlyPlayerWithoutHealthBar) then\n                unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.ActorNameSpecial, \"TOP\", modTable.config.mark_x_offset, modTable.config.mark_y_offset)\n                unitFrame.PlaterRaidTargetFrame:SetScale(modTable.config.RaidMarkSize)\n                --unitFrame.PlaterRaidTargetFrame:SetFrameLevel(10)\n            else\n                \n                if ( unitFrame.namePlateIsTarget) then\n                    unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                    unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.healthBar, \"RIGHT\",28,-10)\n                else\n                    unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                    \n                    unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.healthBar, \"RIGHT\",16,-10)\n                    --unitFrame.PlaterRaidTargetFrame:SetScale(modTable.config.RaidMarkSize)\n                    --unitFrame.PlaterRaidTargetFrame:SetFrameLevel(10)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    modTable.updatePosition(unitFrame)\n    \n    --  local MarkPlaceholder = unitFrame.PlaterRaidTargetFrame\n    \n    --   if Plater.GetRaidMark == nil then  Plater.StopGlow(MarkPlaceholder,  modTable.options.glowType,modTable.options.key)\n    --    end\n    \nend\n\n\n\n\n\n",
    },
    ["Time"] = 1675243712,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 134940,
    ["Enabled"] = true,
    ["Revision"] = 1434,
    ["semver"] = "",
    ["Author"] = "Viashi-Antonidas",
    ["Desc"] = "Creates a glow around raid Icons",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Option 3",
    ["Value"] = "@scriptname Options:",
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Name"] = "Glow Type",
    ["Value"] = "button",
    ["Key"] = "glowtype",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "Either Type in \"Pixel\" or \"Button\". Button should also use \"Outer Glow option\"",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Outer Glow",
    ["Value"] = false,
    ["Key"] = "outerGlow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Glow Color",
    ["Value"] = {
    1,
    0,
    0,
    1,
    },
    ["Key"] = "glowColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "The color of the glow ants.",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Use Raid Mark Colors Instead",
    ["Value"] = false,
    ["Key"] = "MarkColors",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Different settings for Friendly Raid Marks",
    ["Value"] = 0,
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Different Settings for Friendly Raid Marks (Only)",
    ["Value"] = "Individual Scale And Position Settings For Friendly Raid Marks (Only)",
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Enable",
    ["Value"] = true,
    ["Key"] = "ToggleFriendlyRaidMarkSettings",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Enable separate scale and position settings for friendly raid marks.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 4,
    ["Desc"] = "independent  from the general raid mark setting. Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = 0.3,
    ["Key"] = "RaidMarkSize",
    ["Value"] = 1.3,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Raid Marks Size (Friendly only)",
    },
    {
    ["Type"] = 2,
    ["Max"] = 50,
    ["Desc"] = "independent  from the general raid mark setting. Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = -50,
    ["Key"] = "mark_x_offset",
    ["Value"] = 0,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "X Offset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 30,
    ["Desc"] = "independent  from the general raid mark setting.Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = -70,
    ["Key"] = "mark_y_offset",
    ["Value"] = 3,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Y Offset",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 11",
    ["Value"] = 0,
    ["Key"] = "option11",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Option 12",
    ["Value"] = "Only for \"Pixel\" Glow",
    ["Key"] = "option12",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 16,
    ["Desc"] = "Amount of ants in the glow effect. Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = 1,
    ["Key"] = "antsAmount",
    ["Value"] = 6,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Ants Amount",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "Ants move speed. Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = -1,
    ["Key"] = "frequency",
    ["Value"] = 0.25,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Speed",
    },
    {
    ["Type"] = 2,
    ["Max"] = 12,
    ["Desc"] = "Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = 1,
    ["Key"] = "antsLength",
    ["Value"] = 4,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Ants length",
    },
    {
    ["Type"] = 2,
    ["Max"] = 4,
    ["Desc"] = "Changing the setting can introduce FPS stutter - /reload to fix",
    ["Min"] = 1,
    ["Key"] = "antsThickness",
    ["Value"] = 2,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Ants Thickness",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Ants Border",
    ["Value"] = "Only for Pixel Glow",
    ["Key"] = "antsBorder",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    ["Name"] = "Glowing Raid Marks",
    },
    {
    ["OptionsValues"] = {
    ["_typeValueExecute"] = {
    1,
    0,
    0.70588235294118,
    1,
    },
    ["SpitefulNoPlayerColor"] = {
    0.41176470588235,
    0.41176470588235,
    0.41176470588235,
    0.68999999761581,
    },
    ["_enableMark"] = true,
    ["_typeValueTarget"] = {
    0,
    1,
    1,
    1,
    },
    ["_typeValueNoTankTarget"] = {
    1,
    0.21960784313725,
    1,
    1,
    },
    ["_typeValueTankPetThreat"] = {
    0.77254901960784,
    0.60392156862745,
    0.42352941176471,
    1,
    },
    },
    ["LastHookEdited"] = "Nameplate Added",
    ["UID"] = "0x6146c6b45fedc7f",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateColor(unitFrame, unitId)\n    if modTable.config.SpitefulTargetName then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.colorchanged = false\n    end\nend\n\n\n\n\n\n\n\n",
    ["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdatePlayerRole(unitFrame)\nend\n\n\n\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateColor(unitFrame, unitId) -- 会使\"NPC 颜色和名称\"失效\n    \n    --------------------------------------------------------------------------\n    \n    -- 获取\"敌对怪物/NPC\"设置的血条宽度和高度\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat[2]\n    \n    local Relics = envTable.Encrypted[unitFrame.namePlateNpcId]\n    if Relics and modTable.config.setColor then\n        if modTable.config.RelicsPlateSize then\n            -- 加密血条的宽和高 *1.1 - *1.5\n            Plater.SetNameplateSize(unitFrame, nameplateWidth*1.1, nameplateHeight*1.5)\n            -- 加密施法条宽度与放大后的血条宽度保持一直,高度不变\n            Plater.SetCastBarSize(unitFrame, nameplateWidth*1.1)\n            -- 加密名称字体大小\n            Plater:SetFontSize(unitFrame.PlateFrame.CurrentUnitNameString, 12)\n        end\n        -- 加密血条总是在最前端\n        unitFrame:SetFrameStrata(\"DIALOG\")\n        -- 更改加密名字,去掉下面代码开头的\"--\",需要勾选\"加密姓名板变色\"选项\n        unitFrame.PlateFrame.CurrentUnitNameString:SetText(Relics)\n    end\n    \n    --------------------------------------------------------------------------\n    \n    if envTable.Spiteful[unitFrame.namePlateNpcId] and modTable.config.SpitefulTargetName then\n        local targetName = UnitName(unitId .. \"target\")\n        if targetName and UnitIsUnit(targetName, \"player\") then\n            -- 添加怨毒目标是你的发光像素\n            if not envTable.colorchanged then\n                Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n                -- 发光像素颜色\n                unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 5, \"#ffb600\", 3, 4)\n                envTable.colorchanged = true\n            end\n            -- 怨毒目标是你的血条在总是在最前端\n            unitFrame:SetFrameStrata(\"DIALOG\")\n            -- 更改怨毒目标是你的血条大小\n            Plater.SetNameplateSize(unitFrame, nameplateWidth*1.2, nameplateHeight*1.8)\n        end\n        -- 怨毒目标不是你血条变色(有目标时覆盖仇恨颜色)\n        if modTable.config.SpitefulNoPlayer then\n            if targetName and not UnitIsUnit(targetName, \"player\") or not targetName then\n                Plater.SetNameplateColor(unitFrame, modTable.config.SpitefulNoPlayerColor)\n            end\n        end\n        envTable.UpdateSpitefulWidget(unitFrame)\n    end\n    \n    --------------------------------------------------------------------------\n    \n   -- local isTanks = GetSpecializationRole(GetSpecialization()) == \"TANK\"\n    local isTankings = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    -- 坦克天赋被宠物嘲讽变色\n    if isTanks and modTable.config._enableTankPetThreat then\n        if not isTankings and not isTapDenied then\n            local exists = UnitExists(self.targetUnitID)\n            if exists then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.TankPetThreatcolor)\n                end\n            end\n        end\n        -- DPS斩杀变色\n    elseif (IsInGroup() and not isTanks and not isTankings) or not isTanks then\n        if unitFrame.InExecuteRange then\n            envTable.UnitInExecuteRange(unitFrame)\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \n    -- DPS/治疗天赋目标名字颜色\n    if not isTanks and modTable.config._enableTargetNameText then\n        if not Relics and unitFrame.namePlateIsTarget then\n            if isTankings then\n                -- DPS/奶天赋OT的当前目标名字为\"目标及坦克天赋目标名字颜色\"\n                Plater:SetFontColor(unitFrame.unitName, Plater:ParseColors(modTable.config._typeValueTarget))\n            elseif not isTankings then\n                -- DPS/奶天赋未OT的当前目标名字为\"DPS/治疗天赋目标名字颜色\"\n                Plater:SetFontColor(unitFrame.unitName, Plater:ParseColors(modTable.config._typeValueNoTankTarget))\n            end\n        else\n            if not isTankings then\n                -- DPS/奶天赋未OT的非当前目标使用游戏默认颜色(白色)\n                Plater:SetFontColor(unitFrame.unitName, Plater:ParseColors(color))\n            end\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \n    -- 更改加密名字颜色\n    local RelicsName = envTable.EncryptedName[unitFrame.namePlateNpcId]\n    if RelicsName and modTable.config.setColor then\n        if (isTanks and isTankings) or (not isTanks and not isTankings) or not self.InCombat then\n            Plater:SetFontColor(unitFrame.PlateFrame.CurrentUnitNameString, RelicsName)\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \nend",
    ["Initialization"] = "function (modTable)\n    \n    modTable.ConditionType = {\n        Target                          = 1,      -- 目标\n        Specified                      = 2,     -- 指定单位\n        WithBuff                       = 3,     -- 带有指定Buff\n        WithBuffFromPlayer      = 4,     -- 带有来源于自己的指定Buff\n        Focus                           = 5,     -- 焦点目标\n        Mark                            = 6,     -- 标记单位\n    }\n    \n    modTable.TypeShow = {\n        Color       = 1,        -- 颜色\n        Flash       = 2,        -- 闪烁\n    }\n    \n    modTable.MarkColor = {\n        [1] = \"#d9cf45\",            -- 黄色星星\n        [2] = \"#ed820f\",           -- 橙色大饼\n        [3] = \"#b30fd6\",           -- 紫色菱形\n        [4] = \"#24a824\",         -- 绿色三角\n        [5] = \"#99bfd9\",           -- 银色月亮\n        [6] = \"#00a3ff\",            -- 蓝色方块\n        [7] = \"#d12e2e\",            -- 红色叉子\n        [8] = \"#e3d4bd\",           -- 白色骷髅\n    }\n    \n    modTable.Conditions = {\n        \n        -- 自定义技能变色和NPC变色优先级低于斩杀变色(非坦克),高于默认条件组\n        \n        ------------------------------------------------------------------------\n        -- 示例1\n        -- 毁灭术浩劫示例\n        -- 当目标身上存在浩劫（毁灭术技能），同时作为你的目标时，血条闪烁\n        -- condition里的标号要和value里的小括号对应,目标和焦点用空格的{}表示,号做为分隔\n        --[[\n        {enable = false, condition = {1, 4},\n            value = {\n                {},{\"浩劫\"},\n            },\n            typeshow = 2, typevalue = \"black\"\n        }, \n        -- typeshow为2时,则是闪烁类型,不支持改颜色,typevalue这个值填什么都可以,不会读取\n        ]]\n        \n        -- SpellColors ------------------------------------------------------------\n        \n        -- 所有自定义都可以单独设置开关\n        -- enable 部分 true 为开, false 为关\n        \n        ------------------------------------------------------------------------\n        -- 大秘境高风险目标\n        \n        -- 大秘境鼓舞\n        {enable = true, condition = {3},\n            value = {{343502}},\n            typeshow = 1, typevalue = \"#f2eada\" --象牙白\n        },\n        \n        \n        \n        -- 大秘境怨毒(出现瞬间,无目标时)\n        {enable = modTable.config.SpitefulNoPlayer, condition = {2}, \n            value = {{174773, 170483}},\n            typeshow = 1, typevalue = modTable.config.SpitefulNoPlayerColor\n        },\n        \n        -- 大秘境[高风险目标]:浊盐缚鳞者 or 活力鱼串\n        {enable = true, condition = {2}, \n            value = {{33329,33343,33228,33836,33983,33524,33168}},\n            typeshow = 1, typevalue = \"#ff0086\"  --紫红色 --绿色\n        },\n        \n        {enable = true, condition = {2}, \n            value = {{120651, 107447,\"流浪的脉冲星\",\"爆破小队\"}},\n            typeshow = 1, typevalue = \"#ff0086\"  --紫红色 --绿色\n        },\n        \n        ------------------------------------------------------------------------\n        \n        -- 目标变色,优先级低于坦克天赋被宠物嘲讽变色和斩杀变色以及大秘境鼓舞\n        {enable = modTable.config._enableTargetHIGH and modTable.config._enableTarget, condition = {1},\n            value = {{}},\n            typeshow = 1, typevalue = modTable.config._typeValueTarget\n        },\n        \n        -- 阳炎术 + 月火术\n        {enable = true, condition = {4, 4},\n            value = {{164815}, {164812}},\n            typeshow = 1, typevalue = \"#76EE00\" --黄绿色\n        },        \n        \n        -- 冰霜震击 + 霜刃打击\n        {enable = true, condition = {4, 4},\n            value = {{196840}, {342240}},\n            typeshow = 1, typevalue = \"#e0861a\" --金茶色\n        },\n        \n        -- 多职业技能,橙装,天赋任意技能生效\n        {enable = true, condition = {4},\n            value = {{\"献祭\", \"阳炎术\", \"灼烧之伤\", \"神鹤印记\", \"圣光审判\", \"信息素炸弹\", \"烈焰震击\", \"暗言术：痛\",\"锯齿骨刺\"}},\n            typeshow = 1, typevalue = \"#FF7C48\"--\"#f15a22\" --粉色--赤橙色\n        },\n        \n        -- NpcColors -------------------------------------------------------------\n        \n        -- 尤型加密\n        {enable = modTable.config.setColor, condition = {2},\n            value = {{185685, 184911}},\n            typeshow = 1, typevalue = modTable.config.urhColor --\"#a159ff\"  --紫色\n        },\n        \n        -- 沃型加密\n        {enable = modTable.config.setColor, condition = {2},\n            value = {{185683, 184910}},\n            typeshow = 1, typevalue = modTable.config.woColor --\"#00ffff\"  --青色\n        },\n        \n        -- 维型加密\n        {enable = modTable.config.setColor, condition = {2}, \n            value = {{185680, 184908}},\n            typeshow = 1, typevalue = modTable.config.vyColor --\"#817936\"  --油色\n        },\n        \n        ------------------------------------------------------------------------\n        \n        -- M+ Colored Mobs 的NPC颜色和名称变色模块\n        -- 该模块数据来自 https://wago.io/UKpo0_GbE\n        \n        \n        -- 最重要,通常专注于目标（需要经常打断/眩晕等）\n        {enable = modTable.config._MColored and not modTable.config._Colours, condition = {2}, \n            value = {{170490, 170572, 174197, 174210, 170882, 163126, 173016, 166302, 165529, 165414, 164921, 163458, 168420, 168418, 163459, 168718, 165076, 167965, 160495, 166275, 166299, 166396, 168627, 164414, 172265, 168992, 163891, 173044, 167612, 167493, 162049, 162039, 165222, 163128, 168357, 180336, 177817}},\n            typeshow = 1, typevalue = modTable.config.t1Mobs --\"#0000ff\" --深蓝色\n        },\n        \n        -- 半重要的,必要的干扰/眩晕\n        {enable = modTable.config._MColored and not modTable.config._Colours, condition = {2}, \n            value = {{166589, 171343, 163894, 168942, 163882, 163862, 164562, 171799, 170690, 164266, 164185, 162103, 165872, 168658, 168318, 168717, 163520, 168572, 162317, 163621, 162040, 167536, 171376, 169861, 167876, 162047, 172981, 174175, 165430, 166276, 165946, 162744, 168393, 168396, 167998, 170850, 163086, 162038, 169905, 163620, 164510, 164557, 165919, 167111, 163121, 167607, 162689, 164292, 168886, 165137, 163618, 168443, 177816, 180348, 178171}},\n            typeshow = 1, typevalue = modTable.config.t2Mobs --\"#5f75ff\" --天蓝色\n        },\n        \n        -- 不那么重要的\n        {enable = modTable.config._MColored and not modTable.config._Colours, condition = {2}, \n            value = {{164506, 162691, 163524, 165824, 169893, 169927, 168446, 165197, 173447, 163619, 177808}},\n            typeshow = 1, typevalue = modTable.config.t3Mobs --\"#ff9883\" --浅橙色\n        },\n        \n        ------------------------------------------------------------------------\n        \n        -- 目标变色,优先级只高于 Callme Plater NPC Colours 染色模块\n        {enable =  not modTable.config._enableTargetHIGH and modTable.config._enableTarget, condition = {1},\n            value = {{}},\n            typeshow = 1, typevalue = modTable.config._typeValueTarget\n        },\n        \n        ------------------------------------------------------------------------\n        \n        -- Callme Plater NPC Colours NPC颜色和名称变色模块\n        -- 该模块数据来自 https://wago.io/c297bUudj\n        \n        -- 1 blue #0000FF\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{168594, 171448, 164804, 169912, 165251, 174175, 168574 , 168310, 168891, 168878, 172312, 164929, 170147}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#0000FF\"\n        },\n        \n        -- 2 blueviolet #8A2BE2\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{162047, 169927, 171799, 162057, 164578, 164451, 164737, 167964, 164563, 170690, 171343, 168942, 163524, 164920, 172981, 169905, 163121}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#8A2BE2\"\n        },\n        \n        -- 3 burlywood #DEB887\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{168572, 167731, 167612, 163077, 162038, 167963, 165911, 163058, 173360, 168393, 173339, 168396, 168934, 167615, 165515, 166276, 168844, 165919, 165872, 167607, 163894, 163621, 168153, 164926, 163086, 167962}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#DEB887\"\n        },\n        \n        -- 4 cyan #00FFFF\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{167967, 167956, 167111, 173044, 164705, 163891, 166969, 174210, 163458, 163503, 170197, 173484, 166302, 164921, 168992, 166524, 168578, 165076, 163128, 168418, 168717, 167965, 163126, 170882, 177889, 177594, 166275, 171184, 165414, 162039, 168058, 164414, 173016, 165529, 172265, 174197, 164461, 177094, 176974, 167113, 164815, 160495, 168627}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#00FFFF\"\n        },\n        \n        -- 5 deeppink #FF1493\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{179890, 179446,179892, 179891}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#FF1493\"\n        },\n        \n        -- 6 dimgrey #696969\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{167806, 166589, 163122, 170474, 169265, 163089, 98035, 165111, 170927, 162046, 169753, 168579, 168361, 171474, 168365, 163622, 173145, 165560, 171342, 167898, 164267, 177787, 178733, 177154, 169696, 166304, 165260, 167994, 162729, 165597, 168580, 168968, 168591, 168949, 162056, 164552, 163623, 164873, 167955, 169875, 171500, 168986, 164550, 167117, 167116, 164857, 165415, 172064, 168747, 164862}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#696969\"\n        },\n        \n        -- 7 forestgreen #228B22\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{163157, 162692, 162691, 164450, 162061, 164967, 164266, 164185, 162103, 162099, 162133, 164255, 162317, 162102, 164558, 165408, 165410, 164567, 162059, 162100, 162309, 164218, 164556, 164555, 164501, 165946, 166608, 162693, 162060, 164463, 162689, 164517, 162058, 162329}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#228B22\"\n        },\n        \n        -- 8 lightGreen #90EE90\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{173053, 168845, 176920, 168843, 166970, 175726}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#90EE90\"\n        },\n        \n        -- 9 magenta #FF00FF\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{171341, 164707, 165010, 178008, 164562, 175992, 167966, 165556, 168882, 177407, 175861, 165108, 166301, 170234, 177117, 168988, 171188, 163857, 173840, 168326, 164362, 168398, 168394, 170488, 165905, 168837, 167610, 176521, 164363, 164464}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#FF00FF\"\n        },\n        \n        -- 10 mediumslateblue #7B68EE\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{172993, 171333, 170486, 166971, 163915, 177891, 166396}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#7B68EE\"\n        },\n        \n        -- 11 palegreen #98FB98\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{164510, 166079, 164702, 171805, 171384, 167493, 163501, 166264, 166266, 168246, 166411, 164861, 162049}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#98FB98\"\n        },\n        \n        -- 12 paleturquoise #AFEEEE\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{164861, 162049}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#AFEEEE\"\n        },\n        \n        -- 13 plum #DDA0DD\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{164506, 170850, 171376, 167538, 173720, 162763, 163620, 164557, 163882, 168318, 162040, 165137, 167998, 169893, 167536, 167532, 168681, 168886, 169861, 168886, 169861, 167876, 163520, 173655, 173714, 165197, 165824, 162744, 163618, 167534, 167533}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#DDA0DD\"\n        },\n        \n        -- 14 red #FF0000\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{165138, 165913, 168969, 165357, 169498, 169159}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#FF0000\"\n        },\n        \n        -- 15 saddlebrown #8B4513\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{170480, 172991, 163506, 163457, 162051, 162041, 170199, 165430, 177892, 171772, 164427, 163892, 168907, 168022, 168457, 171455, 171181, 176973, 180473, 170838, 163619}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#8B4513\"\n        },\n        \n        -- 16 white #FFFFFF\n        {enable = modTable.config._Colours and not modTable.config._MColored, condition = {2}, \n            value = {{170572, 168420, 168718, 166299, 163862, 163459, 171887, 165222, 170490, 167892}},\n            typeshow = modTable.TypeShow.Color, typevalue = \"#FFFFFF\"\n        },\n        \n    }\n    \n    ------------------------------------------------------------------------\n    -- 初始化来自配置的默认条件组\n    -- 默认条件组优先级仅高于标记变色\n    \n    -- 组内优先级又分为\n    -- 默认目标条件＞默认指定单位条件＞默认有自己De/Buff条件＞默认标记单位\n    \n    local targetCondition = {\n        name = \"默认目标条件\",\n        enable = not modTable.config._enableTarget and modTable.config._enableTargetNameText,\n        condition = {1},\n        value = {{}},\n        typeshow = 1,\n        typevalue = false\n    }\n    \n    --[[local specifiedConditionList = {}\n    for k, _ in pairs(modTable.config._valueSpecified) do\n        table.insert(specifiedConditionList, k)\n    end\n    local specifiedCondition = {\n        name = \"默认指定单位条件\",\n        enable = true, -- 此处会被自定义条件和默认目标条件覆盖\n        condition = {2},\n        value = {{}},--{specifiedConditionList},\n        typeshow = modTable.TypeShow.Color,\n        typevalue = \"#ffffff\"--modTable.config._typeValueSpecified\n}]]\n    \n    --[[local withBuffConditionList = {}\n    for k, _ in pairs(modTable.config._valueWithBuff) do\n        table.insert(withBuffConditionList, k)\n    end]]\n    local withBuffCondition = {\n        name = \"默认有自己De/Buff条件\",\n        enable = true, -- 此处会被自定义条件,默认目标条件和默认指定单位条件覆盖\n        condition = {4},\n        value = {{\"月火术\", \"毒蛇钉刺\", \"冰霜震击\"}}, --{withBuffConditionList},\n        typeshow = modTable.TypeShow.Color,\n        typevalue = \"#cdff89\" --modTable.config._typeValueWithBuff\n    }\n    \n    local markCondition = {\n        name = \"默认标记单位\",\n        enable = modTable.config._enableMark,\n        condition = {6},\n        value = {{}},\n        typeshow = 1,\n        typevalue = \"\"\n    }\n    \n    -- 默认的条件组，会依次加在自定义条件组的后面。可根据需要自行调整这几行的顺序\n    table.insert(modTable.Conditions, targetCondition)                  -- 默认目标条件\n    --table.insert(modTable.Conditions, specifiedCondition)               -- 默认指定单位条件\n    \n    table.insert(modTable.Conditions, withBuffCondition)                -- 默认有自己De/Buff条件\n    table.insert(modTable.Conditions, markCondition)    -- 默认标记单位条件\n    \n    function modTable.CheckCondition(conditionGroup, unitFrame)\n        if conditionGroup.enable ~= true then\n            return false\n        end\n        if type(conditionGroup.condition) ~= \"table\" then\n            return false\n        end\n        \n        local pass = true\n        for i, v in ipairs(conditionGroup.condition) do\n            if v == modTable.ConditionType.Target then\n                pass = modTable.CheckTargetCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            elseif v == modTable.ConditionType.Specified then\n                pass = modTable.CheckSpecifiedCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            elseif v == modTable.ConditionType.WithBuff then\n                pass = modTable.CheckWithBuffCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            elseif v == modTable.ConditionType.WithBuffFromPlayer then\n                pass = modTable.CheckWithBuffFromPlayerCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            elseif v == modTable.ConditionType.Focus then\n                pass = modTable.CheckFocusCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            elseif v == modTable.ConditionType.Mark then\n                pass = modTable.CheckMarkCondition(unitFrame, conditionGroup.value[i], conditionGroup)\n            else\n                print(\"Plater 模组 -- Extened Color -- 未知条件: \" .. tostring(v))\n                pass = false\n            end\n            \n            if pass == false then\n                modTable.Clear(unitFrame)\n                return pass\n            end\n        end\n        return pass\n    end\n    \n    function modTable.ApplyCondition(conditionGroup, unitFrame, envTable)\n        if conditionGroup.typeshow == modTable.TypeShow.Color then\n            envTable.FullBarFlash:Stop()\n            if unitFrame._SelfMarkType ~= nil and (conditionGroup.typevalue == \"\" or conditionGroup.typevalue == nil) then\n                Plater.SetNameplateColor(unitFrame, modTable.MarkColor[unitFrame._SelfMarkType])\n            else\n                Plater.SetNameplateColor(unitFrame, conditionGroup.typevalue)\n            end\n        elseif conditionGroup.typeshow == modTable.TypeShow.Flash then\n            Plater.SetNameplateColor(unitFrame, \"red\")\n            envTable.FullBarFlash:Play()\n        end\n        modTable.Clear(unitFrame)\n    end\n    \n    -- 目标(坦克天赋目标姓名颜色,默认启用姓名仇恨颜色调整,需要手动开启\"仇恨颜色-姓名颜色\")\n    function modTable.CheckTargetCondition(unitFrame, param, conditionGroup)\n        local isTank = GetSpecializationRole(GetSpecialization()) == \"TANK\"\n        if unitFrame.namePlateIsTarget then\n            if isTank and modTable.config._enableTargetNameText then\n                Plater:SetFontColor(unitFrame.unitName, Plater:ParseColors(modTable.config._typeValueTarget))\n            end\n            return true\n        else\n            if isTank and modTable.config._enableTargetNameText then\n                Plater:SetFontColor(unitFrame.unitName, Plater:ParseColors(color))\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n            return false\n        end\n    end\n    \n    -- 指定单位\n    function modTable.CheckSpecifiedCondition(unitFrame, param, conditionGroup)\n        for _, v in ipairs(param) do\n            if v == unitFrame.namePlateUnitNameLower or v == unitFrame.namePlateUnitName or v == unitFrame.namePlateNpcId then\n                return true\n            end\n        end\n        return false\n    end\n    \n    -- 带有指定Buff\n    function modTable.CheckWithBuffCondition(unitFrame, param, conditionGroup)\n        for _, v in ipairs(param) do\n            if Plater.NameplateHasAura(unitFrame, tonumber(v) or v) then\n                return true\n            end\n        end\n        return false\n    end\n    \n    -- 带有来源于自己的指定Buff\n    function modTable.CheckWithBuffFromPlayerCondition(unitFrame, param, conditionGroup)\n        for _, paramV in ipairs(param) do\n            local id = tonumber(paramV) or paramV\n            for _, v in ipairs(unitFrame.BuffFrame.PlaterBuffList) do\n                if v.Caster == \"player\" and (v.SpellId == id or v.SpellName == id) and v.InUse == true then\n                    return true\n                end\n            end\n            for _, v in ipairs(unitFrame.BuffFrame2.PlaterBuffList) do\n                if v.Caster == \"player\" and (v.SpellId == id or v.SpellName == id) and v.InUse == true then\n                    return true\n                end\n            end\n            if unitFrame.ExtraIconFrame.AuraCache[id] then\n                return true\n            end\n        end\n        return false\n    end\n    \n    -- 焦点目标\n    function modTable.CheckFocusCondition(unitFrame, param, conditionGroup)\n        return unitFrame.IsFocus\n    end\n    \n    -- 标记单位\n    function modTable.CheckMarkCondition(unitFrame, param, conditionGroup)\n        -- 标记参数只取第一个\n        \n        -- 参数空值，只要有标记就通过\n        if param[1] == nil then\n            local raidMark = Plater.GetRaidMark(unitFrame)\n            if raidMark ~= nil then\n                unitFrame._SelfMarkType = raidMark\n                return true\n            else\n                return false\n            end\n            -- 参数不为空，判断标记\n        else\n            if not modTable.VerifyParamNum(param[1], conditionGroup) then\n                return false\n            end\n            \n            local raidMark = Plater.GetRaidMark(unitFrame)\n            return raidMark ~= nil and raidMark == param[1];\n        end\n    end\n    \n    function modTable.VerifyParamNum(param, conditionGroup)\n        if type(param) == \"number\" then\n            return true;\n        else\n            print(\"value字段有值类型错误，查看：\" .. conditionGroup.name)\n            return false;\n        end\n    end\n    \n    function modTable.VerifyParamStr(param, conditionGroup)\n        if type(param) == \"string\" then\n            return true;\n        else\n            print(\"value字段有值类型错误，查看：\" .. conditionGroup.name)\n            return false;\n        end\n    end\n    \n    function modTable.Clear(unitFrame)\n        unitFrame._SelfMarkType = nil;\n    end\nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash(unitFrame.healthBar, 0.2, 100, \"white\")\n    \n    --------------------------------------------------------------------------\n    \n    -- 备用\n    --[[envTable.NpcNames = {\n        \n    }]]\n    \n    --------------------------------------------------------------------------\n    \n    -- 加密名字修改双引号里面的部分\n    envTable.Encrypted = {\n        [185685] = \"尤『减CD / 回血 / 回蓝』\", --尤型圣物\n        [184911] = \"尤『减CD / 回血 / 回蓝』\", --尤型拆卸者\n        \n        [185683] = \"沃『隐身 / 移速』\", --沃型圣物\n        [184910] = \"沃『隐身 / 移速』\", --沃型飘移者\n        \n        [185680] = \"维『急速』\", --维型圣物\n        [184908] = \"维『急速』\", --维型拦截者\n    }\n    \n    -- 加密名字变色\n    envTable.EncryptedName = {\n        [185685] = modTable.config.urhColor,\n        [184911] = modTable.config.urhColor,\n        \n        [185683] = modTable.config.woColor,\n        [184910] = modTable.config.woColor,\n        \n        [185680] = modTable.config.vyColor,\n        [184908] = modTable.config.vyColor,\n    }\n    \n    --------------------------------------------------------------------------\n    \n    -- 怨毒\n    envTable.Spiteful = {\n        [174773] = true,\n        [170483] = true, -- 阿塔莱死亡行者的灵魂\n    }\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n        if (target and target ~= \"\") then\n            local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n            if (class) then\n                target = DetailsFramework:AddClassColorToText(target, class)\n                -- 怨毒追击目标的字体大小(有目标时)\n                Plater:SetFontSize(unitFrame.PlateFrame.CurrentUnitNameString, 12)\n            end\n            \n            local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n            if (role and role ~= \"NONE\") then\n                target = DetailsFramework:AddRoleIconToText(target, role)\n            end\n            plateFrame.namePlateUnitName = target\n            Plater.UpdateUnitName(plateFrame)\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \n    -- 坦克天赋下被宠物嘲讽变色\n    envTable.TankPetThreatcolor = modTable.config._typeValueTankPetThreat\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\",\n        [73967] = \"Niuzao, the Black Ox\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \n    -- 斩杀变色\n    function envTable.UnitInExecuteRange(unitFrame)\n        if not envTable.Spiteful[unitFrame.namePlateNpcId] and modTable.config._enableExecute then\n            Plater.SetNameplateColor(unitFrame, modTable.config._typeValueExecute) --斩杀颜色\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \n    function envTable.UpdateColor(unitFrame, unitId)\n        if (unitFrame.IsSelf) then\n            return\n        end\n        \n        if IsInGroup() and\n        envTable.IfAggroAbnormal(unitFrame, unitId) then\n            -- 应用Plater仇恨颜色\n        else\n            for _, conditionGroup in ipairs(modTable.Conditions) do\n                if modTable.CheckCondition(conditionGroup, unitFrame) then\n                    modTable.ApplyCondition(conditionGroup, unitFrame, envTable)\n                    return;\n                end\n            end\n        end\n        \n        envTable.FullBarFlash:Stop()\n        Plater.RefreshNameplateColor(unitFrame)\n    end\n    \n    function envTable.IfAggroAbnormal(unitFrame, unitId)\n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation(\"player\", unitId)\n        \n        if envTable.PlayerRole == \"TANK\" then\n            -- 作为坦克却没抗怪，或者怪物仇恨不稳时,将应用Plater默认仇恨颜色\n            if isTanking == false or (threatStatus == 2 or threatStatus == 1 or threatStatus == 0) then\n                return true\n            end\n        elseif envTable.PlayerRole == \"DAMAGER\" then\n            -- 作为DPS和治疗在抗怪，或者怪物仇恨不稳时,将应用Plater默认仇恨颜色\n            if isTanking or (threatStatus == 3 or threatStatus == 2 or threatStatus == 1) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    function envTable.UpdatePlayerRole(unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n        end\n    end\n    \n    --------------------------------------------------------------------------\n    \nend",
    },
    ["Time"] = 1675243717,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    ["Enabled"] = true,
    ["party"] = true,
    ["scenario"] = true,
    ["raid"] = true,
    ["none"] = true,
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132864,
    ["Enabled"] = true,
    ["Revision"] = 8691,
    ["semver"] = "",
    ["Author"] = "落英入雨湖香-影之哀伤",
    ["Desc"] = "可自定义条件，扩展血条颜色。",
    ["Prio"] = 98,
    ["Name"] = "Expanded Color [魔改版]",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "坦克天赋下被宠物嘲讽变色",
    ["Value"] = true,
    ["Key"] = "_enableTankPetThreat",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "坦克天赋下被宠物嘲讽生效颜色",
    ["Value"] = {
    0,
    0.34509803921569,
    0.18823529411765,
    1,
    },
    ["Key"] = "_typeValueTankPetThreat",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 4,
    ["Name"] = "智能检测斩杀变色",
    ["Value"] = false,
    ["Key"] = "_enableExecute",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "智能检测斩杀线,最高优先级,覆盖包括自定义在内的所有条件组    需要开启Plater-常规设置-指示器-斩杀范围                              更改需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "斩杀生效颜色",
    ["Value"] = {
    1,
    0,
    0.70588235294118,
    1,
    },
    ["Key"] = "_typeValueExecute",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "目标变色优先级",
    ["Value"] = false,
    ["Key"] = "_enableTargetHIGH",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "(默认关闭)                                 改变目标姓名板变色的优先级   仅低于[坦克天赋被宠物嘲讽变色]和[斩杀变色]及[大秘境鼓舞怨毒]与自定义里的[高风险目标]           注:需要同时勾选目标变色         更改需要 /Reload 重载界面",
    },
    {
    ["Type"] = 4,
    ["Name"] = "目标变色",
    ["Value"] = false,
    ["Key"] = "_enableTarget",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "目标姓名板变色                        更改需要 /Reload 重载界面",
    },
    {
    ["Type"] = 4,
    ["Name"] = "目标名字变色",
    ["Value"] = false,
    ["Key"] = "_enableTargetNameText",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "坦克天赋下的目标名字变色,会默认启用姓名仇恨颜色调整,需要额外手动开启\"仇恨颜色-姓名颜色\"            更改需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "目标及坦克天赋目标名字颜色",
    ["Value"] = {
    0,
    1,
    1,
    1,
    },
    ["Key"] = "_typeValueTarget",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "注:DPS和治疗天赋下当前目标OT的名字变色将使用该颜色          更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "DPS/治疗天赋目标名字颜色",
    ["Value"] = {
    1,
    0.21960784313725,
    1,
    1,
    },
    ["Key"] = "_typeValueNoTankTarget",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "DPS和治疗开启目标名字变色时 OT的当前目标名字为                  \"目标及坦克天赋目标名字颜色\"未OT的当前目标名字为       \"DPS/治疗天赋目标名字颜色\" 未OT的非当前目标使用游戏默认颜色(白色)                                 更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "加密姓名板及名字变色",
    ["Value"] = false,
    ["Key"] = "setColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "加密姓名板颜色与名字颜色一致坦克天赋获得仇恨或者DPS和治疗未OT时姓名板变色高于目标变色被OT或者OT时姓名板颜色与名字颜色自动使用仇恨颜色调整       更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "尤型圣物颜色",
    ["Value"] = {
    0.63137254901961,
    0.34901960784314,
    1,
    1,
    },
    ["Key"] = "urhColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "沃型圣物颜色",
    ["Value"] = {
    0.33725490196078,
    1,
    0.42352941176471,
    1,
    },
    ["Key"] = "woColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "维型圣物颜色",
    ["Value"] = {
    0.50588235294118,
    0.47450980392157,
    0.21176470588235,
    1,
    },
    ["Key"] = "vyColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 4,
    ["Name"] = "加密姓名板放大",
    ["Value"] = false,
    ["Key"] = "RelicsPlateSize",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "放大数值为\"敌对怪物/NPC\"血条宽度*1.1,高度*1.5                      注:需要同时勾选加密姓名板变色更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "标记变色",
    ["Value"] = true,
    ["Key"] = "_enableMark",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 5,
    ["Name"] = "标记变色说明",
    ["Value"] = "(优先级最低,可被所有条件组覆盖)",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "M+ Colored Mobs 专注打断染色模块",
    ["Value"] = false,
    ["Key"] = "_MColored",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "该模块数据来自                  https://wago.io/UKpo0_GbE    更改模块需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "不断可能会死",
    ["Value"] = {
    0,
    0,
    1,
    1,
    },
    ["Key"] = "t1Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "最好还是断",
    ["Value"] = {
    0.37254901960784,
    0.45882352941176,
    1,
    1,
    },
    ["Key"] = "t2Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "爱断不断",
    ["Value"] = {
    1,
    0.59607843137255,
    0.51372549019608,
    1,
    },
    ["Key"] = "t3Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 5,
    ["Name"] = "染色模块说明",
    ["Value"] = "(该模块在\"目标变色优先级\"未开启时,不会被目标变色覆盖)",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "染色模块说明",
    ["Value"] = "染色模块只能2选1,同时勾选或关闭都不会生效",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "染色模块说明",
    ["Value"] = "更改染色模块需要 /Reload 重载界面",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Callme Plater NPC Colours 娱乐染色模块",
    ["Value"] = false,
    ["Key"] = "_Colours",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "该模块数据来自                  https://wago.io/c297bUudj      更改模块需要 /Reload 重载界面",
    },
    {
    ["Type"] = 5,
    ["Name"] = "染色模块说明",
    ["Value"] = "(该模块比较花里胡哨,16组颜色,因此会被目标变色覆盖)",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "空行",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "[怨毒] 显示为追击目标名字",
    ["Value"] = false,
    ["Key"] = "SpitefulTargetName",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "[默认关闭]                                 目标名字附带职责图标(队伍中)和职业颜色,血条的变色颜色,追击自己是Plater仇恨颜色里的\"仇恨在你身上\",没有追自己的是\"丢失仇恨\"颜色,为防止功能冲突,确认无其他同功能脚本或模组在开启!  更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 4,
    ["Name"] = "怨毒目标不是你姓名板变色",
    ["Value"] = false,
    ["Key"] = "SpitefulNoPlayer",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "[默认关闭]                                 由于怨毒不会追击坦克职业,该选项给予坦克将\"怨毒\"从\"丢失仇恨\"颜色里分离,更易分辨是否是需要嘲讽的怪物,DPS/治疗也可以开启,自行选择                                  注:需要同时勾选显示追击目标  更改需要 /Reload  重载界面",
    },
    {
    ["Type"] = 1,
    ["Name"] = "怨毒目标不是你生效颜色",
    ["Value"] = {
    0.41176470588235,
    0.41176470588235,
    0.41176470588235,
    0.68999999761581,
    },
    ["Key"] = "SpitefulNoPlayerColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "更改颜色需要 /Reload 重载界面",
    },
    {
    ["Type"] = 5,
    ["Name"] = "怨毒目标是你说明",
    ["Value"] = "[目标是你] 使用Plater仇恨颜色\"仇恨在你身上\"",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    ["ignore_color_changes"] = true,
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x61aae6eda745d",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n        --envTable.updateAlpha(unitFrame)\n    else\n        envTable.hideAggroOverlay(unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n        -- envTable.updateAlpha(unitFrame)\n    else\n        envTable.hideAggroOverlay(unitFrame);\n    end\n    \nend\n\n\n\n\n",
    ["Initialization"] = "function (modTable)\n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                    --  alphaFrame:SetAlpha (1)\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                        -- alphaFrame:SetAlpha (1)\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                    -- \n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() *100;\n    local textureWidth = textureHeight *100;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = 60,\n        ['width'] = 140.5\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\Addons\\SharedMedia_MyMedia\\background\\Quatre]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -12 - math.floor(envTable.TEXTURE_CONFIG['width'] / 0), \n                -18\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end      \n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                13.5+ math.floor(envTable.TEXTURE_CONFIG['width'] / 55), \n                -14\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 8);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Hide();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel()-2);\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil, \"BACKGROUND\", nil, -7);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
    },
    ["Time"] = 1697188839,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 237529,
    ["Enabled"] = true,
    ["Revision"] = 2177,
    ["semver"] = "",
    ["Author"] = "Allessiel-Azralon",
    ["Desc"] = "Smart aggro overlay to nameplates",
    ["Prio"] = 3,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Name"] = "Test Mode",
    ["Value"] = false,
    ["Key"] = "testing",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Don't override Nameplate color",
    ["Value"] = false,
    ["Key"] = "ignore_color_changes",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Check this to prevent this mod to forcefully change the nameplate color.",
    },
    },
    ["Name"] = "!仇恨提示（新）2",
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Raid Target"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \n    \n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}       \n    \n    -- local color = envTable.ColorByMark [raidMark]\n    envTable.ColorByMark = {\n        [1] = \"#d9cf45\",            -- 黄色星星\n        [2] = \"#ed820f\",           -- 橙色大饼\n        [3] = \"#b30fd6\",           -- 紫色菱形\n        [4] = \"#24a824\",         -- 绿色三角\n        [5] = \"#99bfd9\",           -- 银色月亮\n        [6] = \"#00a3ff\",            -- 蓝色方块\n        [7] = \"#d12e2e\",            -- 红色叉子\n        [8] = \"#e3d4bd\",           -- 白色骷髅\n        \n        \n        \"#d9cf45\", --star\n        \"#ed820f\", --circle\n        \"#b30fd6\", --diamond\n        \"#24a824\", --triangle\n        \"#99bfd9\", --moon\n        \"#00a3ff\", --square\n        \"#d12e2e\", --cross\n        \"#e3d4bd\", --skull\n    }\n    ----------\n    envTable.NpcColors = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n        \n        \n        \n    } \n    ----------\n    function envTable.UpdateMarkColor (unitFrame)\n        local raidMark = Plater.GetRaidMark (unitFrame)\n        local lifePercent = unitFrame.healthBar.lifePercent\n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        \n        if (raidMark) then\n            -- Plater.SetNameplateColor (unitFrame, envTable.ColorByMark [raidMark])\n            unitFrame.unitName:SetTextColor(Plater:ParseColors(envTable.ColorByMark [raidMark]))\n            -- lifePercent:SetTextColor(Plater:ParseColors(envTable.ColorByMark [raidMark]))\n            Plater:SetFontSize (nameString, 11)\n            envTable.HasRaidMark = true\n            \n        else\n            if (envTable.HasRaidMark) then\n                Plater.RefreshNameplateColor (unitFrame)\n                unitFrame.unitName:SetTextColor(1,1,1,1)\n                lifePercent:SetTextColor(1,1,1,1)\n                Plater:SetFontSize (nameString, 10)\n                envTable.HasRaidMark = nil\n                \n            end\n        end\n    end\n    \n    \nend\n\n\n\n",
    },
    ["Time"] = 1663038932,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\TARGETINGFRAME\\UI-RaidTargetingIcons",
    ["Enabled"] = true,
    ["Revision"] = 514,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Change the healthbar color based on the raid mark on the unit",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Color by Raid Mark",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x625464c7501dd8d",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.Update(unitFrame, unitId)\nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.Update(unitFrame, unitId)\n \n    \n    \nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local Plater = Plater\n    --local percent = currentHealth / maxHealth * 100\n    -- local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n    \n    \n    unitFrame.healthBar.TargetBorder = unitFrame.healthBar.TargetBorder or CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    unitFrame.healthBar.TargetBorder:SetBorderSizes(2, 2, 2, 2)\n    unitFrame.healthBar.TargetBorder:UpdateSizes()   \n    \n    local ColorText = function (unitFrame)\n        local isTank = Plater.PlayerIsTank\n        local r, g, b, a = unitFrame.unitName:GetTextColor()\n        \n        --if unitFrame.namePlateThreatStatus == nil or (isTank and unitFrame.namePlateThreatStatus == 3) or (not isTank and unitFrame.namePlateThreatStatus == 0) then\n        -- if percent <100 then\n        -- r, g, b =1,1,1,1  \n        --else\n        r, g, b = unitFrame.healthBar.barTexture:GetVertexColor()\n        -- end\n        --unitFrame.unitName:SetTextColor(r, g, b, a)\n        --end\n        \n        local lifePercent = unitFrame.healthBar.lifePercent\n        --if (Plater.IsInCombat()) then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- else\n        -- lifePercent:SetTextColor(1, 1, 1, 1)\n        --end\n        \n        -- if lifePercent:IsShown () then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- end\n        \n        \n    end\n    \n    local ColorElements = function (unitFrame)\n        local healthBar = unitFrame.healthBar\n        local twoSides = unitFrame.TargetTextures2Sides\n        local r, g, b, a = healthBar.barTexture:GetVertexColor()\n        \n        if (Plater.IsInCombat()) then\n            healthBar.TargetBorder:SetVertexColor(r, g, b, a)   \n            twoSides[1]:SetVertexColor(r, g, b, a)\n            twoSides[2]:SetVertexColor(r, g, b, a)\n            \n            unitFrame.TargetNeonUp:SetVertexColor(r, g, b, a)\n            unitFrame.TargetNeonDown:SetVertexColor(r, g, b, a)\n        end\n        \n        -- if (unitFrame.namePlateIsTarget) then \n        --  twoSides[1]:SetPoint (\"left\", healthBar, \"left\", -18, 0)\n        \n        -- end\n    end\n    \n    \n    \n    local Show = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Show()\n    end\n    \n    local Hide = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\n    \n    function envTable.Update(unitFrame, unitId)\n        ColorText(unitFrame)\n        \n        local TargetBorder = unitFrame.healthBar.TargetBorder\n        if not unitFrame.IsTarget or UnitIsFriend(\"player\", unitId) then\n            Hide(unitFrame)\n            return\n        end\n        \n        ColorElements(unitFrame)\n        Hide(unitFrame)\n    end\nend",
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- envTable.Update(unitFrame, unitId)\n    \n    local Plater = Plater\n    --local percent = currentHealth / maxHealth * 100\n    -- local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n    \n    \n    unitFrame.healthBar.TargetBorder = unitFrame.healthBar.TargetBorder or CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    unitFrame.healthBar.TargetBorder:SetBorderSizes(2, 2, 2, 2)\n    unitFrame.healthBar.TargetBorder:UpdateSizes()   \n    \n    local ColorText = function (unitFrame)\n        local isTank = Plater.PlayerIsTank\n        local r, g, b, a = unitFrame.unitName:GetTextColor()\n        \n        --if unitFrame.namePlateThreatStatus == nil or (isTank and unitFrame.namePlateThreatStatus == 3) or (not isTank and unitFrame.namePlateThreatStatus == 0) then\n        -- if percent <100 then\n        -- r, g, b =1,1,1,1  \n        --else\n        r, g, b = unitFrame.healthBar.barTexture:GetVertexColor()\n        -- end\n        --unitFrame.unitName:SetTextColor(r, g, b, a)\n        --end\n        \n        local lifePercent = unitFrame.healthBar.lifePercent\n        --if (Plater.IsInCombat()) then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- else\n        -- lifePercent:SetTextColor(1, 1, 1, 1)\n        --end\n        \n        -- if lifePercent:IsShown () then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- end\n        \n        \n    end\n    \n    local ColorElements = function (unitFrame)\n        local healthBar = unitFrame.healthBar\n        local twoSides = unitFrame.TargetTextures2Sides\n        local r, g, b, a = healthBar.barTexture:GetVertexColor()\n        \n        if (Plater.IsInCombat()) then\n            healthBar.TargetBorder:SetVertexColor(r, g, b, a)   \n            twoSides[1]:SetVertexColor(r, g, b, a)\n            twoSides[2]:SetVertexColor(r, g, b, a)\n            \n            unitFrame.TargetNeonUp:SetVertexColor(r, g, b, a)\n            unitFrame.TargetNeonDown:SetVertexColor(r, g, b, a)\n        end\n        \n        if (unitFrame.namePlateIsTarget) then \n            if (unitFrame.castBar.SpellID == 240446) then\n                twoSides[1]:SetPoint (\"left\", healthBar, \"left\", -54,0)\n            else \n                twoSides[1]:SetPoint (\"left\", healthBar, \"left\", -41, 0)\n            end\n        end\n    end\n    \n    \n    \n    local Show = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Show()\n    end\n    \n    local Hide = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\n    \n    function envTable.Update(unitFrame, unitId)\n        ColorText(unitFrame)\n        \n        local TargetBorder = unitFrame.healthBar.TargetBorder\n        if not unitFrame.IsTarget or UnitIsFriend(\"player\", unitId) then\n            Hide(unitFrame)\n            return\n        end\n        \n        ColorElements(unitFrame)\n        Hide(unitFrame)\n    end\nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.Update(unitFrame, unitId)\nend",
    ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.TargetBorder then\n        unitFrame.healthBar.TargetBorder:Hide()\n        unitFrame.healthBar.TargetBorder = nil\n    end\nend",
    ["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --envTable.Update(unitFrame, unitId\n    \n    local Plater = Plater\n    --local percent = currentHealth / maxHealth * 100\n    -- local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n    \n    \n    unitFrame.healthBar.TargetBorder = unitFrame.healthBar.TargetBorder or CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    unitFrame.healthBar.TargetBorder:SetBorderSizes(2, 2, 2, 2)\n    unitFrame.healthBar.TargetBorder:UpdateSizes()   \n    \n    local ColorText = function (unitFrame)\n        local isTank = Plater.PlayerIsTank\n        local r, g, b, a = unitFrame.unitName:GetTextColor()\n        \n        --if unitFrame.namePlateThreatStatus == nil or (isTank and unitFrame.namePlateThreatStatus == 3) or (not isTank and unitFrame.namePlateThreatStatus == 0) then\n        -- if percent <100 then\n        -- r, g, b =1,1,1,1  \n        --else\n        r, g, b = unitFrame.healthBar.barTexture:GetVertexColor()\n        -- end\n        --unitFrame.unitName:SetTextColor(r, g, b, a)\n        --end\n        \n        local lifePercent = unitFrame.healthBar.lifePercent\n        --if (Plater.IsInCombat()) then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- else\n        -- lifePercent:SetTextColor(1, 1, 1, 1)\n        --end\n        \n        -- if lifePercent:IsShown () then\n        -- lifePercent:SetTextColor(r, g, b, a)\n        -- end\n        \n        \n    end\n    \n    local ColorElements = function (unitFrame)\n        local healthBar = unitFrame.healthBar\n        local twoSides = unitFrame.TargetTextures2Sides\n        local r, g, b, a = healthBar.barTexture:GetVertexColor()\n        \n        if (Plater.IsInCombat()) then\n            healthBar.TargetBorder:SetVertexColor(r, g, b, a)   \n            twoSides[1]:SetVertexColor(r, g, b, a)\n            twoSides[2]:SetVertexColor(r, g, b, a)\n            \n            unitFrame.TargetNeonUp:SetVertexColor(r, g, b, a)\n            unitFrame.TargetNeonDown:SetVertexColor(r, g, b, a)\n        end\n        \n        if (unitFrame.namePlateIsTarget) then\n            twoSides[1]:SetPoint (\"left\", healthBar, \"left\", -18.5, 0)\n            \n        end\n    end\n    \n    \n    \n    local Show = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Show()\n    end\n    \n    local Hide = function (unitFrame)\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\n    \n    function envTable.Update(unitFrame, unitId)\n        ColorText(unitFrame)\n        \n        local TargetBorder = unitFrame.healthBar.TargetBorder\n        if not unitFrame.IsTarget or UnitIsFriend(\"player\", unitId) then\n            Hide(unitFrame)\n            return\n        end\n        \n        ColorElements(unitFrame)\n        Hide(unitFrame)\n    end\nend",
    },
    ["Time"] = 1695022507,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136129,
    ["Enabled"] = true,
    ["Revision"] = 825,
    ["semver"] = "",
    ["Author"] = "Linaori-Ragnaros",
    ["Desc"] = "NPC colors in name with threat colors",
    ["Prio"] = 1,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    ["Name"] = "NPC & Threat Colors",
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.lifePercent:GetText()\n    \n    if (text) then\n        text = text:gsub (\"%%\", \"\")\n        unitFrame.healthBar.lifePercent:SetText (text)    \n    end\n    \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.lifePercent:GetText()\n    \n    if (text) then\n        text = text:gsub (\"%%\", \"\")\n        unitFrame.healthBar.lifePercent:SetText (text)\n    end    \n    \nend\n\n\n\n\n",
    },
    ["Time"] = 1663038964,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/hGOx4pu68/1",
    ["Icon"] = 134331,
    ["Enabled"] = true,
    ["Revision"] = 67,
    ["semver"] = "1.0.0",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Remove the % letter from the health percent text.",
    ["Prio"] = 99,
    ["version"] = 1,
    ["PlaterCore"] = 1,
    ["Name"] = "Remove Percent Icon (%)",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Created",
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
    ["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s <3  then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    DF.IconRowFunctions = DF.IconMixin\n    DF.IconRowFunctions.FormatCooldownTimeOrig = DF.IconRowFunctions.FormatCooldownTimeOrig or DF.IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if DF.IconRowFunctions.FormatCooldownTime then\n                DF.IconRowFunctions.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = DF.IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
    ["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1687490684,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135768,
    ["Enabled"] = true,
    ["Revision"] = 297,
    ["semver"] = "",
    ["Author"] = "Viash-Thrall",
    ["Desc"] = "Overwrites the Plater time formatting to show second fractions.",
    ["Prio"] = 99,
    ["Name"] = "Detailed Time Format",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Key"] = "formatAuraTimers",
    ["Value"] = true,
    ["Name"] = "Format Aura Timers",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "formatBuffSpecialTimers",
    ["Value"] = true,
    ["Name"] = "Format Buff Special Timers",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x62bd2c92422525db",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\n    local borderTexture = unitFrame.healthBar.roundBorder.borderTexture\n    if (not unitFrame.IsSelf) then\n        borderTexture:Show()\n    else\n        borderTexture:Hide()\n    end\nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"black\"\n    --envTable.focusBorderColor = \"#fff700\"\n    envTable.focusBorderColor = \"black\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        --if unitFrame.namePlateIsTarget then\n        Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        -- if unitFrame.IsFocus then\n       -- Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n    --else\n       -- Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n    --end\n    \n    \n    -------------------------------\n    local borderColor = \"black\" \n    \n    --adjust the border offset to correctly fit into the health bar\n    local leftOffset = -15.5\n    local topOffset = 7\n    local rightOffset = 15.5\n    local bottomOffset = -7\n    \n    --adjust the border texture\n    -- local texture = [[Interface\\GLUES\\Models\\UI_Draenei\\GenericGlow64]]\n    local texture = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Slim_Select.tga]] \n    --adjust the alpha\n    local alpha = 1\n    \n    \n    --private\n    if (not unitFrame.healthBar.roundBorder) then\n        local roundBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar)\n        roundBorder:SetFrameLevel (unitFrame.healthBar:GetFrameLevel() - 1)\n        roundBorder:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", 0, 0)\n        roundBorder:SetPoint (\"bottomright\", unitFrame.healthBar, \"bottomright\", 0, 0)\n        unitFrame.healthBar.roundBorder = roundBorder        \n        \n        local innerBorder = Plater:CreateImage (roundBorder, texture)\n        roundBorder.borderTexture = innerBorder\n    end\n    \n    local healthBar = unitFrame.healthBar\n    local borderTexture = healthBar.roundBorder.borderTexture\n    -- local barTexture = [[Interface/AddOns/SharedMedia_MyMedia/background/RenStripe3L]]\n    --  local barTexture2 =Plater.healthBar.config.setTexture\n    -- local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n    --  local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat[2]\n    \n    borderTexture:SetPoint (\"topleft\", healthBar, \"topleft\", leftOffset, topOffset)\n    borderTexture:SetPoint (\"bottomright\", healthBar, \"bottomright\", rightOffset, bottomOffset)\n    borderTexture:SetTexture (texture)\n  --  if unitFrame.IsFocus then\n        --borderTexture:SetVertexColor (DetailsFramework:ParseColors (\"yellow\"))\n       -- Plater.SetNameplateScale (unitFrame,1.2)\n        --  unitFrame.healthBar:SetTexture(barTexture)\n        --Plater.SetCastBarSize (unitFrame, nameplateWidth, nameplateHeight*0.65)\n        --  Plater.SetNameplateSize(unitFrame, nameplateWidth*1.2, nameplateHeight*1.8)\n   -- else\n        borderTexture:SetVertexColor (DetailsFramework:ParseColors (borderColor))\n        --Plater.SetNameplateScale (unitFrame)\n        -- unitFrame.healthBar:SetTexture(barTexture2) \n    --end\n    borderTexture:SetAlpha (alpha)    \nend\nend",
    },
    ["Time"] = 1697188893,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "133004",
    ["Enabled"] = true,
    ["Revision"] = 303,
    ["semver"] = "",
    ["Author"] = "Zxkv-Illidan",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "Constructor",
    ["Options"] = {
    },
    ["Name"] = "Border Target",
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n     envTable.UpdateHealthPercent (unitFrame) \nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    envTable.UpdateHealthPercent (unitFrame) \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    ---------------生命值\n    --settings:\n    envTable.ShowMaxHealth = true\n    envTable.ShowPercent = true   \n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        local anchor2 = {\n            side = 7, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top 9 = center 10 = inner-left 11 = inner-right 12 = inner-top 13 = inner-bottom\n            x = -15, --x offset\n            y = -4, --y offset\n        };\n        \n        \n        local anchor3 = {\n            side = 7, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top 9 = center 10 = inner-left 11 = inner-right 12 = inner-top 13 = inner-bottom\n            x = 0, --x offset\n            y = -4, --y offset\n        };\n        --build the string text with current health\n        -- local   healthString = healthString .. Plater.FormatNumber (currentHealth)\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString =Plater.FormatNumber (currentHealth)\n        end\n        \n        \n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.0f\"\n            \n            if (percent >= 10) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.0f\"\n            end\n            \n            if (percent == 100)then\n                healthString =healthString \n                Plater.SetAnchor (unitFrame.healthBar.lifePercent, anchor3, unitFrame.healthBar);\n                -- elseif (percent >= 2 and percent< 10)then  \n                -- healthString = healthString ..\" |       \"  \n                ---elseif (percent <2)then  \n                --  healthString = healthString ..\" |      \" \n                --  elseif (percent >= 10 and percent < 20)then \n                -- healthString = healthString ..\" |     \"  \n            else\n                healthString = healthString ..\" |\"\n                Plater.SetAnchor (unitFrame.healthBar.lifePercent, anchor2, unitFrame.healthBar);\n            end      \n            \n            \n            -- if (envTable.ShowMaxHealth) then\n            --healthString = Plater.FormatNumber (currentHealthMax)--healthString --(\" .. format (fraction,percent ) .. \"%)\"\n            -- else\n            --  healthString = healthString .. envTable.Separator .. \"(\"..format (fraction, percent) .. \"%)\"\n            -- end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n        -- Plater.SetAnchor (unitFrame.HealthText, anchor2, unitFrame.ExtraHealthPercentText);\n    end\n    \n    \n    ---------------------\n    function Plater.FormatNumber (number)\n        if (Plater.db.profile.number_region == \"western\") then\n            if (number > 99999999) then\n                return format (\"%.1f\", (number/100000000)) .. \"B\"\n                \n            elseif (number > 999999) then\n                return format (\"%.1f\", (number/1000000)) .. \"M\"\n                \n            elseif (number > 999) then\n                return format (\"%.1f\", (number/1000)) .. \"k\"\n                \n            else\n                return floor (number)  \n                --return format (\"%.1f\", (number/1000)) .. \"k\"\n            end\n            \n        else\n            if (number > 99999999) then\n                return format (\"%.2f\", number/100000000) .. \"亿\"\n                \n                --elseif (number > 999999) then\n                --return format (\"%.2f\", number/1000000) .. \"M\"\n                \n                -- elseif (number > 99999) then\n                --return floor (number/1000) .. \"K\"\n                \n            elseif (number > 99999) then\n                return format (\"%.0f\", (number/10000)) .. \"万\"\n            elseif (number <= 99999 and number >9999) then\n                return format (\"%.1f\", (number/10000)) .. \"万\"\n            elseif (number <= 9999 and number>999) then\n                return format (\"%.1f\", (number/1000)) .. \"千\"\n                \n            end\n            \n            return floor (number)            \n        end\n    end\n    ---------------------   \n    --百分比\n    local showOnFriendlyPlayers = true\n    local showOnEnemyPlayers = true\n    local showOnFriendlyNPC = true\n    \n    -- text settings:\n    local textSize = 10\n    local alpha = 1\n    -- local textColor =\" r,g,b,a \"\n    -- local textFont = \"2002\"\n    local textOutline =  \"OUTLINE\"\n    --local textShadowColor = \"green\"\n    --local percent = currentHealth / maxHealth * 100\n    -- local r,g,b,a =   unitFrame.ExtraHealthPercentText:SetTextColor ()\n    ----------------\n    \n    --if (healthPercent >80) then\n    -- r,g,b,a =255/255,255/255, 255/255\n    --elseif (healthPercent >20 and healthPercent <40 )then\n    -- r,g,b,a =254/255,128/255, 0/255\n    -- elseif (healthPercent <=20 )then\n    -- r,g,b,a = 253/255,25/255, 24/255\n    -- else\n    -- r,g,b,a = 1,1,0,1\n    --  end\n    \n    \n    ----------------  \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top 9 = center 10 = inner-left 11 = inner-right 12 = inner-top 13 = inner-bottom\n        x = 0, --x offset\n        y = 0, --y offset\n    };\n    \n    local anchorNameOnly = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top 9 = center 10 = inner-left 11 = inner-right 12 = inner-top 13 = inner-bottom\n        x = 25, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    ---- functions\n    local DF = _G [\"DetailsFramework\"]\n    \n    if not unitFrame.ExtraHealthPercentText then\n        unitFrame.ExtraHealthPercentText = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize);\n    end\n    \n    if textFont then\n        DF:SetFontFace (unitFrame.ExtraHealthPercentText, textFont)\n    end\n    if textSize then\n        DF:SetFontSize (unitFrame.ExtraHealthPercentText, textSize)\n    end\n    if textOutline then\n        DF:SetFontOutline (unitFrame.ExtraHealthPercentText, textOutline)\n    end\n    -- if textColor then\n    -- local r, g, b, a = DF:ParseColors (textColor)\n    -- unitFrame.ExtraHealthPercentText:SetTextColor (r, g, b, a)\n    -- end\n    if textShadowColor then\n        local r, g, b, a = DF:ParseColors (textShadowColor)\n        DF:SetFontShadow (unitFrame.ExtraHealthPercentText, r, g, b, a, 1, -1)\n    end\n    \n    Plater.SetAnchor (unitFrame.ExtraHealthPercentText, anchor, unitFrame.healthBar.lifePercent);\n    unitFrame.ExtraHealthPercentText:SetAlpha(alpha or 1)\n    \n    function envTable.UpdateHealthPercent (unitFrame)\n        if (not showOnFriendlyPlayers and unitFrame.ActorType == \"friendlyplayer\") or (not showOnEnemyPlayers and unitFrame.ActorType == \"enemyplayer\") or (not showOnFriendlyNPC and unitFrame.ActorType == \"friendlynpc\") or unitFrame.IsSelf then\n            unitFrame.ExtraHealthPercentText:SetText (\"\")\n            return\n        end\n        \n        if unitFrame.PlateFrame.IsNpcWithoutHealthBar or unitFrame.PlateFrame.IsFriendlyPlayerWithoutHealthBar then\n            --unitFrame.ExtraHealthPercentText:SetParent(unitFrame.PlateFrame)\n            Plater.SetAnchor (unitFrame.ExtraHealthPercentText, anchorNameOnly, unitFrame.PlateFrame);\n        else\n            unitFrame.ExtraHealthPercentText:SetParent(unitFrame.healthBar)\n            Plater.SetAnchor (unitFrame.ExtraHealthPercentText, anchor, unitFrame.healthBar.lifePercent);\n        end\n        \n        local health, healthMax = unitFrame.healthBar.CurrentHealth, unitFrame.healthBar.CurrentHealthMax\n        if health and healthMax then\n            local healthPercent = health/healthMax * 100\n            if (healthPercent < 10) then\n                unitFrame.ExtraHealthPercentText:SetText (format (\"%.0f\", healthPercent) .. \"\")\n                unitFrame.ExtraHealthPercentText:SetTextColor (253/255,25/255, 24/255)\n            elseif (healthPercent >= 10 and healthPercent <= 20) then\n                unitFrame.ExtraHealthPercentText:SetText (format (\"%.0f\", healthPercent) .. \"\")\n                unitFrame.ExtraHealthPercentText:SetTextColor (253/255,25/255, 24/255)   \n            elseif (healthPercent > 20 and healthPercent <= 40) then\n                unitFrame.ExtraHealthPercentText:SetText (format (\"%.0f\", healthPercent) .. \"\")\n                unitFrame.ExtraHealthPercentText:SetTextColor (254/255,128/255, 0/255)    \n            elseif (healthPercent > 40 and healthPercent <= 80) then\n                unitFrame.ExtraHealthPercentText:SetText (format (\"%.0f\", healthPercent) .. \"\")\n                unitFrame.ExtraHealthPercentText:SetTextColor (1,1,0,1)   \n            elseif (healthPercent > 80 and healthPercent < 100) then\n                unitFrame.ExtraHealthPercentText:SetText (format (\"%.0f\", healthPercent) .. \"\")\n                unitFrame.ExtraHealthPercentText:SetTextColor (1,1,1,1)  \n            else\n                unitFrame.ExtraHealthPercentText:SetText (\"\")\n            end\n        else\n            unitFrame.ExtraHealthPercentText:SetText (\"\")\n        end\n        \n    end\n    \nend",
    },
    ["Time"] = 1697188839,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 237031,
    ["Enabled"] = true,
    ["Revision"] = 1129,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "!Health / Max Health (%)",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.35\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = false\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 1\n    envTable.HealthDivisorColor = \"yellow\"\n    envTable.HealthExecuteIndicatorAlpha = 0.85\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1664550498,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    ["WARLOCK"] = true,
    ["Enabled"] = true,
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135358,
    ["Enabled"] = true,
    ["Revision"] = 312,
    ["semver"] = "",
    ["Author"] = "Ahwa-Azralon",
    ["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "术士 35%黄斩杀",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local targetName = UnitName (unitId .. \"target\")\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.IsSelf) and targetName and (not  UnitIsUnit(targetName, \"\"))  then\n        unitFrame.CurrentTargetFontString.text = \" \" .. format (targetName) .. \"\" or \"\"\n        unitFrame.CurrentTargetFontString.textcolor = RAID_CLASS_COLORS[select(2, UnitClass(unitId .. \"target\"))] or \"white\"\n    else\n        unitFrame.CurrentTargetFontString.text = \"\"\n    end\n    \n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"\nend",
    },
    ["Time"] = 1671797894,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132341,
    ["Enabled"] = true,
    ["Revision"] = 586,
    ["semver"] = "",
    ["Author"] = "Snacktard-Stormrage",
    ["Desc"] = "姓名板目标",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "OT目标名字( 无箭头)",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["UID"] = "0x6336a7dc1d406d",
    ["Hooks"] = {
    ["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 25, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local targetName = UnitName (unitId .. \"target\")\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.IsSelf) and targetName and (not  UnitIsUnit(targetName, \"\"))  then\n        unitFrame.CurrentTargetFontString.text = \" ▶\" .. format (targetName) .. \"\" or \"\"\n        unitFrame.CurrentTargetFontString.textcolor = RAID_CLASS_COLORS[select(2, UnitClass(unitId .. \"target\"))] or \"white\"\n    else\n        unitFrame.CurrentTargetFontString.text = \"\"\n    end\n    \n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 25, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 25, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 25, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"\nend",
    },
    ["Time"] = 1664550466,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["Icon"] = 132341,
    ["Enabled"] = false,
    ["Revision"] = 559,
    ["Options"] = {
    },
    ["Author"] = "Snacktard-Stormrage",
    ["Desc"] = "姓名板目标",
    ["Prio"] = 99,
    ["Name"] = "OT目标名字( ▶)",
    ["PlaterCore"] = 1,
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["UID"] = "0x6336a8431ed49c",
    ["Hooks"] = {
    ["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local targetName = UnitName (unitId .. \"target\")\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.IsSelf) and targetName and (not  UnitIsUnit(targetName, \"\"))  then\n        unitFrame.CurrentTargetFontString.text = \" >>\" .. format (targetName) .. \"\" or \"\"\n        unitFrame.CurrentTargetFontString.textcolor = RAID_CLASS_COLORS[select(2, UnitClass(unitId .. \"target\"))] or \"white\"\n    else\n        unitFrame.CurrentTargetFontString.text = \"\"\n    end\n    \n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"--insert code here\n    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local raidMark = Plater.GetRaidMark (unitFrame)\n    if (not unitFrame.CurrentTargetFontString) then\n        envTable.newLabel = Plater:CreateLabel (unitFrame.healthBar)\n        unitFrame.CurrentTargetFontString = envTable.newLabel\n    end\n    if (unitFrame.namePlateIsTarget) then\n        if (raidMark) then\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 39, 0)\n        else\n            unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 12, 0)\n        end\n    elseif (raidMark) then\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 26, 0)\n    else\n        unitFrame.CurrentTargetFontString:SetPoint (\"left\", unitFrame.healthBar, \"right\", 2, 0)\n    end\n    unitFrame.CurrentTargetFontString.textsize = 12\n    unitFrame.CurrentTargetFontString.outline = \"OUTLINE\"\nend",
    },
    ["Time"] = 1664550449,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["Icon"] = 132341,
    ["Enabled"] = false,
    ["Revision"] = 566,
    ["Options"] = {
    },
    ["Author"] = "Snacktard-Stormrage",
    ["Desc"] = "姓名板目标",
    ["Prio"] = 99,
    ["Name"] = "OT目标名字( >>)",
    ["PlaterCore"] = 1,
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    ["targetcolor"] = {
    0,
    0.6,
    1,
    1,
    },
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
    },
    ["Time"] = 1666697394,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "https://wago.io/_GSmNC31z/1",
    ["Icon"] = 236201,
    ["Enabled"] = false,
    ["Revision"] = 180,
    ["semver"] = "1.0.0",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Changes the target color to the color set in the constructor script.",
    ["Prio"] = 92,
    ["version"] = 1,
    ["PlaterCore"] = 1,
    ["Name"] = "Target Color [Plater]",
    ["LastHookEdited"] = "",
    ["Options"] = {
    {
    ["Type"] = 1,
    ["Name"] = "targetcolor",
    ["Value"] = {
    0.46274509803922,
    1,
    0.48235294117647,
    1,
    },
    ["Key"] = "targetcolor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "targetcolor",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["UID"] = "0x6336b3e34c3cc9",
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = false\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 1\n    envTable.HealthDivisorColor = \"#ff2d2d\"\n    envTable.HealthExecuteIndicatorAlpha = 0.85\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1671154222,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    ["HUNTER"] = true,
    ["WARRIOR"] = true,
    ["Enabled"] = true,
    ["PALADIN"] = true,
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["Icon"] = 135358,
    ["Enabled"] = true,
    ["Revision"] = 177,
    ["Options"] = {
    },
    ["Author"] = "Ahwa-Azralon",
    ["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
    ["Prio"] = 98,
    ["Name"] = "战士/猎人 20%斩杀",
    ["PlaterCore"] = 1,
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["UID"] = "0x6336b3e34c3cc9",
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.25\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = false\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 1\n    envTable.HealthDivisorColor = \"#ff2d2d\"\n    envTable.HealthExecuteIndicatorAlpha = 0.85\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1671154277,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    ["WARLOCK"] = true,
    ["Enabled"] = true,
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135358,
    ["Enabled"] = true,
    ["Revision"] = 204,
    ["semver"] = "",
    ["Author"] = "Ahwa-Azralon",
    ["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
    ["Prio"] = 97,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["LastHookEdited"] = "Constructor",
    ["Options"] = {
    },
    ["Name"] = "术士 25%斩杀",
    },
    {
    ["OptionsValues"] = {
    },
    ["HooksTemp"] = {
    },
    ["Hooks"] = {
    ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        Plater:SetFontSize (unitFrame.unitName, Plater.GetConfig (unitFrame).actorname_text_size)\n    end\nend\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if (IsActiveBattlefieldArena()) then\n        if (unitFrame.ActorType == \"enemyplayer\") then\n            for i = 1, 5 do\n                local unitGUID = UnitGUID (\"arena\" .. i)\n                if (unitGUID == unitFrame.namePlateUnitGUID) then\n                    unitFrame.unitName:SetText (\"[\".. i ..\"]\" .. \" - \" .. unitFrame.namePlateUnitName)\n                    Plater:SetFontSize (unitFrame.unitName, envTable.FontSize)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FontSize = 11\n    \nend\n\n\n",
    },
    ["Time"] = 1671799971,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\x_64",
    ["Enabled"] = true,
    ["Revision"] = 63,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Show the arena enemy number instead of the player name.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Arena Enemy Number",
    ["LastHookEdited"] = "",
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --options\n    --custom indicator is a custom icon added by this script\n    envTable.ShowCustomIndicator = true\n    --regular indicator is the indicator row within Plater default indicators\n    envTable.ShowRegularIndicator = false\n    \n    --custom indicator options\n    envTable.Texture = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\Healer]]\n    envTable.Width = 25\n    envTable.Height = 25\n    \n    envTable.Anchor = {\n        side = 8, --topright\n        x = envTable.Width / 2-10, --x offset\n        y = -envTable.Width / 2+13, --y offset\n    }\n    \n    envTable.UseClassColor = false\n    envTable.Color = \"white\" --only use this color when use class color is false\n    \n    --private\n    envTable.HealerSpecs = {\n        [105] = true, -->  druid resto\n        [270] = true, --> monk mw\n        [65] = true, --> paladin holy\n        [256] = true,  --> priest disc\n        [257] = true,  --> priest holy\n        [264] = true, --> shaman resto\n    }\n    \n    unitFrame.HealerTexture = unitFrame.HealerTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    \n    unitFrame.HealerTexture.width = envTable.Width\n    unitFrame.HealerTexture.height = envTable.Height\n    unitFrame.HealerTexture.texture = envTable.Texture\n    Plater.SetAnchor (unitFrame.HealerTexture, envTable.Anchor)\n    \nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    local Details = Details\n    unitFrame.HealerTexture:Hide()\n    \n    if (Details and Details.realversion >= 134) then\n        local spec = Details:GetSpecByGUID (unitFrame.namePlateUnitGUID)\n        if (spec and envTable.HealerSpecs [spec]) then\n            \n            --custom icon indicator\n            if (envTable.ShowCustomIndicator) then\n                unitFrame.HealerTexture:Show()                \n                if (envTable.UseClassColor) then\n                    unitFrame.HealerTexture.vertexcolor = select (2, UnitClass (unitId))\n                else\n                    unitFrame.HealerTexture.vertexcolor = envTable.Color\n                end\n            end\n            \n            --regular indicator from plater\n            if (envTable.ShowRegularIndicator) then\n                Plater.ShowIndicator (unitFrame, envTable.Texture, envTable.Width, envTable.Height) \n            end\n            \n        end\n    end\n    \nend",
    },
    ["Time"] = 1671797898,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\media\\cross_64",
    ["Enabled"] = true,
    ["Revision"] = 127,
    ["Options"] = {
    },
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Add a cross icon into the nameplate of healers. Must have Details! Damage Meter installed.",
    ["Prio"] = 99,
    ["version"] = -1,
    ["PlaterCore"] = 1,
    ["Name"] = "Healer Indicator",
    ["semver"] = "",
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Updated",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    envTable.CanShowPowerBarForUnit (unitFrame)  \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    envTable.ShowForFriendlyPlayers = false\n    envTable.ShowForFriendlyNpcs = false\n    --envTable.customFont = \"2002\"\n    envTable.customFontSize = 9\n    --envTable.customFontOutline = \"NONE\" -- \"OUTLINE\"\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side =3, --inside the healthbar, bottom side\n        x = 0, \n        y = -1,\n    }\n    \n    --power bar height\n    envTable.Height = 3\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = true\n    envTable.PercentTextAnchor = {\n        side = 9, --top right\n        x = 0,\n        y = 1,\n    }\n    \n    \n    unitFrame.powerBar.UpdatePower = function (self)\n       -- DF_CalcCpuUsage (\"Powerbar-UpdatePower\")\n        self.currentPower = UnitPower (self.displayedUnit, self.powerType)\n        local PixelUtil = PixelUtil or DFPixelUtil\n        PixelUtil.SetStatusBarValue (self, self.currentPower)\n        \n        if (self.Settings.ShowPercentText) then\n            --self.percentText:SetText (floor (self.currentPower / self.currentPowerMax * 100) .. \"%\")\n            self.percentText:SetText(Plater.FormatNumber(self.currentPower or 0))\n        end\n        --DF_CalcCpuUsage (\"Powerbar-UpdatePower\")\n    end\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        powerBar.Settings.ShowAlternatePower = true\n        powerBar:UpdatePowerInfo()\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, envTable.customFont or Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, envTable.customFontSize or Plater.GetConfig (unitFrame).percent_text_size - 2)\n            Plater.SetFontOutlineAndShadow (powerBar.percentText, envTable.customFontOutline or Plater.GetConfig (unitFrame).percent_text_outline or \"NONE\")\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n            --powerBar.percentText:SetTextColor(powerBar:GetColor())\n        else\n            powerBar.percentText:Hide()\n        end\n        \n        powerBar.border:Show()\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            return\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n                return\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\"and not unitFrame.IsNpcWithoutHealthBar and not unitFrame.PlayerCannotAttack) then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n                return\n            end\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"friendlyplayer\"and not unitFrame.IsFriendlyPlayerWithoutHealthBar) then\n            if (envTable.ShowForFriendlyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n                return\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"friendlynpc\" and not unitFrame.IsNpcWithoutHealthBar) then\n            if (envTable.ShowForFrienldyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n                return\n            end\n        end\n        unitFrame.powerBar.Settings.ShowAlternatePower = false\n        --unitFrame.powerBar:SetUnit(nil)\n        --unitFrame.powerBar:Hide()\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1692594881,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    ["Enabled"] = true,
    ["arena"] = true,
    ["pvp"] = true,
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface/Addons/Plater/Media/fire_64",
    ["Enabled"] = true,
    ["Revision"] = 378,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Show power bar for some units.",
    ["Prio"] = 99,
    ["Name"] = "Power Bar - Mod",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    \n    function modTable.UpdateColor (unitFrame)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        if  InCombatLockdown() and unitFrame.InCombat then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n                -- envTable.IfAggroAbnormal(unitFrame, unitId)\n                return\n            elseif  unitFrame.namePlateThreatIsAnotherTanking and Plater.PlayerIsTank then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.Anothertank.colors.aggro)\n                --envTable.IfAggroAbnormal(unitFrame, unitId)\n            else\n                \n                return\n            end\n        end\n        if modTable.config.scriptsonly then\n            local color = Plater.GetNpcColor(unitFrame)\n            if (color) then \n                Plater.SetNameplateColor (unitFrame, color)\n            end\n        end\n    end\nend\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame)\nend",
    },
    ["Time"] = 1695022505,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["role"] = {
    },
    ["affix"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
    ["Enabled"] = true,
    ["Revision"] = 1011,
    ["semver"] = "",
    ["Author"] = "Viash-Thrall",
    ["Desc"] = "Overrides NPC Color with the Threat Color if you pull threat as dps or lose threat as tank",
    ["Prio"] = 1,
    ["Name"] = "NPC Color Override",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Key"] = "scriptsonly",
    ["Value"] = false,
    ["Name"] = "Set NPC Color through this Mod",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "IF you have selected \"Scripts Only\" in your NPC Color settings, select this box to make the mod do that for you.",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    --> show the tooltip in the aura icon\n    function Plater.OnEnterAura (iconFrame) --private\n        PlaterNamePlateAuraTooltip:SetOwner (iconFrame, \"ANCHOR_CURSOR\")\n        if PlaterNamePlateAuraTooltip.SetUnitBuffByAuraInstanceID then\n            if(iconFrame.spellId and not iconFrame.auraInstanceID) then \n                PlaterNamePlateAuraTooltip:SetSpellByID(iconFrame.spellId)\n            elseif(iconFrame.auraInstanceID) then \n                local setFunction = iconFrame.isBuff and NamePlateTooltip.SetUnitBuffByAuraInstanceID or NamePlateTooltip.SetUnitDebuffByAuraInstanceID\n                setFunction(PlaterNamePlateAuraTooltip, iconFrame:GetParent().unit, iconFrame:GetID(), iconFrame.filter)\n            end \n        else\n            PlaterNamePlateAuraTooltip:SetUnitAura (iconFrame:GetParent().unit, iconFrame:GetID(), iconFrame.filter)\n        end\n        --PlaterNamePlateAuraTooltip:AddLine(\"\\n\")\n        --PlaterNamePlateAuraTooltip:AddDoubleLine(NORMAL_FONT_COLOR_CODE .. \"ID: \" .. FONT_COLOR_CODE_CLOSE, HIGHLIGHT_FONT_COLOR_CODE .. iconFrame.spellId .. FONT_COLOR_CODE_CLOSE)\n        PlaterNamePlateAuraTooltip:AddLine(NORMAL_FONT_COLOR_CODE .. \"ID: \" .. FONT_COLOR_CODE_CLOSE.. HIGHLIGHT_FONT_COLOR_CODE .. iconFrame.spellId .. FONT_COLOR_CODE_CLOSE)\n        PlaterNamePlateAuraTooltip:ApplyOwnBackdrop()\n        iconFrame.UpdateTooltip = Plater.OnEnterAura\n        PlaterNamePlateAuraTooltip:Show()\n    end \nend",
    },
    ["Time"] = 1697188841,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "https://wago.io/1cqMkcUYH/5",
    ["Icon"] = 134331,
    ["Enabled"] = true,
    ["Revision"] = 56,
    ["semver"] = "1.0.4",
    ["Author"] = "Iriani-Thrall",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "Aura-Tooltip-Mod",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = 5,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Player Logon"] = "function (modTable)\n    --> show the tooltip in the aura icon\n    function Plater.OnEnterAura (iconFrame) --private\n        PlaterNamePlateAuraTooltip:SetOwner (iconFrame, \"ANCHOR_LEFT\")\n   if PlaterNamePlateAuraTooltip.SetUnitBuffByAuraInstanceID then\n            if(iconFrame.spellId and not iconFrame.auraInstanceID) then \n                PlaterNamePlateAuraTooltip:SetSpellByID(iconFrame.spellId)\n            elseif(iconFrame.auraInstanceID) then \n                local setFunction = iconFrame.isBuff and NamePlateTooltip.SetUnitBuffByAuraInstanceID or NamePlateTooltip.SetUnitDebuffByAuraInstanceID\n                setFunction(PlaterNamePlateAuraTooltip, iconFrame:GetParent().unit, iconFrame:GetID(), iconFrame.filter)\n            end \n        else\n            PlaterNamePlateAuraTooltip:SetUnitAura (iconFrame:GetParent().unit, iconFrame:GetID(), iconFrame.filter)\n        end\n        --PlaterNamePlateAuraTooltip:AddLine(\"\\n\")\n        --PlaterNamePlateAuraTooltip:AddDoubleLine(NORMAL_FONT_COLOR_CODE .. \"ID: \" .. FONT_COLOR_CODE_CLOSE, HIGHLIGHT_FONT_COLOR_CODE .. iconFrame.spellId .. FONT_COLOR_CODE_CLOSE)\n        PlaterNamePlateAuraTooltip:AddLine(NORMAL_FONT_COLOR_CODE .. \"ID: \" .. FONT_COLOR_CODE_CLOSE.. HIGHLIGHT_FONT_COLOR_CODE .. iconFrame.spellId .. FONT_COLOR_CODE_CLOSE)\n        PlaterNamePlateAuraTooltip:ApplyOwnBackdrop()\n        iconFrame.UpdateTooltip = Plater.OnEnterAura\n        PlaterNamePlateAuraTooltip:Show()\n    end \nend",
    },
    ["Time"] = 1671797941,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "https://wago.io/ghhKszFri/5",
    ["Icon"] = 134331,
    ["Enabled"] = true,
    ["Revision"] = 15,
    ["semver"] = "1.0.4",
    ["Author"] = "Viashi-Antonidas",
    ["Desc"] = "Adds the aura ID to the tooltip. (Buff Settings -> Show Tooltip needs to be enabled.)",
    ["Prio"] = 99,
    ["Name"] = "Aura-ID in Tooltip",
    ["PlaterCore"] = 1,
    ["version"] = 5,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Created",
    ["UID"] = "0x61c2355223d60a",
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (not unitFrame.ComboPointFrame) then\n        unitFrame.ComboPointFrame = modTable.CreateComboPointHostFrame(unitFrame)\n    end\nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.ComboPointFrame:Update()\nend\n\n\n",
    ["Initialization"] = "function (modTable)\n    local options = {\n        width = 16,\n        height = 16,\n        scale = 2,\n        fontName = \"Fonts\\\\ARIALN.ttf\",\n        fontSize = 16,\n        fontFlags = \"OUTLINE\",\n        frameLevel = 1000,\n        frameStrata = \"high\"\n    }\n    \n    local _shouldShow = function(unitId)\n        if (not UnitExists(unitId)) then\n            return false\n        end\n        local isTarget = UnitIsUnit(unitId, \"target\")\n        local canAttack = UnitCanAttack(\"player\", \"target\")\n        local hasComboPoints = GetComboPoints(\"player\", unitId) > 0\n        return (isTarget and canAttack) or hasComboPoints\n    end\n    \n    local _getTextColorPrefix = function(numComboPoints)\n        numComboPoints = numComboPoints and numComboPoints or 0\n        local color = \"|cff\"\n        if (numComboPoints == 5) then return color .. \"ff0000\" end\n        if (numComboPoints >= 3) then return color .. \"ffff00\" end\n        return color .. \"00ff00\"\n    end\n    \n    function modTable.CreateComboPointHostFrame(unitFrame)\n        local hostFrame = CreateFrame(\"frame\", unitFrame:GetName() .. \"ComboPoint\", unitFrame)\n        \n        hostFrame.lastUpdate = 0\n        hostFrame.numComboPoints = 0\n        \n        hostFrame.textFrame = hostFrame:CreateFontString(hostFrame:GetName() .. \"Text\", \"ARTWORK\")\n        hostFrame.textFrame:SetFont(options.fontName, options.fontSize, options.fontFlags)\n        hostFrame.textFrame:SetPoint(\"CENTER\", 0, 0)\n        \n        hostFrame:SetScale(options.scale)\n        hostFrame:SetWidth(options.width)\n        hostFrame:SetHeight(options.height)\n        hostFrame:SetFrameLevel(options.frameLevel)\n        hostFrame:SetFrameStrata(options.frameStrata)\n        hostFrame:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", -12, 10)\n        \n        function hostFrame:UpdateComboPoints()\n            self.numComboPoints = GetComboPoints(\"player\", unitFrame.namePlateUnitToken)\n            local colorPrefix = _getTextColorPrefix(self.numComboPoints)\n            self.textFrame:SetText(colorPrefix .. tostring(self.numComboPoints))\n            self.lastUpdate = GetTime()\n        end\n        \n        function hostFrame:Update()\n            local unit = unitFrame.namePlateUnitToken\n            if (_shouldShow(unit)) then\n                self:Show()\n                self:UpdateComboPoints()\n            else\n                self:Hide()\n            end\n        end\n        \n        -- Events \n        function hostFrame:PLAYER_TARGET_CHANGED()\n            self:Update()\n        end\n        \n        function hostFrame:ZONE_CHANGED()\n            self:Update()\n        end\n        \n        function hostFrame:ZONE_CHANGED_NEW_AREA()\n            self:Update()\n        end\n        \n        function hostFrame:UNIT_POWER_FREQUENT(_, powerType)\n            if (powerType == \"COMBO_POINTS\") then\n                self:Update()\n            end\n        end\n        \n        hostFrame:SetScript(\"OnEvent\", function(self, event, ...)\n                self[event](self, ...)\n        end)\n        \n        hostFrame:RegisterEvent(\"PLAYER_TARGET_CHANGED\")\n        hostFrame:RegisterEvent(\"ZONE_CHANGED\")\n        hostFrame:RegisterEvent(\"ZONE_CHANGED_NEW_AREA\")\n        hostFrame:RegisterUnitEvent(\"UNIT_POWER_FREQUENT\", \"player\")\n        \n        return hostFrame\n    end\nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (not unitFrame.ComboPointFrame) then\n        unitFrame.ComboPointFrame = modTable.CreateComboPointHostFrame(unitFrame)\n    end\nend",
    },
    ["Time"] = 1695021962,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    ["Enabled"] = true,
    ["DRUID"] = true,
    ["ROGUE"] = true,
    },
    ["map_ids"] = {
    },
    ["role"] = {
    ["DAMAGER"] = true,
    ["Enabled"] = true,
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    ["103"] = true,
    ["Enabled"] = true,
    },
    },
    ["url"] = "",
    ["Icon"] = 136189,
    ["Enabled"] = true,
    ["Revision"] = 565,
    ["semver"] = "",
    ["Author"] = "Izimode-Azralon",
    ["Desc"] = "Show combo point number on top left of nameplate",
    ["Prio"] = 99,
    ["Name"] = "Combo Points Number",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 1\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 100\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --auras should grow to right or left?\n    envTable.GrowDirection = \"right\" --insert 'left' to grow to the left side\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [ \"痛苦无常\" ] = 50,\n        [ \"腐蚀术\" ] = 40,\n        [ \"痛苦诅咒\" ] = 30,\n        [ \"鬼影缠身\" ] = 20,\n        [ \"暗影之拥\" ] = 10,\n        [ \"强化暗影箭\" ] = 10,\n        \n        \n        \n        \n        \n    }\n    \nend \n\n\n\n\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
    },
    ["Time"] = 1671797886,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    ["WARLOCK"] = true,
    ["Enabled"] = true,
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
    ["Enabled"] = true,
    ["Revision"] = 283,
    ["semver"] = "",
    ["Author"] = "Ditador-Azralon",
    ["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
    ["Prio"] = 98,
    ["Name"] = "[Warlock] Aura Reorder",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Constructor",
    ["UID"] = "0x637d4e5c221a399",
    ["Hooks"] = {
    ["Load Screen"] = "function (modTable)\n    --print(\"load screen\")\n    if(modTable.IsInDalaran and (GetRealZoneText() ~= \"达拉然\" or GetSubZoneText() == \"Circle of Wills\")) then\n        Plater.SafeSetCVar (\"nameplateShowEnemies\", 1)\n        modTable.IsInDalaran = false;\n        --print(modTable.IsInDalaran);\n    end\n    --Check for dalaran but not in sewers for duels\n    if (GetRealZoneText() == \"达拉然\" and GetSubZoneText() ~= \"Circle of Wills\" and modTable.npHook) then\n        Plater.SafeSetCVar (\"nameplateShowEnemies\", 0)\n        modTable.IsInDalaran = true;\n        --print(modTable.IsInDalaran);\n    end\nend\n\n\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Hook into the nameplates for zone change detection to work.\n    if (not modTable.npHook) then\n        modTable.npHook  = true;\n        --print(\"nameplates hooked\");\n        if (GetRealZoneText() == \"达拉然\" and GetSubZoneText() ~= \"Circle of Wills\" ) then\n            Plater.SafeSetCVar (\"nameplateShowEnemies\", 0)\n            modTable.IsInDalaran = true;\n            --print(modTable.IsInDalaran);\n        end\n    end\nend\n\n--Dalaran",
    ["Zone Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Check for dalaran but not in sewers for duels\n    if (modTable.IsInDalaran and (GetRealZoneText() ~= \"达拉然\" or GetSubZoneText() == \"Circle of Wills\") ) then\n        Plater.SafeSetCVar (\"nameplateShowEnemies\", 1)\n        modTable.IsInDalaran = false;\n        --print(modTable.IsInDalaran);\n    end\n    if (GetRealZoneText() == \"达拉然\" and GetSubZoneText() ~= \"Circle of Wills\" and not modTable.IsInDalaran) then\n        Plater.SafeSetCVar (\"nameplateShowEnemies\", 0)\n        modTable.IsInDalaran = true;\n        --print(modTable.IsInDalaran);\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Player Logon"] = "function (modTable)\n    --The zone change detection doesn't work till it has seen one nameplate, which is why we have to enable nameplates on first load.\n    modTable.npHook = false;\n    Plater.SafeSetCVar (\"nameplateShowEnemies\", 1)\n    -- print(\"login\");\nend\n\n\n",
    },
    ["Time"] = 1670568880,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "237509",
    ["Enabled"] = true,
    ["Revision"] = 175,
    ["semver"] = "",
    ["Author"] = "Bromi-Giantstalker",
    ["Desc"] = "Toggles enemy nameplates off in Dalaran and on anywhere else. Checks done during zone change or loading screen.",
    ["Prio"] = 99,
    ["Name"] = "Dalaran Enemy Nameplates",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Added",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local MAGE= [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\MAGE]]  \n    local HUNTER = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\HUNTER]]  \n    local WARLOCK = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\WARLOCK]] \n    local PALADIN = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\PALADIN]] \n    local PRIEST = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\PRIEST]]\n    local ROGUE = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\ROGUE]]\n    local DRUID = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\DRUID]]\n    local SHAMAN = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\SHAMAN]]\n    local WARRIOR = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\WARRIOR]]\n    local DEATHKNIGHT = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\DEATHKNIGHT]]\n    local MONK = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\MONK]]\n    local DEMONHUNTER = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\DEMONHUNTER]]\n    local EVOKER = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\EVOKER]]\n    \n    unitFrame.CLASSTexture = unitFrame.CLASSTexture or unitFrame:CreateTexture(nil, \"background\")         \n    unitFrame. CLASSTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, 28)  \n    unitFrame. CLASSTexture:SetSize(22,22)\n    \n    if (unitFrame.ActorType == \"friendlyplayer\") then\n        \n        unitFrame.CLASSTexture:Show()\n        local _, unitClass = UnitClass (unitFrame.unit) \n        if (unitClass==\"ROGUE\") then  \n            unitFrame.CLASSTexture:SetTexture(ROGUE)\n        elseif (unitClass==\"HUNTER\") then  \n            unitFrame.CLASSTexture:SetTexture(HUNTER)\n        elseif (unitClass==\"WARLOCK\") then  \n            unitFrame.CLASSTexture:SetTexture(WARLOCK)\n        elseif (unitClass==\"PRIEST\") then  \n            unitFrame.CLASSTexture:SetTexture(PRIEST)\n        elseif (unitClass==\"PALADIN\") then  \n            unitFrame.CLASSTexture:SetTexture(PALADIN)\n        elseif (unitClass==\"MAGE\") then  \n            unitFrame.CLASSTexture:SetTexture(MAGE)\n        elseif (unitClass==\"DRUID\") then  \n            unitFrame.CLASSTexture:SetTexture(DRUID)\n        elseif (unitClass==\"SHAMAN\") then  \n            unitFrame.CLASSTexture:SetTexture(SHAMAN)\n        elseif (unitClass==\"WARRIOR\") then  \n            unitFrame.CLASSTexture:SetTexture(WARRIOR)\n        elseif (unitClass==\"DEATHKNIGHT\") then  \n            unitFrame.CLASSTexture:SetTexture(DEATHKNIGHT)\n        elseif (unitClass==\"MONK\") then  \n            unitFrame.CLASSTexture:SetTexture(MONK)\n        elseif (unitClass==\"DEMONHUNTER\") then  \n            unitFrame.CLASSTexture:SetTexture(DEMONHUNTER)\n        elseif (unitClass==\"EVOKER\") then  \n            unitFrame.CLASSTexture:SetTexture(EVOKER)\n        end        \n    else\n        unitFrame.CLASSTexture:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1670568964,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["spec"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["class"] = {
    },
    ["affix"] = {
    },
    ["encounter_ids"] = {
    },
    ["race"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 134328,
    ["Enabled"] = true,
    ["Revision"] = 2725,
    ["Options"] = {
    },
    ["Author"] = "호불-아즈샤라",
    ["Desc"] = "Set size and anchor of raidmark in name-only plates",
    ["Prio"] = 99,
    ["Name"] = "Class Icon",
    ["PlaterCore"] = 1,
    ["HooksTemp"] = {
    },
    ["semver"] = "",
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Added",
    ["UID"] = "0x63dc84756b1835",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- envTable.npctable = {\n    -- [3123] = true,\n    \n    --  }\n    function envTable.UpdateNameplateAlpha (unitFrame) \n        local npc1 = {\n            [32955]=true,\n            [33488]=true,\n            [32926]=true,\n            [32938]=true,\n            [33346]=true,\n            [33343]=true,\n            \n            [33346]=true,\n            [34004]=true,\n            [33715]=true,\n            [33755]=true,\n            [34134]=true,\n            [33430]=true,\n            [33525]=true,\n            [34057]=true,\n            [33823]=true,\n            [33819]=true, \n            [34192]=true,\n            [33329]=true, \n            [33228]=true, \n            [33836]=true,\n            [33983]=true,\n            [33524]=true, \n            [33168]=true, \n            [32876]=true,\n            [33846]=true,\n            [33824]=true,\n            [34147]=true,\n            [33890]=true,\n            --[3098]=true, \n            \n            --TOC\n            [34813]=true,\n            [34825]=true,\n            [34825]=true,\n            [34800]=true,\n            \n            --BETA\n            [28619]=true,\n            [205999]=true,\n            [205998]=true,\n            [205997]=true,\n            [198706]=true,\n            \n            --ICC\n            [36619]=true,\n            [37863]=true,\n            [38454]=true,\n            [36980]=true,\n            [36633]=true,\n        }\n        \n        local npc2 = {\n            ---NAXX\n            [16028]=true,\n            [15931]=true,\n            [15954]=true,\n            [15936]=true,\n            [16011]=true,\n            [15956]=true,\n            [15953]=true,\n            [15952]=true,\n            [15932]=true,\n            [15928]=true,\n            [15929]=true,\n            [15930]=true,\n            [16061]=true,\n            [16060]=true,\n            [16065]=true,\n            [30549]=true,\n            [15989]=true,\n            [15990]=true,\n            \n            ---HYS\n            [28860]=true,\n            [30452]=true,\n            [30451]=true,\n            [30449]=true,\n            \n            ---ADUER\n            [33113]=true,\n            [33118]=true,\n            [33186]=true,\n            [33293]=true,\n            [32857]=true,\n            [32867]=true,\n            [32927]=true,\n            [32930]=true,\n            [33515]=true,\n            [32845]=true,\n            [32865]=true,\n            [32906]=true,\n            [33670]=true,\n            [33432]=true,\n            [33350]=true,\n            [33651]=true,\n            [33271]=true,\n            [33890]=true,\n            [33288]=true,\n            [32871]=true,\n            \n            --ICC\n            [36612]=true,\n            [36855]=true,\n            [36948]=true,\n            [36939]=true,\n            [37813]=true,\n            [36626]=true,\n            [36627]=true,\n            [36678]=true,\n            [37972]=true,\n            [37973]=true,\n            [37970]=true,\n            [37955]=true,\n            [36853]=true,\n            [36597]=true,\n        }\n        \n        local npc3 = {\n            [33346]=true,\n            [34004]=true,\n            [33715]=true,\n            [33755]=true,\n            [34134]=true,\n            [33430]=true,\n            [33525]=true,\n            [34057]=true,\n            [33823]=true,\n            [33819]=true, \n            [34192]=true,\n            [33329]=true, \n            [33228]=true, \n            [33836]=true,\n            [33983]=true,\n            [33524]=true, \n            [33168]=true, \n            --[3098]=true, \n            \n            --TOC\n            [34813]=true,\n            [34825]=true,\n            [34825]=true,\n            [34800]=true,\n            \n            --BETA\n            [28619]=true,\n            [205999]=true,\n            [205998]=true,\n            [205997]=true,\n            [198706]=true,\n            \n            --ICC\n            [36619]=true,\n            [37116]=true,\n            [37117]=true,\n            [38508]=true,\n            [37562]=true,\n            [36791]=true,\n            [36633]=true,\n            \n        }\n        local npc4 = {\n            [32876]=true,\n            [33846]=true,\n            [33824]=true,\n            \n            --ICC\n            [36899]=true,\n            [38454]=true,\n        }\n        local npc5 = {\n            --ICC\n            [37697]=true,\n            \n        }\n        -- local  npctable =envTable.npctable\n        --envTable.npcID = Plater.GetNpcIDFromGUID\n        if npc1[unitFrame.namePlateNpcId] then\n            \n            unitFrame:SetAlpha (1)\n        end\n        \n        if npc2[unitFrame.namePlateNpcId] then\n            Plater.SetNameplateScale (unitFrame,1.2)\n        end\n        \n        if npc3[unitFrame.namePlateNpcId] then\n            Plater.SetNameplateColor (unitFrame, modTable.config.MNPC)\n        end\n        \n        if npc4[unitFrame.namePlateNpcId] then\n            Plater.SetNameplateColor (unitFrame, modTable.config.MNPC2)\n        end\n        \n        if npc5[unitFrame.namePlateNpcId] then\n            Plater.SetNameplateColor (unitFrame, modTable.config.MNPC3)\n        end\n        \n    end\nend",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateNameplateAlpha (unitFrame) \n    \nend\n\n\n",
    },
    ["Time"] = 1697708760,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["role"] = {
    },
    ["spec"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 135961,
    ["Enabled"] = true,
    ["Revision"] = 398,
    ["semver"] = "",
    ["Author"] = "七盏星夜酒-世界之樹",
    ["Desc"] = "NPC",
    ["Prio"] = 50,
    ["Name"] = "Major cities NPC",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 1,
    ["Name"] = "重点集火怪颜色",
    ["Value"] = {
    1,
    0,
    0.52549022436142,
    1,
    },
    ["Key"] = "MNPC",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "注意提防怪颜色",
    ["Value"] = {
    1,
    0.52941179275513,
    0,
    1,
    },
    ["Key"] = "MNPC2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Key"] = "MNPC3",
    ["Value"] = {
    0,
    1,
    0.0784313753247261,
    1,
    },
    ["Name"] = "教授绿软",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Constructor",
    ["UID"] = "0x63b4994b2560fec",
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitGUID, unitFrame, envTable)\n    if  ((unitFrame.ActorType == \"friendlynpc\"or unitFrame.ActorType == \"enemynpc\") and Plater.IsUnitPet (unitFrame)) then\n        if (unitFrame.namePlateIsTarget) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n        end\n    end\nend",
    ["Nameplate Updated"] = "function (self, unitGUID, unitFrame, envTable)\n    if  ((unitFrame.ActorType == \"friendlynpc\"or unitFrame.ActorType == \"enemynpc\") and Plater.IsUnitPet (unitFrame)) then\n        if (unitFrame.namePlateIsTarget) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n        end\n    end\nend",
    ["Target Changed"] = "function (self, unitGUID, unitFrame, envTable)\n    if  ((unitFrame.ActorType == \"friendlynpc\"or unitFrame.ActorType == \"enemynpc\") and Plater.IsUnitPet (unitFrame)) then\n        if (unitFrame.namePlateIsTarget) then\n            unitFrame.healthBar:SetAlpha (envTable.AlphaTarget)\n        else\n            unitFrame.healthBar:SetAlpha (envTable.AlphaIsNotTarget)\n        end\n    end\nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.ShowTargeted = true;\n    envTable.AlphaTarget = 1.0 -- Set alpha for targetted pets\n    envTable.AlphaIsNotTarget = 0.5 -- Set alpha for non-targetted pets\nend",
    },
    ["Time"] = 1672903682,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    ["Enabled"] = true,
    ["arena"] = true,
    ["pvp"] = true,
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136047,
    ["Enabled"] = true,
    ["Revision"] = 176,
    ["semver"] = "",
    ["Author"] = "Vurtall-Kazzak",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "Opacity by Type (Pet)",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    ["SPpixelth"] = 2,
    ["SPglownum"] = 2,
    ["SPpixelborder"] = true,
    ["SPglowcolor"] = {
    0,
    0.54509806632996,
    1,
    1,
    },
    ["SPglowcolor2"] = {
    1,
    0.10588236153126,
    0,
    1,
    },
    ["SPglowfreq"] = 0.5,
    ["SPglowxoff"] = 1,
    ["SPantsscale"] = 0.99999994039536,
    ["SPglowyoff"] = 1,
    },
    ["LastHookEdited"] = "",
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    --r,g,b=51/255, 153/255, 1\n    local options1 = {\n        glowType = \"button\",\n        color = modTable.config.SPglowcolor,\n        \n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options2 = {\n        glowType = \"button\",--\"pixel\",\n        \n        color = modTable.config.SPglowcolor,\n        \n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        color = modTable.config.SPglowcolor,\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    local options4 = {\n        glowType = \"button\",--\"pixel\",\n        \n        color = modTable.config.SPglowcolor2,\n        \n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    modTable.option2=  options2\n    modTable.option4=  options4\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    -- local color = \"red\"--modTable.config.SPglowcolor\n    \n    -- local MarkPlaceholder = unitFrame.PlaterRaidTargetFrame\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            \n            -- if auraIcon:IsShown() then\n            if  (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                if ( auraIcon.AuraType == \"magic\") then\n                    Plater.StartGlow(auraIcon, nil, modTable.option2)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -1, 1)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", 1, -1)\n                elseif (auraIcon.AuraType == \"enrage\" ) then\n                    Plater.StartGlow(auraIcon, nil, modTable.option4)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -1, 1)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", 1, -1)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                -- end\n                \n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if  (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                if ( auraIcon.AuraType == \"magic\") then\n                    Plater.StartGlow(auraIcon, nil, modTable.option2)\n                elseif (auraIcon.AuraType == \"enrage\" ) then\n                    Plater.StartGlow(auraIcon, nil, modTable.option4)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                -- end\n                \n            end\n        end\n    end\n    \nend",
    },
    ["Time"] = 1680954808,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132096,
    ["Enabled"] = true,
    ["Revision"] = 1644,
    ["semver"] = "",
    ["Author"] = "Viashi-Antonidas",
    ["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
    ["Prio"] = 99,
    ["Name"] = "Steal/Purge Aura Glow[FIX]",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Common Options",
    ["Name"] = "Common Options",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 3,
    ["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
    ["Min"] = 1,
    ["Key"] = "SPglownum",
    ["Value"] = 2,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Glow Type",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2,
    ["Desc"] = "Set to negative to inverse direction of rotation",
    ["Min"] = -2,
    ["Key"] = "SPglowfreq",
    ["Value"] = 0.5,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Glow Frequency",
    },
    {
    ["Type"] = 1,
    ["Key"] = "SPglowcolor",
    ["Value"] = {
    0,
    0.545098066329956,
    1,
    1,
    },
    ["Name"] = "Glow Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Set glow color",
    },
    {
    ["Type"] = 1,
    ["Key"] = "SPglowcolor2",
    ["Value"] = {
    1,
    0.1058823615312576,
    0,
    1,
    },
    ["Name"] = "Glow Color2",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "Blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Options for Pixel & Ants Glow",
    ["Name"] = "Options for Pixel & Ants Glow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 16,
    ["Desc"] = "Set number of lines",
    ["Min"] = 1,
    ["Key"] = "SPglowparticle",
    ["Value"] = 6,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Number of Particles",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Offset of glow relative to region border",
    ["Min"] = -10,
    ["Key"] = "SPglowxoff",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "X-Offset",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Offset of glow relative to region border",
    ["Min"] = -10,
    ["Key"] = "SPglowyoff",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Y-Offset",
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "Blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Options for Pixel Glow",
    ["Name"] = "Options for Pixel Glow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "SPpixelborder",
    ["Value"] = true,
    ["Name"] = "Pixel Add Border",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Enable to true to create border under lines",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set pixel line length",
    ["Min"] = 0.01,
    ["Key"] = "SPpixellength",
    ["Value"] = 6,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Pixel Line Length",
    },
    {
    ["Type"] = 2,
    ["Max"] = 10,
    ["Desc"] = "Set pixel line thickness",
    ["Min"] = 0.01,
    ["Key"] = "SPpixelth",
    ["Value"] = 2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Pixel Line Thickness",
    },
    {
    ["Type"] = 6,
    ["Key"] = "",
    ["Value"] = 0,
    ["Name"] = "Blank",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Options for Ants Glow",
    ["Name"] = "Options for Ants Glow",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 2.5,
    ["Desc"] = "Set ants glow scale",
    ["Min"] = 0.01,
    ["Key"] = "SPantsscale",
    ["Value"] = 1,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "Ants Glow Scale",
    },
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Updated",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    modTable.auramodifier(unitFrame)\n    \nend",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    modTable.auramodifier(unitFrame)\n    \nend",
    ["Initialization"] = "function (modTable)\n    function modTable.auramodifier(unitFrame)\n        local size = modTable.config.auraborderThickness\n        local size2 = modTable.config.auraborderThickness2\n        local profile = Plater.db.profile\n        \n        for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n            if (auraIcon:IsShown()) then\n                \n                local width = ((auraIcon:GetWidth() > profile.aura_width) and auraIcon:GetWidth()) or profile.aura_width\n                local height = ((auraIcon:GetHeight() > profile.aura_height) and auraIcon:GetHeight()) or profile.aura_height\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                if (r~=0 or g~=0 or b~=0) then\n                    auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                    \n                    auraIcon.PixelPerfectBorder:SetVertexColor (1,0.8,0.2)\n                    --auraIcon.PixelPerfectBorder:SetVertexColor (red, green, blue)\n                end \n                auraIcon.Border:Hide()\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size2, size2, size2, size2)\n                auraIcon.PixelPerfectBorder:UpdateSizes()\n                \n                if unitFrame.IsSelf then\n                    if modTable.config.PAFCustom then\n                        local Anchor1 = {\n                            side = modTable.config.PAFanchor, \n                            x =  modTable.config.PAFxoff, \n                            y = modTable.config.PAFyoff,\n                        }\n                        Plater.SetAnchor (unitFrame.BuffFrame, Anchor1, unitFrame.healthBar)\n                    end\n                    Plater:SetFontSize(auraIcon.TimerText, modTable.config.PAFTimerSize)\n                    Plater:SetFontSize(auraIcon.StackText, modTable.config.PAFStackSize)\n                    width = profile.aura_width_personal\n                    height = profile.aura_height_personal\n                else\n                    if modTable.config.colorbytime then\n                        local colorInfo = {1,1,1,1}\n                        \n                        if auraIcon.Duration >= modTable.config.durationThreshold then\n                            local perc = (auraIcon.RemainingTime) / auraIcon.Duration\n                            if modTable.config.greenTimer then\n                                if (perc >= 0.3) then\n                                    colorInfo = {0,1,0,1};\n                                elseif (perc >= 0.25) then\n                                    local r = 6 - (20 * perc)\n                                    colorInfo = {r,1,0,1};\n                                elseif (perc >= 0.1) then\n                                    local g = (perc - 0.1) * 10\n                                    colorInfo = {1,g,0,1};\n                                else\n                                    colorInfo = {1,0,0,1};\n                                end  \n                            else\n                                if (perc >= 0.3) then\n                                    colorInfo = {1,1,1,1};\n                                elseif (perc >= 0.25) then\n                                    local b = (20 * perc) - 5 \n                                    colorInfo = {1,1,b,1};\n                                elseif (perc >= 0.1) then\n                                    local g = (perc - 0.1) * 10\n                                    colorInfo = {1,g,0,1};\n                                else\n                                    colorInfo = {1,0,0,1};\n                                end\n                            end\n                        end\n                        Plater:SetFontColor (auraIcon.TimerText, unpack(colorInfo))\n                    end\n                end     \n                auraIcon:SetSize(width - (size / 2), height - (size / 2))\n                auraIcon.PixelPerfectBorder:UpdateSizes()            \n                auraIcon.Icon:ClearAllPoints()\n                auraIcon.Icon:SetAllPoints()\n            end\n        end\n        \n        for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n            if (auraIcon:IsShown()) then\n                \n                local width = ((auraIcon:GetWidth() > profile.aura_width2) and auraIcon:GetWidth()) or profile.aura_width2\n                local height = ((auraIcon:GetHeight() > profile.aura_height2) and auraIcon:GetHeight()) or profile.aura_height2\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                if (r~=0 or g~=0 or b~=0 ) then\n                    \n                    auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                    auraIcon.PixelPerfectBorder:SetVertexColor (r, g,b)\n                    \n                end \n                auraIcon.Border:Hide()\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                \n                if unitFrame.IsSelf then\n                    if modTable.config.PAFCustom then\n                        local Anchor2 = {\n                            side =  modTable.config.PAF2anchor, \n                            x = modTable.config.PAF2xoff, \n                            y = modTable.config.PAF2yoff,\n                        }\n                        Plater.SetAnchor (unitFrame.BuffFrame2, Anchor2, unitFrame.healthBar)\n                    end\n                    if g == 0 and b == 0 then\n                        auraIcon.PixelPerfectBorder:SetVertexColor (0, 1, 0)\n                    end\n                    Plater:SetFontSize(auraIcon.TimerText, modTable.config.PAFTimerSize)\n                    Plater:SetFontSize(auraIcon.StackText, modTable.config.PAFStackSize)\n                    width = profile.aura_width_personal\n                    height = profile.aura_height_personal\n                end\n                \n                auraIcon:SetSize(width - (size / 2), height - (size / 2))\n                auraIcon.PixelPerfectBorder:UpdateSizes()            \n                auraIcon.Icon:ClearAllPoints()\n                auraIcon.Icon:SetAllPoints()\n            end\n        end    \n    end\nend",
    ["Player Logon"] = "function (modTable)\n    \n    -- Plater.OnEnterAura = function(iconFrame)\n    --  local Tooltip = PlaterNamePlateAuraTooltip\n    -- local offset = -Tooltip:GetHeight()/4\n    --  Tooltip:SetOwner (iconFrame, \"ANCHOR_RIGHT\", offset, offset)\n    -- Tooltip:SetUnitAura (iconFrame:GetParent().unit, iconFrame:GetID(), iconFrame.filter)\n    --  iconFrame.UpdateTooltip = Plater.OnEnterAura\n    -- end\n    \n    Plater.FormatTime = function (s)\n        if s < 3 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%.d\"):format(s)\n        elseif s < 3600 then\n            if _G.LOCALE_koKR then\n                return (\"%d분\"):format(s/60%60)\n            else\n                return (\"%dm\"):format(s/60%60)\n            end\n        elseif s < 86400 then\n            if _G.LOCALE_koKR then\n                return (\"%d시간\"):format(s/(60*60))\n            else    \n                return (\"%dh\"):format(s/(60*60))\n            end\n        else\n            if _G.LOCALE_koKR then\n                return (\"%d일\"):format(s/86400)\n            else    \n                return (\"%dd\"):format(s/86400)\n            end\n        end\n    end\nend\n\n\n\n\n",
    },
    ["Time"] = 1682766427,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["affix"] = {
    },
    ["encounter_ids"] = {
    },
    ["role"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132096,
    ["Enabled"] = true,
    ["Revision"] = 2038,
    ["semver"] = "",
    ["Author"] = "????????-Illidan",
    ["Desc"] = "Modify aura borders and change Timer Color by time",
    ["Prio"] = 99,
    ["Name"] = "Aura Options [Pandemic]",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Basic Options",
    ["Value"] = "Basic Options",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set border thickness of aura icons",
    ["Min"] = 0,
    ["Name"] = "buff边框    ",
    ["Value"] = 1.2,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "auraborderThickness",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set border thickness of aura icons",
    ["Min"] = 0,
    ["Key"] = "auraborderThickness2",
    ["Value"] = 1,
    ["Name"] = "debuff边框    ",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Pandemic Text Color",
    ["Name"] = "Pandemic Text Color",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color by Time",
    ["Value"] = true,
    ["Key"] = "colorbytime",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Change color to White(Green) -> Yellow -> Orange - > Red based on pandemic.",
    },
    {
    ["Type"] = 2,
    ["Max"] = 120,
    ["Desc"] = "Set Threshold for auras not needed to be highlighted",
    ["Min"] = 0.01,
    ["Key"] = "durationThreshold",
    ["Value"] = 8,
    ["Name"] = "Coloring Threshold",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = true,
    },
    {
    ["Type"] = 4,
    ["Key"] = "greenTimer",
    ["Value"] = false,
    ["Name"] = "Green Timer Text",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Colored Timer text will set to green when it's above 30% of it's duration",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Key"] = "",
    ["Value"] = "Personal Aura Frames Options",
    ["Name"] = "Personal Aura Frames Options",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set timer text size at personal aura frame",
    ["Min"] = 1,
    ["Key"] = "PAFTimerSize",
    ["Value"] = 10,
    ["Fraction"] = false,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "PAF Timer Size",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set stack text size at personal aura frame",
    ["Min"] = 1,
    ["Name"] = "PAF Stack Size",
    ["Value"] = 9,
    ["Key"] = "PAFStackSize",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "PAFCustom",
    ["Value"] = true,
    ["Name"] = "Custom Anchor For PAF",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "When enabled, you can move aura frames at player resource bar by editing options below",
    },
    {
    ["Type"] = 2,
    ["Max"] = 8,
    ["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
    ["Min"] = 1,
    ["Name"] = "PAF Anchor",
    ["Value"] = 6,
    ["Key"] = "PAFanchor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set personal aura frame x-offset",
    ["Min"] = -100,
    ["Fraction"] = true,
    ["Value"] = 3,
    ["Name"] = "PAF X-Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "PAFxoff",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set personal aura frame y-offset",
    ["Min"] = -100,
    ["Fraction"] = true,
    ["Value"] = 0,
    ["Name"] = "PAF Y-Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "PAFyoff",
    },
    {
    ["Type"] = 2,
    ["Max"] = 8,
    ["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
    ["Min"] = 1,
    ["Key"] = "PAF2anchor",
    ["Value"] = 3,
    ["Name"] = "PAF2 Anchor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set personal aura frame 2 x-offset",
    ["Min"] = -100,
    ["Fraction"] = true,
    ["Value"] = 0,
    ["Name"] = "PAF2 X-Offset",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "PAF2xoff",
    },
    {
    ["Type"] = 2,
    ["Max"] = 100,
    ["Desc"] = "Set personal aura frame 2 y-offset",
    ["Min"] = -100,
    ["Key"] = "PAF2yoff",
    ["Value"] = -14,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Name"] = "PAF2 Y-Offset",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["LastHookEdited"] = "Cast Update",
    ["Hooks"] = {
    ["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not Plater.db.profile.castbar_target_show or not unitFrame.targetUnitID or not self:IsShown() then return end\n    \n    if (unitFrame.IsSelf or self.finished or self.failed) then\n        self.TargetName:Hide()    \n    elseif UnitExists(unitFrame.targetUnitID)  then\n        \n        self.TargetName:SetText(modTable.Color(unitFrame.targetUnitID))\n        self.TargetName:Show()\n        \n        \n    end\nend",
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not Plater.db.profile.castbar_target_show or not unitFrame.targetUnitID or not self:IsShown() then return end\n    \n    if (unitFrame.IsSelf or self.finished or self.failed) then\n        self.TargetName:Hide()    \n    elseif UnitExists(unitFrame.targetUnitID ) then\n        \n        self.TargetName:SetText(modTable.Color(unitFrame.targetUnitID))\n        self.TargetName:Show()\n        \n        \n    end\nend\n\n\n\n\n",
    ["Initialization"] = "function (modTable)\n    \n    local DecimalToHex = function(r,g,b)\n        return string.format(\"|cff%02x%02x%02x\", r*255, g*255, b*255)\n    end\n    \n    modTable.Color = function(unit)\n        \n        if not unit then return \"\" end\n        \n        local r,g,b = 1, 1, 1\n        \n        if GetPlayerInfoByGUID(UnitGUID(unit)) then\n            local icon = \"\"\n            local str = unit\n            \n            if UnitIsUnit(unit, \"player\") and modTable.config.targetIsPlayer then\n                r, g, b = 1, 0, 0    \n                if _G.LOCALE_koKR then\n                    str = \"당신!\"\n                else\n                    str = \">你<\"\n                end\n            else   \n                str = \"\"--select(1, UnitName(unit))\n                local class = select(2,GetPlayerInfoByGUID(UnitGUID(unit)))\n                if not class then return str end\n                local classcolor = RAID_CLASS_COLORS[class]\n                if not classcolor then return str end\n                \n                r, g, b = classcolor.r,classcolor.g,classcolor.b\n                if modTable.config.roleIcon then\n                    local role = UnitGroupRolesAssigned(unit)\n                    \n                    if role and (role == \"HEALER\" or role == \"TANK\") then\n                        icon = CreateTextureMarkup([[Interface\\LFGFrame\\UI-LFG-ICON-ROLES]], 256, 256, 0, 0, GetTexCoordsForRole(role))\n                    end\n                end\n            end  \n            \n            local classcolorhex = DecimalToHex(r,g,b)\n            if modTable.config.leftIcon then\n                return icon..classcolorhex..str..\"|r\"\n            else\n                return classcolorhex..str..\"|r\"..icon\n            end\n        else\n            if UnitIsEnemy(unit, \"player\") then\n                r, g, b = 1, 0.15, 0    \n            else\n                r, g, b= 0, 1, 0\n            end\n            local classcolorhex = DecimalToHex(r,g,b)\n            \n            return classcolorhex--..UnitName(unit)..\"|r\"\n        end\n    end\nend",
    ["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not Plater.db.profile.castbar_target_show or not unitFrame.targetUnitID or not self:IsShown() then return end\n    \n    if (unitFrame.IsSelf or self.finished or self.failed) then\n        self.TargetName:Hide()    \n    elseif UnitExists(unitFrame.targetUnitID ) then\n        \n        self.TargetName:SetText(modTable.Color(unitFrame.targetUnitID))\n        self.TargetName:Show()\n        \n        \n    end\nend\n\n\n\n",
    },
    ["Time"] = 1677555851,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["affix"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["role"] = {
    },
    ["class"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136080,
    ["Enabled"] = true,
    ["Revision"] = 3278,
    ["Options"] = {
    {
    ["Type"] = 4,
    ["Key"] = "roleIcon",
    ["Value"] = true,
    ["Name"] = "Add Role Icon",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Key"] = "leftIcon",
    ["Value"] = false,
    ["Name"] = "Role Icon to Left",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Default is Right",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Change text when target is You",
    ["Value"] = true,
    ["Key"] = "targetIsPlayer",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    ["Author"] = "호불-아즈샤라",
    ["Desc"] = "Change Target Name Color",
    ["Prio"] = 99,
    ["Name"] = "Cast Target Text Format",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["semver"] = "",
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Zone Changed",
    ["UID"] = "0x64454bed53d1e2",
    ["Hooks"] = {
    ["Zone Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --if (not modTable.npHook) then\n    -- modTable.npHook  = true;\n    local _,instanceType = GetInstanceInfo()\n    \n    \n    \n    \n    -- if ( instanceType == \"party\" or instanceType == \"raid\") then\n    -- SetCVar (\"nameplateShowFriends\", 0)\n    -- else\n    if  GetZoneText()  == \"达拉然\"  \n    or\n    GetZoneText()  == \"奥格瑞玛\"  \n    or\n    GetZoneText()  == \"暴风城\"  \n    or\n    --GetZoneText()  == \"禁忌离岛\"  \n    -- or\n    GetZoneText()  == \"奥格瑪\"  \n    or\n    GetZoneText()  ==\"达拉然\"    \n    or\n    --GetZoneText()  ==  \"禁忌之境\"\n    -- or\n    GetZoneText()  ==  \"暴風城\"\n    then\n        \n        --SetCVar (\"nameplateShowFriends\", 1)\n        SetCVar (\"nameplateShowFriendlyNPCs\", 0)\n    else\n        -- SetCVar (\"nameplateShowFriends\", 1)\n        SetCVar (\"nameplateShowFriendlyNPCs\", 1)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1697188838,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["role"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132123,
    ["Enabled"] = true,
    ["Revision"] = 538,
    ["semver"] = "",
    ["Author"] = "七盏星夜酒-世界之樹",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "autozone",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Constructor",
    ["Hooks"] = {
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
    ["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
    ["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
    ["Initialization"] = "function (modTable)\n    \n    \n    function modTable.updateInterruptIDs () end\n    function modTable.setCastColorFunction (unitFrame) end\n    function modTable.updateInterruptId (unitFrame) end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickReadyInTimeGraceTime = modTable.config. kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        --        local specId = GetSpecializationInfo(GetSpecialization())\n        --        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        \n        local interruptsSpells = {\n            47528, -- Mind freeze\n            16979, -- Feral charge - bear\n            34490, -- Silencing shot\n            2139,  -- Counterspell    \n            853,   -- Hammer of Justice\n            15487, -- Silence\n            1766,  -- Kick\n            57994, -- Wind Shear\n            19244, -- Spell lock\n            72,    -- Shield Bash\n            6552,  -- Pummel    \n        }\n        \n        for _,v in pairs(interruptsSpells) do    \n            if IsPlayerSpell(v) then        \n                interruptIDs[v] = true\n            end\n        end\n        \n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        --        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- overwrite the color function:\n        unitFrame.castBar.GetCastColor = function (self)\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            if self.interruptSpellIDs and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" and FindSpellOverrideByID(playerAbility) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            -- workaround for WL: assume you only have one intterrupt, so check if the CD is actually > 0. defaults to 0 later\n                            if tmpInterruptCD > 0 and (not interruptCD or (tmpInterruptCD < interruptCD)) then\n                                interruptCD = tmpInterruptCD\n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif (self.channeling) then\n                return self.Colors.Channeling\n                \n            else        \n                return self.Colors.Casting\n                \n            end\n        end\n    end\n    \nend",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
    },
    ["Time"] = 1682766404,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 132219,
    ["Enabled"] = true,
    ["Revision"] = 537,
    ["semver"] = "",
    ["Author"] = "Viash-Thrall",
    ["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
    ["Prio"] = 99,
    ["Name"] = "Interrupt Cast Colour",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 1,
    ["Name"] = "施法过程打断技能不能打断",
    ["Value"] = {
    1,
    0.2000000178813934,
    0.4039216041564941,
    1,
    },
    ["Key"] = "noKickReadyColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "施法过程打断技能可转好",
    ["Value"] = {
    0.50196078431373,
    0,
    1,
    1,
    },
    ["Key"] = "kickReadyInTimeColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 1,
    ["Desc"] = "",
    ["Min"] = 0,
    ["Name"] = "相应时间",
    ["Value"] = 0.5,
    ["Fraction"] = true,
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Key"] = "kickReadyInTimeGraceTime",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Updated",
    ["UID"] = "0x64205b583d5e903b",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
    ["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        \n        --WOTLK--\n        \n        --TOGC Alliance Champion\n        \n        [34465] = modTable.config[\"t1Mobs\"], -- HolyPal\n        [34471] = modTable.config[\"t1Mobs\"], -- RetryPal\n        [34461] = modTable.config[\"t2Mobs\"], -- FrostDK\n        [34460] = modTable.config[\"t3Mobs\"], -- DruidBalance\n        [34469] = modTable.config[\"t3Mobs\"], -- DruidRestor\n        [34467] = modTable.config[\"t4Mobs\"], -- SurvHunt\n        [34468] = modTable.config[\"t5Mobs\"], -- ArcaneMage\n        [34466] = modTable.config[\"t6Mobs\"], -- Disc\n        [34473] = modTable.config[\"t6Mobs\"], -- Spriest\n        [34472] = modTable.config[\"t7Mobs\"], -- SubRog\n        [34463] = modTable.config[\"t8Mobs\"], -- Enha\n        [34470] = modTable.config[\"t8Mobs\"], -- RestorShaman\n        [34474] = modTable.config[\"t9Mobs\"], -- Afli\n        [34475] = modTable.config[\"t10Mobs\"], -- Arms\n        \n        --TOGC Horde Champion\n        \n        [34445] = modTable.config[\"t1Mobs\"], -- HolyPal\n        [34456] = modTable.config[\"t1Mobs\"], -- RetryPal\n        [34458] = modTable.config[\"t2Mobs\"], -- FrostDK\n        [34451] = modTable.config[\"t3Mobs\"], -- DruidBalance\n        [34459] = modTable.config[\"t3Mobs\"], -- DruidRestor\n        [34448] = modTable.config[\"t4Mobs\"], -- SurvHunt\n        [34449] = modTable.config[\"t5Mobs\"], -- ArcaneMage\n        [34447] = modTable.config[\"t6Mobs\"], -- Disc\n        [34441] = modTable.config[\"t6Mobs\"], -- Spriest\n        [34454] = modTable.config[\"t7Mobs\"], -- SubRog\n        [34455] = modTable.config[\"t8Mobs\"], -- Enha\n        [34444] = modTable.config[\"t8Mobs\"], -- RestorShaman\n        [34450] = modTable.config[\"t9Mobs\"], -- Afli\n        [34453] = modTable.config[\"t10Mobs\"], -- Arms\n        \n        \n        --TOGC Val`Kyr\n        \n        [34496] = modTable.config[\"t11Mobs\"], -- Dark Val`Kyr\n        [34497] = modTable.config[\"t12Mobs\"], -- Light Val`Kyr\n        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame.namePlateUnitName]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
    },
    ["Time"] = 1695022513,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 250627,
    ["Enabled"] = true,
    ["Revision"] = 1142,
    ["semver"] = "",
    ["Author"] = "Pwhyu-Flamegor",
    ["Desc"] = "Color the nameplates of important Raid mobs",
    ["Prio"] = 2,
    ["Name"] = "Pwhyu - TOGC Colored Mobs",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Option 1",
    ["Value"] = "NPC Colors:",
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "HolyPal/Retry",
    ["Value"] = {
    1,
    0.48235297203064,
    0.80392163991928,
    1,
    },
    ["Key"] = "t1Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "FrostDK",
    ["Value"] = {
    0.76862752437592,
    0.11764706671238,
    0.22745099663734,
    1,
    },
    ["Key"] = "t2Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
    },
    {
    ["Type"] = 1,
    ["Name"] = "DruidBalance/Restor",
    ["Value"] = {
    1,
    0.46666669845581,
    0.1294117718935,
    1,
    },
    ["Key"] = "t3Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
    },
    {
    ["Type"] = 1,
    ["Name"] = "SurvHunt",
    ["Value"] = {
    0.80000007152557,
    1,
    0.44705885648727,
    1,
    },
    ["Key"] = "t4Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Mage",
    ["Value"] = {
    0,
    0.83921575546265,
    1,
    1,
    },
    ["Key"] = "t5Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Disc",
    ["Value"] = {
    0.98039221763611,
    1,
    0.95294123888016,
    1,
    },
    ["Key"] = "t6Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "SPriest",
    ["Value"] = {
    0.98039221763611,
    1,
    0.95294123888016,
    1,
    },
    ["Key"] = "t6Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "SuBRog",
    ["Value"] = {
    1,
    0.99215692281723,
    0.29019609093666,
    1,
    },
    ["Key"] = "t7Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Enhan/Restor",
    ["Value"] = {
    0,
    0.43921571969986,
    0.8666667342186,
    1,
    },
    ["Key"] = "t8Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Afli",
    ["Value"] = {
    0.52941179275513,
    0.53333336114883,
    0.93333339691162,
    1,
    },
    ["Key"] = "t9Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Arms",
    ["Value"] = {
    0.77647066116333,
    0.60784316062927,
    0.42745101451874,
    1,
    },
    ["Key"] = "t10Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Val`Kyr Dark",
    ["Value"] = {
    0.019607843831182,
    0.062745101749897,
    0.74901962280273,
    1,
    },
    ["Key"] = "t11Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Val`Kyr Dark",
    ["Value"] = {
    0.9215686917305,
    1,
    0.92549026012421,
    1,
    },
    ["Key"] = "t12Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 6",
    ["Value"] = 0,
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 9",
    ["Value"] = 0,
    ["Key"] = "option9",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 18",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 21",
    ["Value"] = 0,
    ["Key"] = "option21",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Additional Options:",
    ["Value"] = "Additional Options:",
    ["Key"] = "option26",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Healthbar",
    ["Value"] = true,
    ["Key"] = "colorHealthbar",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Name",
    ["Value"] = false,
    ["Key"] = "colorName",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Raid Mark Colors",
    ["Value"] = false,
    ["Key"] = "raidMarkColors",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Use Threat Colors",
    ["Value"] = true,
    ["Key"] = "threatColors",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Rares",
    ["Value"] = false,
    ["Key"] = "rareEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Constructor",
    ["Hooks"] = {
    ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend\n\n\n",
    ["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            --self.HighlightTexture:SetScale(0.55)\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"overlay\", nil, 0)\n        -- local glow = CreateFrame (\"frame\", nil, unitFrame.healthBar)\n        -- glow:SetFrameLevel (unitFrame.healthBar:GetFrameLevel() +0)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetScale(1.1)\n        glow:SetWidth(130)\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        --hover:ClearAllPoints()\n        glow:SetPoint (\"center\", unit.healthBar, \"center\",  0,-15)\n        -- PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        --  PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        --  PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        -- PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
    },
    ["Time"] = 1695186021,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = "INTERFACE\\ICONS\\inv_offhand_1h_artifactdoomhammer_d_06",
    ["Enabled"] = true,
    ["Revision"] = 615,
    ["semver"] = "",
    ["Author"] = "Viciouwu-Tarren Mill",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "Mouseover glow",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Title",
    ["Value"] = "MOUSEOVER HIGHLIGHT OPTIONS:",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Color",
    ["Value"] = {
    1,
    1,
    1,
    1,
    },
    ["Key"] = "glowColor",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Set color of the highlight texture.",
    },
    {
    ["Type"] = 3,
    ["Name"] = "Texture Path",
    ["Value"] = "Interface\\AddOns\\SharedMedia_MyMedia\\background\\Highlight2",
    ["Key"] = "texPath",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "Set texture path of the highlight texture.",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Size scaling",
    ["Value"] = "SCALING MODIFIERS FOR WIDTH AND HEIGHT:",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Size scaling",
    ["Value"] = "Width/height modifiers are based on percentage of healthbar size. Range from 0-1  (0.15 is 15%, 1 is 100% of the healthbar size).",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "X modifier",
    ["Value"] = "Set width of highlight texture (resizes texture horizontally).",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 200,
    ["Desc"] = "",
    ["Min"] = 0,
    ["Name"] = "X modifier",
    ["Value"] = 0.25,
    ["Key"] = "x",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Y modifier",
    ["Value"] = "Set height of highlight texture (resizes texture vertically).",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 2,
    ["Max"] = 200,
    ["Desc"] = "",
    ["Min"] = 0,
    ["Name"] = "Y modifier",
    ["Value"] = 0.5,
    ["Key"] = "y",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
    ["Fraction"] = false,
    },
    {
    ["Type"] = 6,
    ["Name"] = "Blank",
    ["Value"] = 0,
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "",
    ["Value"] = "SAVE.",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "",
    ["Value"] = "RELOAD UI AFTER SAVING CHANGES.",
    ["Key"] = "",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["LastHookEdited"] = "Constructor",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.UpdateNameplateAlpha (unitFrame)    \nend\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.UpdateNameplateAlpha (unitFrame)    \nend\n\n\n",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.UpdateNameplateAlpha (unitFrame)    \nend\n\n\n",
    ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.checkCombatState = true\n    envTable.NameplateAlpha = 1\n    envTable.NameplateAlphaInCombat = 0.7\n    envTable.NameplateTargetAlpha = 1\n    \n    function envTable.UpdateNameplateAlpha (unitFrame)\n        if unitFrame.namePlateUnitReaction == 4 then\n            if (unitFrame.namePlateIsTarget) then\n                if (not Plater.db.profile.range_check_enabled) then\n                    unitFrame:SetAlpha (envTable.NameplateTargetAlpha)\n                else\n                    if (unitFrame.namePlateInRange) then\n                        unitFrame:SetAlpha (envTable.NameplateTargetAlpha)\n                    end\n                end\n            else\n                if envTable.checkCombatState and (unitFrame.InCombat and Plater.IsInCombat()) then\n                    unitFrame:SetAlpha (envTable.NameplateAlphaInCombat)\n                else\n                    unitFrame:SetAlpha (envTable.NameplateAlpha)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    },
    ["Time"] = 1696229748,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["affix"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136047,
    ["Enabled"] = true,
    ["Revision"] = 108,
    ["Options"] = {
    },
    ["Author"] = "Kastfall-Azralon",
    ["Desc"] = "Adjusts the transparency for neutral units.",
    ["Prio"] = 99,
    ["Name"] = "Transparency Neutral Npcs v2",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["semver"] = "",
    ["HooksTemp"] = {
    },
    },
    {
    ["OptionsValues"] = {
    },
    ["LastHookEdited"] = "Nameplate Updated",
    ["UID"] = "0x64205b583d5e903b",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
    ["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        \n        --WOTLK--\n        \n        -- important - dark blue\n        --ICC\n        [37007] = modTable.config[\"t1Mobs\"], -- Заклятый страж ( огромный скелет ) \n        [37890] = modTable.config[\"t1Mobs\"], -- фанатик леди\n        [37813] = modTable.config[\"t1Mobs\"], -- саурфанг\n        [37023] = modTable.config[\"t1Mobs\"], -- Исследователь чумы\n        [37217] = modTable.config[\"t1Mobs\"], -- прелесть\n        [37025] = modTable.config[\"t1Mobs\"], -- Вонючка\n        [37662] = modTable.config[\"t1Mobs\"], -- Командир\n        [37970] = modTable.config[\"t1Mobs\"], -- Валанар\n        [37132] = modTable.config[\"t1Mobs\"], -- Воительница\n        [36791] = modTable.config[\"t1Mobs\"], -- разгром\n        [37531] = modTable.config[\"t1Mobs\"], -- большой перед синдрой\n        [37228] = modTable.config[\"t1Mobs\"], -- выйти из мили перед синдрой\n        [37698] = modTable.config[\"t1Mobs\"], -- Шарк\n        \n        \n        -- semi important - light blue\n        --ICC\n        [36724] = modTable.config[\"t2Mobs\"], -- слуга трона ( маг )\n        [37949] = modTable.config[\"t2Mobs\"], -- кастер леди\n        [38508] = modTable.config[\"t2Mobs\"], -- мобы на сурке\n        [37666] = modTable.config[\"t2Mobs\"], -- Рога\n        [37973] = modTable.config[\"t2Mobs\"], -- талдарам\n        [37134] = modTable.config[\"t2Mobs\"], -- Охотница\n        [37886] = modTable.config[\"t2Mobs\"], -- Пудж\n        [36701] = modTable.config[\"t2Mobs\"], -- Гневный\n        \n        \n        \n        \n        -- t3 mobs - light orange\n        --ICC\n        [36725] = modTable.config[\"t3Mobs\"], -- нерубский надзиратель ( паук внизу )\n        [37664] = modTable.config[\"t3Mobs\"], -- Маг\n        [37972] = modTable.config[\"t3Mobs\"], -- Келесет\n        [37934] = modTable.config[\"t3Mobs\"], -- Волдырный\n        \n        \n        --t4 - Puple\n        --ICC\n        [37595] = modTable.config[\"t4Mobs\"], -- ДК\n        [38125] = modTable.config[\"t4Mobs\"], -- телка для мили\n        [37230] = modTable.config[\"t4Mobs\"],\n        [37534] = modTable.config[\"t4Mobs\"],\n        [37533] = modTable.config[\"t4Mobs\"],\n        \n        --t5 - Pink\n        --ICC\n        [37663] = modTable.config[\"t5Mobs\"], -- Аристократ\n        \n        --t6 - yellow\n        --ICC\n        [37127] = modTable.config[\"t6Mobs\"], -- телка для кастеров\n        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame.namePlateUnitName]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
    ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
    },
    ["Time"] = 1696229753,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["affix"] = {
    },
    ["race"] = {
    },
    ["encounter_ids"] = {
    },
    ["spec"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 307585,
    ["Enabled"] = true,
    ["Revision"] = 1136,
    ["semver"] = "",
    ["Author"] = "Pwhyu-Flamegor",
    ["Desc"] = "Color the nameplates of important Raid mobs",
    ["Prio"] = 2,
    ["Name"] = "Pwhyu - ICC: Colored Mobs",
    ["PlaterCore"] = 1,
    ["version"] = -1,
    ["HooksTemp"] = {
    },
    ["Options"] = {
    {
    ["Type"] = 5,
    ["Name"] = "Option 1",
    ["Value"] = "NPC Colors:",
    ["Key"] = "option1",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Most Important:",
    ["Value"] = {
    0,
    0.086274509803922,
    1,
    1,
    },
    ["Key"] = "t1Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Semi Important",
    ["Value"] = {
    1,
    0.458823561668396,
    0.1450980454683304,
    1,
    },
    ["Key"] = "t2Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
    },
    {
    ["Type"] = 1,
    ["Name"] = "Less Important:",
    ["Value"] = {
    0.9568628072738647,
    0.5490196347236633,
    0.729411780834198,
    1,
    },
    ["Key"] = "t3Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "High HPt:",
    ["Value"] = {
    0.52549022436142,
    0,
    1,
    1,
    },
    ["Key"] = "t4Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "High priority:",
    ["Value"] = {
    0.95294123888016,
    0,
    1,
    1,
    },
    ["Key"] = "t5Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 1,
    ["Name"] = "t6:",
    ["Value"] = {
    1,
    0.87843143939972,
    0.050980396568775,
    1,
    },
    ["Key"] = "t6Mobs",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
    ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 6",
    ["Value"] = 0,
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 9",
    ["Value"] = 0,
    ["Key"] = "option9",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 18",
    ["Value"] = 0,
    ["Key"] = "option18",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 6,
    ["Name"] = "Option 21",
    ["Value"] = 0,
    ["Key"] = "option21",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 5,
    ["Name"] = "Additional Options:",
    ["Value"] = "Additional Options:",
    ["Key"] = "option26",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Healthbar",
    ["Value"] = true,
    ["Key"] = "colorHealthbar",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Name",
    ["Value"] = false,
    ["Key"] = "colorName",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Raid Mark Colors",
    ["Value"] = false,
    ["Key"] = "raidMarkColors",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Use Threat Colors",
    ["Value"] = true,
    ["Key"] = "threatColors",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
    },
    {
    ["Type"] = 4,
    ["Name"] = "Color Rares",
    ["Value"] = false,
    ["Key"] = "rareEnabled",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
    ["Desc"] = "",
    },
    },
    },
    {
    ["LastHookEdited"] = "Initialization",
    ["UID"] = "0x63724239353daa",
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    --此模组仅为显示当前配置版本号日期\n    --配置更新链接：https://afdian.net/a/shouliuge\nend\n\n\n",
    },
    ["Time"] = 1697188816,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["spec"] = {
    },
    ["map_ids"] = {
    },
    ["role"] = {
    },
    ["pvptalent"] = {
    },
    ["race"] = {
    },
    ["affix"] = {
    ["Enabled"] = true,
    ["131"] = true,
    },
    ["encounter_ids"] = {
    },
    ["class"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 134331,
    ["Enabled"] = true,
    ["Revision"] = 530,
    ["semver"] = "",
    ["Author"] = "暮色挽歌-秩序之源",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "!!谷谷神奇Plater：更新日志",
    ["PlaterCore"] = 1,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 3",
    ["Value"] = 0,
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Name"] = "【正式服】更新日志：",
    ["Value"] = "http://i7q.cn/621Sn0",
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Key"] = "option5",
    ["Value"] = "http://i7q.cn/5MeSYf",
    ["Name"] = "【怀旧服】更新日志：",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "",
    },
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["LastHookEdited"] = "Nameplate Updated",
    ["UID"] = "0x6527775dc6877",
    ["Hooks"] = {
    ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.updateColor(unitFrame)\nend\n\n\n\n\n\n",
    ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local texture1 = [[Interface\\AddOns\\SharedMedia_MyMedia\\background\\NeonReticule]]  \n    function envTable.updateColor(unitFrame)\n        --private\n        if (not unitFrame.healthBar.JD) then   \n            local JD = CreateFrame (\"frame\", nil, unitFrame.healthBar)\n            JD:SetFrameLevel (unitFrame.healthBar:GetFrameLevel()  +0)\n            --star:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", 0, 0)\n            -- star:SetPoint (\"bottomright\", unitFrame.healthBar, \"bottomright\", 0, 0)\n            unitFrame.healthBar.JD = JD \n            local innerBorder = Plater:CreateImage (JD, texture) \n            JD.borderTexture = innerBorder\n        end \n        \n        \n        local healthBar = unitFrame.healthBar\n        local borderTexture = healthBar.JD.borderTexture\n        \n        borderTexture:SetPoint (\"center\", unitFrame.healthBar, \"center\",  0, 0)\n        --borderTexture:SetPoint (\"center\", unitName, \"center\", 0, 0)\n        borderTexture:SetScale(0.6)\n        --borderTexture:SetVertexColor (DetailsFramework:ParseColors (borderColor))\n        --  borderTexture:SetAlpha (alpha)    \n        borderTexture:SetTexture (texture1)\n        --borderTexture:SetSize(30,30)\n        if unitFrame.IsFocus then  \n            borderTexture:Show()\n        else\n            borderTexture:Hide()\n        end\n        -------------\n        --unitFrame.healthBar.barTexture:Update() \n        --function envTable.UpdateNameplateAlpha (unitFrame) \n        \n    end\n    \nend\n\n\n\n\n\n",
    },
    ["Time"] = 1697188820,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["class"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["spec"] = {
    },
    ["affix"] = {
    },
    ["encounter_ids"] = {
    },
    ["role"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 136103,
    ["Enabled"] = true,
    ["Revision"] = 78,
    ["semver"] = "",
    ["Author"] = "仙人揽六著-世界之樹",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "JD Texture",
    ["PlaterCore"] = 1,
    ["Options"] = {
    },
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    {
    ["LastHookEdited"] = "Initialization",
    ["UID"] = "0x65277ce021f0a7",
    ["Hooks"] = {
    ["Initialization"] = "function (modTable)\n    --此模组仅为显示当前配置版本号日期\n    --配置更新链接：https://afdian.net/a/shouliuge\nend\n\n\n",
    },
    ["Time"] = 1697708749,
    ["LoadConditions"] = {
    ["talent"] = {
    },
    ["group"] = {
    },
    ["spec"] = {
    },
    ["map_ids"] = {
    },
    ["race"] = {
    },
    ["pvptalent"] = {
    },
    ["role"] = {
    },
    ["affix"] = {
    ["Enabled"] = true,
    ["131"] = true,
    },
    ["encounter_ids"] = {
    },
    ["class"] = {
    },
    },
    ["url"] = "",
    ["Icon"] = 463880,
    ["Enabled"] = true,
    ["Revision"] = 532,
    ["Options"] = {
    {
    ["Type"] = 6,
    ["Name"] = "Option 3",
    ["Value"] = 0,
    ["Key"] = "option3",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Name"] = "谷谷神奇Plater配置 - 更新链接：",
    ["Value"] = "afdian.net/a/shouliuge",
    ["Key"] = "option4",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Key"] = "option5",
    ["Value"] = "http://i7q.cn/69uuxR",
    ["Name"] = "谷谷神奇Plater配置 - 外观预览：",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "",
    },
    {
    ["Type"] = 3,
    ["Name"] = "谷谷神奇Plater配置 - 功能介绍：",
    ["Value"] = "http://i7q.cn/5MkQKd",
    ["Key"] = "option6",
    ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
    ["Desc"] = "",
    },
    },
    ["Author"] = "暮色挽歌-秩序之源",
    ["Desc"] = "",
    ["Prio"] = 99,
    ["Name"] = "!!谷谷神奇-配置: 2023.10.19",
    ["PlaterCore"] = 1,
    ["semver"] = "",
    ["HooksTemp"] = {
    },
    ["version"] = -1,
    },
    },
    ["extra_icon_caster_outline"] = "OUTLINE",
    ["auras_per_row_amount2"] = 2,
    ["disable_omnicc_on_auras"] = true,
    ["aura_width"] = 17,
    ["bossmod_support_enabled"] = false,
    ["ghost_auras"] = {
    ["width"] = 10.685844421387,
    ["height"] = 10.472039222717,
    ["auras"] = {
    ["PRIEST"] = {
    [3] = {
    [589] = true,
    [34914] = true,
    },
    },
    ["WARLOCK"] = {
    {
    [980] = true,
    [172] = true,
    },
    },
    },
    },
    ["blizzard_nameplate_large_font_size"] = 9,
    ["pet_width_scale"] = 0.9999999403953552,
    ["extra_icon_timer_size"] = 15,
    ["target_highlight_color"] = {
    1,
    1,
    },
    ["first_run3"] = true,
    ["version"] = 9,
    ["OptionsPanelDB"] = {
    ["PlaterOptionsPanelFrame"] = {
    ["scale"] = 1.2799999713898,
    },
    },
    ["aura2_grow_direction"] = 1,
    ["extra_icon_stack_outline"] = "OUTLINE",
    ["click_space"] = {
    125,
    37,
    },
    ["extra_icon_auras"] = {
    66129,
    66193,
    },
    ["ui_parent_cast_level"] = 10,
    ["cast_statusbar_spark_width"] = 13,
    ["ui_parent_buff2_level"] = -1,
    ["aura_border_colors_by_type"] = true,
    ["range_check_in_range_or_target_alpha_friendlies"] = 0.8999999761581421,
    ["script_auto_imported"] = {
    ["Relics 9.2 M Dungeons"] = 2,
    ["Cast - Effect After Cast [P]"] = 2,
    ["Explosion Affix M+"] = 14,
    ["Aura - Debuff Alert"] = 12,
    ["Cast - Castbar is Timer [P]"] = 2,
    ["Cast - Ultra Important"] = 14,
    ["Add - Health Markers [P]"] = 2,
    ["Cast - Small Alert"] = 12,
    ["Add - Important [P]"] = 4,
    ["Unit - Main Target"] = 11,
    ["Aura - Blink Time Left"] = 13,
    ["Add - Tag Number [P]"] = 2,
    ["Unit - Health Markers"] = 12,
    ["Cast - Glowing [P]"] = 10,
    ["Unit - Important"] = 11,
    ["Cast - Very Important"] = 15,
    ["Cast - Alert + Timer [P]"] = 4,
    ["Aura is Shield [P]"] = 2,
    ["Add - Warning [P]"] = 5,
    ["Fixate On You"] = 11,
    ["Aura While Casting [P]"] = 1,
    ["Cast - Big Alert"] = 14,
    ["Cast - Shield Interrupt"] = 2,
    ["Cast - Circular Swipe"] = 4,
    ["Cast - Quick Flash"] = 2,
    ["Add - Explode on Die [P]"] = 1,
    ["Auto Set Skull"] = 11,
    ["Cast - Important Target [P]"] = 2,
    ["Add - Non Elite Trash [P]"] = 4,
    ["Cast - Stop Casting"] = 4,
    ["Countdown"] = 11,
    ["Cast - On Going Cast [P]"] = 2,
    ["Fixate by Unit Buff [P]"] = 2,
    ["Cast - Frontal Cone"] = 15,
    ["Fixate"] = 11,
    ["Aura - Buff Alert"] = 15,
    ["Spiteful Affix"] = 3,
    ["Cast - Tank Interrupt"] = 12,
    ["Unit - Show Energy"] = 11,
    },
    ["not_affecting_combat_enabled"] = true,
    ["transparency_behavior_use_division"] = true,
    ["health_animation_time_dilatation"] = 5,
    ["auras_per_row_auto"] = false,
    ["aura_grow_direction"] = 3,
    ["pet_height_scale"] = 0.9999999403953552,
    ["aura_x_offset"] = 0,
    ["range_check_alpha_friendlies"] = 0.6499999761581421,
    ["aura_sort"] = true,
    ["aura_timer_text_size"] = 9,
    ["cast_statusbar_fadeout_time"] = 0.4999999701976776,
    ["extra_icon_timer_outline"] = "OUTLINE",
    ["aura_stack_color"] = {
    nil,
    0.88627450980392,
    0.76862745098039,
    },
    ["ui_parent_buff_level"] = -1,
    ["use_ui_parent"] = true,
    ["cast_statusbar_texture"] = "A04",
    ["patch_version"] = 35,
    ["indicator_raidmark_anchor"] = {
    ["x"] = -6,
    },
    ["tank"] = {
    ["colors"] = {
    ["pulling_from_tank"] = {
    nil,
    0.70196078431373,
    },
    ["anothertank"] = {
    0,
    0.72156862745098,
    },
    ["aggro"] = {
    0.33333333333333,
    0.90196078431373,
    0.71372549019608,
    },
    ["noaggro"] = {
    nil,
    0.17647058823529,
    0.17647058823529,
    },
    ["nocombat"] = {
    0.70980392156863,
    0.68627450980392,
    1,
    },
    ["pulling"] = {
    nil,
    0.8,
    },
    },
    },
    ["aura_tracker"] = {
    ["buff_tracked"] = {
    ["227931"] = true,
    [69910] = true,
    [13847] = true,
    ["373011"] = false,
    [64844] = true,
    [69924] = true,
    [6940] = true,
    [41196] = true,
    [54521] = true,
    [66235] = true,
    ["233210"] = true,
    [65961] = true,
    [19753] = true,
    [67801] = true,
    [53479] = true,
    [27779] = true,
    [66009] = true,
    [67251] = true,
    [61610] = true,
    [65860] = true,
    [71938] = true,
    ["297133"] = true,
    [53766] = true,
    [66023] = true,
    ["209859"] = true,
    ["163689"] = true,
    ["373785"] = true,
    [70190] = true,
    },
    ["buff_banned"] = {
    ["333553"] = true,
    ["61574"] = true,
    ["206150"] = true,
    ["61573"] = true,
    },
    },
    ["castbar_target_show"] = true,
    ["health_statusbar_bgcolor"] = {
    0.11372549019608,
    0.11372549019608,
    0.11372549019608,
    0.80783343315125,
    },
    ["cast_statusbar_color"] = {
    nil,
    0.96078431372549,
    nil,
    1,
    },
    ["update_throttle"] = 0.5,
    ["border_color"] = {
    0.007843137254902,
    0.007843137254902,
    0.007843137254902,
    1,
    },
    ["color_override_colors"] = {
    [3] = {
    1,
    0,
    0,
    },
    [4] = {
    1,
    1,
    0,
    },
    },
    ["focus_indicator_enabled"] = false,
    ["hover_highlight_alpha"] = 0.2199999988079071,
    ["castbar_icon_show"] = false,
    ["indicator_extra_raidmark"] = false,
    ["castbar_target_anchor"] = {
    ["side"] = 6,
    },
    ["not_affecting_combat_alpha"] = 0.3999999761581421,
    ["extra_icon_height"] = 22,
    ["target_highlight"] = false,
    ["use_health_animation"] = true,
    ["target_highlight_alpha"] = 1,
    ["news_frame"] = {
    ["PlaterNewsFrame"] = {
    ["scale"] = 1.1000000238419,
    },
    },
    ["bossmod_cooldown_text_size"] = 15,
    ["cvar_default_cache"] = {
    ["nameplateMinAlpha"] = "0.90135484",
    ["nameplateShowEnemies"] = "1",
    ["nameplateOccludedAlphaMult"] = "0.39999997615814",
    },
    ["aura_show_only_short_dispellable_on_players"] = true,
    ["auto_toggle_stacking_enabled"] = true,
    ["target_shady_alpha"] = 0.199999988079071,
    ["tap_denied_color"] = {
    0.47843137254902,
    0.47843137254902,
    0.47843137254902,
    },
    ["bossmod_icons_anchor"] = {
    ["side"] = 6,
    },
    ["target_highlight_height"] = 10,
    ["extra_icon_auras_mine"] = {
    ["204301"] = false,
    },
    ["health_selection_overlay"] = "11StripesOverlay2",
    ["cast_statusbar_color_interrupted"] = {
    nil,
    0,
    0,
    },
    ["no_spellname_length_limit"] = true,
    ["range_check_in_range_or_target_alpha"] = 1,
    ["ui_parent_buff_special_strata"] = "DIALOG",
    ["number_region_first_run"] = true,
    ["aura_show_enrage"] = true,
    ["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
    ["ui_parent_target_strata"] = "MEDIUM",
    ["ui_parent_scale_tune"] = 1.428571452899855,
    ["dps"] = {
    ["colors"] = {
    ["notontank"] = {
    0.50196078431373,
    0.50196078431373,
    },
    ["aggro"] = {
    nil,
    0.17647058823529,
    0.17647058823529,
    },
    ["noaggro"] = {
    0.33333333333333,
    0.90196078431373,
    0.71372549019608,
    },
    },
    },
    ["indicator_rare"] = false,
    ["indicator_elite"] = false,
    ["auto_toggle_stacking"] = {
    ["cities"] = true,
},}
    

-- FFXIV
WKPlaterConfig_Name_FFXIV = "FFXIV Style"
WKPlaterConfig_FFXIV = {}

-- 设置当前配置
function WKPlaterSetCurrentConfig(fullName, styleName, profile)
    if not fullName then return end
    if not styleName then return end
    if #fullName == 0 or #styleName == 0 then return end

    -- 设置PlaterDB默认配置
    if not PlaterDB then PlaterDB = {} end
    if not PlaterDB["profileKeys"] then PlaterDB["profileKeys"] = {} end
    -- 对应plater配置设置下拉
    PlaterDB["profileKeys"][fullName] = styleName

    if not profile then return end
    -- 设置PlaterDB当前配置
    if not PlaterDB["profiles"] then 
        PlaterDB["profiles"] = {} 
        PlaterDB["profiles"][styleName] = profile
    end
    if not PlaterDB["profiles"][styleName] then 
        PlaterDB["profiles"][styleName] = profile
    end
    WindKit.currentPlaterProfile = profile
end

-- 设置默认配置
function WKPlaterSetDefaultConfig(name, realm)
    local name = name
    local realm = realm
    local fullName = name.." - "..realm

    local defaultConfig = WKPlaterConfig_Default
    local simpleStyleConfig = WKPlaterConfig_SimpleStyle

    -- 设置PlaterDB默认配置
    if not PlaterDB then PlaterDB = {} end
    if not PlaterDB["profileKeys"] then PlaterDB["profileKeys"] = {} end
    -- 对应plater配置设置下拉
    PlaterDB["profileKeys"][fullName] = WKPlaterConfig_Name_SimpleStyle

    if not PlaterDB["profiles"] then 
        PlaterDB["profiles"] = {} 
        PlaterDB["profiles"].Default = defaultConfig
        WindKit.currentPlaterProfile = defaultConfig
    end
    if not PlaterDB["profiles"][WKPlaterConfig_Name_SimpleStyle] then 
        PlaterDB["profiles"][WKPlaterConfig_Name_SimpleStyle] = simpleStyleConfig
        WindKit.currentPlaterProfile = simpleStyleConfig
    end
    
end

